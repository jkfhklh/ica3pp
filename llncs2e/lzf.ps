%!PS-Adobe-2.0
%%Creator: dvips(k) 5.998 Copyright 2018 Radical Eye Software
%%Title: /Users/white/Documents/GitHub/ica3pp/llncs2e/.texpadtmp/lzf.dvi
%%CreationDate: Fri May  4 06:03:16 2018
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR10 CMR9 CMTT9 CMSY9 CMBX9 CMBX10 CMTI10 CMTI9
%%+ CMMI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /Library/TeX/texbin/dvips -o
%+ /Users/white/Documents/GitHub/ica3pp/llncs2e/.texpadtmp/lzf.ps
%+ /Users/white/Documents/GitHub/ica3pp/llncs2e/.texpadtmp/lzf.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.05.04:1403
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91051800EE6C54285
AB0594D87D05EB4CB44FFC094DA0072AE7D4BF2F4F9BB812FED256B937BC2574
8C529F97ABA6DAD956BFFC367448EB7FE9D1975B82DF29D520370354429740FD
C55226BF63CA700BBB868F713AE6B4B891BF47CC2EAF14877F5FC21C72AE41F4
BEF155B28ACF0458F6D0913972E771285FA368EF7CD55F0E5E3B2B5BC4C9E8A7
CAC89667C966C7A0517B909E752ED2A2CD604BDCE93D2247D5A603D163CAA250
AEBF479535C34E5063E67207C507454F2A76A45B776B4B3C9916D9E8C94EC2FB
ABAE3552F71CE1FFE48C00554707A2604897546FDFBBE0F36410A80C6ED763BD
FE16CAD8A4692FC306F233975885DD6FA5DEEC88203E9221F67484DD83BDA8B1
09E906D0F26B9A904F60972705AB65BC5AFD9F9E350380FCB4B0276A0524535A
489B8F4E1ACA2ECBBA8EED513EFCC0E61882E371793A223DBBD5CFB45E4BBFB3
9D76E3373F09A57CB319998018CA7F1668CB52A00D2A330B3C0148E8CEE1746A
8BACFEB7CD75153978B12F6C833C529DAC0B63B24331CC999DA586BA10EAD9BF
226E611343378B8EE055FEFB398CF5A5215BC258199F98E594D65CAAF1DE621D
E4238BAFDE59DBC4AB69ADC77FB529BD2B1651BCF681AABE01A9189B4AC46955
DC0E8776A4C401B26E9253B2C5A07B4FC5CC72C9446AB884E2A350DE6F15EFAF
FB8F8510E2111E626F610EF1CC6911CFFAA0BFC434427B24FADC2B17906D07A1
FD6C56353A1F380F0DA2E05572DF4AFB3E28EC60E246D67A7ACD60B40ACA4D5B
5E7EABC6F39FAF23733D26E39CB1C7570338EF118DC382765090D6186886838A
9D1CD12830A595C27E93518B2E8DA5FAB0BE98975FC904616C05847C2F4A6836
319BAA06093DAD6DC72F947D4881E671220AC0DC04A8CE0DAA2C226030231690
AA1FCAC639911ED82336AC8F20AA5B3139D2E9F427B4ABD6F75964E494D79A5C
5D8D57C6E5BE66B0FF7B1AFA5DFB1E5D47A794303BADA2DA1D6E6BB5A5387F6A
FA7A5759A7C28A47E311C3769B5540215849F146C3466AF12B106F2476AFD38C
8C9AB214D0509089311B5D156D95730263D499ECB79D31BFAA80C64686F2C3DD
38AB1A4BA1D580785EFB26D4971EAEA6B8962EEEB18C028E667FE28460E92BFC
91FB7828FEAF29CEFC8E1983
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 72 /H put
dup 76 /L put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C85558031F5D1B00F3C41E627B1DB9876EE658C
50AB296BCF6987C92C60EA329075C391FE8162A7ED4E48FEEF9A7ABD6C26A1A2
C667A8B8CD2647A9CFA8C792FFE0C2F0DE0C0E93D1A7B33E8E7872F061FD9655
F39311738856E18EA0D00B495CB2457719FEA94CAB84DB6F5FC372411D7A0AB2
ADE0DE96EFD4C911DFDA9E71FDCEAFF5D560F3F5452B64A5DBFC767F42C2E275
BD357515CA488B6396DBB3F64411CA16977271074F78E59A64D710D418B800ED
C6B89803DB4C5C203539D1F5B72F010F93C7C4AD5B083D12593C3FB192661D2D
D29EF941C0FFE601698FDCE92045973835637CF0AB9DFC595937BF7D781331E6
78F335BFC3F213A9C80773876849A5DE2BA1F785DA4970B01E0322545CFE3285
AFEDD87CF46710EA0724F656056FF6E7FEB0C0477DA65B79AEACAF019F736B0B
E400B18DA926B3C76160D8DA73A825F5E284A960FF3BF2A28776293F35F6299A
16F2505F091C79DC80E303DDA479F1DFFA92519199E7BB2DB8BE5D529AE87BEA
9C10FBDB278575D4FF85EC06964AB08FBDCB3857D8EFE633570886FC177217D6
C2EA657E76ECA7C314564789ECA14A510C567F6535BD2E468D7C89C745832EF0
A0121CD1D217C7E82AB45324B1DC329E7319FBBFBB25E510C179923AF1C9E332
75605CC313C1692555C6D388D8EBB4B3E5B2E3A3F114CDD3E2DBE976E0224D09
6DF02CEB94C1D40AE7F091866617710EB269078DE2FDF5E5294ABA4C83D96A8A
4E2A6D6993C752D8019C8653124469F28D58DF18EF0BBC81A2889AD16BB4C95C
562BCF68DE331E1BD9AB2C41FD32CB3DA5B9F34538C5B7947990475B8E3A423F
2DC951D61D7E70BE217B6A0EA5AC25BB038A6420826DD236398E2EDD3074FFB8
F6CF01593A0463C2C800F293C527FC1317FEE078A0369AA43B2D2E207FB8FF8D
029C6F19A54B6561F075C6C1618DC78D14771DBCAC7D0D7993C913C1611B3AB3
7E92ACAEA349937EED4F7494B1ECCF3FB167E4761501C5AC8317B2F2FFE00887
FAEDAD76F6A8E38337A2565C92C4386B0DCFE46A887B4467A14D82AECA48E196
BFE5ED939EB32192619676DD813D387770062EE65AF277C5C61D5BD9AA93F58D
F1201F2F71C825994E3518D523172AC40E4548E1660100016241E81B5087E996
8C0BBE2D6D82771473208C1E9E5ACBC668EEAF66E5F4762140FA10BCABC5E956
A8C43985927B6B623EF03404C7043F77A2DC51746F5F88A2D1AA8C495BEA0397
B8A2F81D9A9D3BAAB7EEBFEA8B5543E3CD3A9A36B4EC7CB24D51BB5F1F929067
CB0E5D5140D36CFF79284EC1D87B7E1D2DBC0B78128B02747CD29FEE7FAE5E12
CBB3F8F0C422279E872CC60ABB401D5F81F8E91468165449788903D627865D41
FA6E1FA9C9D07FFF0E16F9E74BC13CE2FB674F4767C90DCC49763C63BC353814
F0BC366FED225A2B9915E0CB6A2E89F2023965CF1EFADA5F7EBF3FC9C4CBE322
A627CAA20C8830D31687E03BC0EFB537D52E4EF36180B046EFF3CAA1CF1EDCEC
4297196C53B6EA69433EFE91CF21BF71A9FFD34E10E9271B133E9FF6A5750F94
6A7CCCA12A2AC726A3EC2287EDB3B54CEDDB1E412A34A2989613BD43957E3F65
2301A312837F66C02896F1AC9E375D947EEB5AF31EE6C614E02F57E8B534CE35
DF8475C1404ED7F1133C5C60510DB04F44BF44881879362703E0CBAEB3B155A9
62A283E8DC9B9D624E662FD349CBF149BC9B97B4650FD44DB5DBF89CE32FC264
9522642B063361BC8983989CCB4CED9757CFB22505B1FB9CDFB17CED9961C5DF
5E11C5F9AD249E605CC735E3A98B02BB1517F3C18148299623932C0010FFF039
A35A655C5C2F464B322D16B220458403E6366CFEA6F36EEE9AB655802D1E2583
CB27B5D440B918005A09249FC86019CEF6164CBB375B1A4CCF23277532C426BA
DD8C54D0A9984ADDD556EF37C7D644FD98BB9271CC23D1669FF567FB5FE83B09
839EAF8C1E6502189DD5E38602001C8F53761BF6A5DE33BAD4A1CD390E1D8D36
73FEE590CBB7038266A5409375EA9D6A61F0620E630343D8D0D6F26FEF725096
C9E9999F6EE509B492632CE3344AA4EB2C7AFF540AD43214C21AB45B80B2207F
B0F493B9E19A5E06DD71A1FC2A1B217B73E4D58E9D386D1089817A347782C39F
6F165E68149A92244E86CEBD24D150063778DF9059BD44CD82E6891224A56183
25FDFC8CFF825D2E0BBC95EE6AE3DD1C3826F09FD6583EEAE7D5C74A61D11798
C6CF0322ADBECBA991E3C42C8BDEB03B7D0064D4696F39084B0343BF7EC71484
189CF5BED087A18508733014AFDCEC157CEA7A4E77D8EF227F8250ED5BCA4695
4B56E515FAADCD8F1C3D4DB974DA2624EEE7B115C61871383915B7DC6FEFF860
131E59F9C4FCE7CD5D0B60547620F7E3412B94776BB13D90C6A6914E926C7A43
38DC9D29E2C683DC2C64BFE250549228BC0873D18BE836533811A8DF5D4446FF
F43C59BCFED70A5B2D4BCB77C3789B589B06EA6AA497ECEADFCF554CEAEBEE9B
32EDC2677B490667FB7F02021A590A48657C0BAC0869E1D7B2985B891ABBAB79
80B1B156169C0999B18CB6BD988565EE172E6606984B3E4E2485C4D4D257E5A8
EFF248EB3E3C3C1DEC8F6E2D143276C5A7399942664FF36EA33EE59BA5725A91
19666A10C441927033DA1DB831370035AA75467C7F60B1DAAB89C888527869A5
A6F208A64B347353EC473F5A6C1385C94E1A3BC4EE97797F4D06D6C15119BF9B
D3742DE775A06A166AC34948AFDF91CEA52A7197611355FDDCA08486B3CF007D
4D9EC6113FDDDD8F5D289366EDFF0E24C40224F245F3A4CB2D406CCD53503DFF
9A006AB8977BCF1357D5D7842C1C6543211A982CC067DC8C69D549135F7AD829
2C65F139580923A7AACAFEAA57AE423DA7BF355E7457DE669B15E9D890760CE3
F636C7CBAA156344A710A6BB4DD055C6071DEA358F3D43E96584A9E543EA395B
67210EF16F56FEFCBC9698253F435DCBB964406F89D2AF1AE230888BA674B796
B28CF0CF8C231E767DE27013A18BC3A9DC61B2F299F854BE6FC7DB6756218D7F
BF324BFD7FE901F7FEF8041C8357BFC5948ACFC272E9486B79CC0AC24D484772
55347625BF147E91D5A4A109E88E322337059BE45B15A8BC03C1D7A925F0F4A7
07E3CBBE7D45E0DED2EC12FA29BDAE904A126BA34B794AFBBFC722D054976BDF
F34D0150A7A876D26B18AC7FD0854748ADAE35911481BC7384A5F874EDF0AB1F
2B5C97A5E40A3FD56C2759A381A5A6FFC67365F0B8B83BCD4B4A0870A44DF2F0
2D3912295B0EF837166F170AEDDA94BACB78C2DD048ADD9F79C703C4EF896876
E3672F312C8D79A7D021B53A8097B4B217FB54C7A7B4BD8FA20B23EEFBF9060C
13CE9E7B6AC9F03CC8EC1B6007ED62CBBE9E90B4A902BE568069CBC5878D1C16
ECE9082DD5319F45CE4F33205B861A01B61316C3BE3D00DDB0981CA0569F9B61
CA3851587C83CE622967C86E358DC99D1029CBAF64EF2C80A8CA767D74DF0CF8
7757B3FF7B83FA51F2466F9DA14DCFED81721370ABD3802B100ACF7270E5C500
82E254FF40B383B4F155006706ABE5C0F94AE986BDCB0345D6478565FCD12563
C0E2CCD3B7842B405A1384C75CF3A2124B28717AEAF8A97F066A8FD0DE74F718
477FDC2A9BB71721A16FFEEA76205F031B8AE333A92B8BF1284E8C575A409EFB
AAE5D9BA12DB48844CF1077FE7E9004B4566BA5229FFD67382AA7B3C24FAD92B
8ED0CB4F42DAE24B8D6E1ECF45BD5E55E8B44CDC722FC42F7BB2F5CB3446D7D7
AC0127C50BC9832B9EF386E28109462AF0E3857D13314705AC7DC888701A6BE2
822CD93CB238299AE6E6AD7F7322A44E8333127BE890743C1067635DBDBB72BF
A4351F1DA3B965FCCF2C45E72F25D4BB966D06CE36BF19A000FC52A9093E31E1
76314E42869DDEE75801F52420583D57204CCC7C207FB1FA3CFC048918B963F0
F955B24D60271CD8BD98A3EFF1AEAF689E48033760D6320EEA73817E24EC1026
74465686BC8DCF8401F9CA6CCFD049D76A0933CB0B9CF629E1449A6627BE3C27
94A7D2BF8AEE0AE5DE685AB2FD35198C9CC102D973A558082903F687EB37CDA6
89A5D27927E5E5D390B76E4B84BDB7C4BFEBA123A70DC6967F846CFF0713498B
7763A761259972C87E387C6A8EC49608DDBA5F28D9EE815C396BB2B86AC4CC51
E0C9CA67874491744CB88ACEC3E93E84788FDDF356A8F4774C368CFFA34835B8
50E745D7A33F844A42FDE0030DD2CB8BE527AED0F515EAD211D99A4B2957E10F
A16BE6D38E5766F3A9BFFC0AE1C974B5E419AA085E81C011BB6FCFC5729B2B17
17BD4325066A259F44DEAC3C60E5A2970BFF6D3F0D758BC04C826A59CA051603
86D180B6E6FCE947A32CE72C5B97A9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 76 /L put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CB99C685815
93A6CEBAFE9A9136C3AAE071B00E732B7721C7A3A8D01276AE06E8767ACBAA92
E17518435ECFC9B42C21EB1D9BA4DD79569DE87FE23F11E65E7C1141A7903C92
4ABA53A4B5C7C390F436CB4C0DB7279511CC1700DA348283522B5AEC490A066D
1099371F128C794D9D6EF7E18E83010405CAA3AF558B233BED8EE2895A696AAE
F0EB67902FA53D9E8BCF2B5EBA3A06F2A4771CF854FE240328C4A2F37B9C73FA
6933A798B6E803A0A99CABA87DA35B532BCA16C510BFB7B509983872C58A3EF6
7D2D71970060C270EE7CD127704CD3EF0235E14156EB241070DE216B7E52495F
23F1173793087399AE2CD42EA3950E8C685E163310E87EE665F4E74227B5A328
BE08D81F6EB1A4EF4848651EB7A024989A6D910914C0224A700E1245ADAD0B4B
92B19F8D6DA3B137B76BFD5E32149937E5B2316E80E1217FAC6ABF3636ED2010
11F687AA6A1FA145D9D8831BCCCA57A43E7425065DE7E3FCB42096A87D4B0945
0AFC294825B15F4038E34C9DBD8455E3AF5B5D9288B8F54F0F326AAB7E8A8FF8
DAB3D2E3FB7123F4AF5488D4B3F5B529A4C4FE5E147CE5ADC833BDC7BA531B02
7C4FA96BBAD84FAD6D4F4A42E929388633C2CBC92DD03C1A8A8FA53E7D7E009F
7EC6E0481335A231C8379C3F3A715763613804BCB54EDC5B0217311606744A28
C46926156ADE820EBDE531A0075392DFCE913C44B3AE8281B2B8FC9274AC2473
904A0918D771BA97E2AEB57589B7D25BD0B8DB1CFB3951E09AD5AD0C2CA19CE6
DD8882E1163B8906094ABB1A7C1270A36C2D80E7E32A732ECF3856D43066A459
E4322ABDF8C90170E014FE8F31A5FD35CB74EF0FA13C6DA5DBB23FF09BDC40B3
CE28A9BF7CD5171C22D3BC7CB0E70B000576DB79216FF236C2AE08DA546903B8
01BE42F5D89971F77720ACE22C99833F96F145D24F2535ED94CC4F33B525F1B1
6C3146B42EA2159F8EE8C9F376DD1C34FFDC5213A75B366A122A092BEBA2F632
D586EBFD5C9781DD0BF828EE90940996F394E25822B724600C7124A90E22D2D2
D7E02F4D95D813F623F7106B0378F7229326834EBB62BB78CDD6ED2B452B1CF9
3711A74422608B6380F5E9943682A51642BA27C943B460063E42F47BD69C7E30
E2A058EE2076C77CADC68C8862C4DF8E9DC3C3D4D4F2AAE22AD1AB0F34F55F53
B44608F5085EDBCFEAB3B345C2572473A97FC0E445AB0BE895925D1D9B7070D1
B3C7862C267FA89B79E20F85C4F999767A919BC790A462BE31BE21A1AC72BD6F
7CA4A8268D416A0C3C0669EACBDD18FDCA312260088E9852B7E65B719225BD4A
B0E543A7325DC5A5B0D8ADB5563588D38C1151A012779EAF09BB2716A0A15521
CFBCF3BDA6B5BD673BE8DC07AEC47A17DB951D3AAD05E9141ABF0F04806A8DA9
0F266B86C9388B9CF7A504681E2573CD98FABD3E0C1367A7FFA135DBBFEB11A9
FDDACE6231A63AEE0808D7BAF391FC2C06BA1C18590A9C8CA18E9D5BB8417594
C168C440DF3AF0E9ACF470482CBD9A592B2EE0F2A2C0F3B213E93686D71738FE
955FD7C67F11323E059BCD0C4A3D3EF05A00A57078A6C9289FBFAB908E868942
C11B028371D5B7758A43F98F4DC4792308CDFE2779CA6BD28B9D022370A8C359
9C2D0F6F144DBD3D517E721DE0479A0B43F0E464181EA9CB6705FFA4D732120E
A035F587051A2EB0AAA345FC8092E63DE84FF17D908E839F0B12CFE9F948B2D7
CA2166E698AC5D1FB28329D24CC5B1F44126E9EFB97EFBB37D05EA9242907749
32022A9F7FD267EF9775CFD4D0FC8AFBF4EE5E7A2CE2F5625D4F227BFFF48036
2C06526EEB1ABEED9E395F1F1DA0A54304FDF6D477E0D5030D2C45FACC2AC557
C8EFE846A8644F1A6F7DDB371CD6ACBBBC0C04C99AA7330B923E0B4ED6729E03
9433B2582BB2D711AA0CBC508BB9AA6EDB1BAC373F72A81D97008DC476A292C4
F05B9EB5E0C3D5D2F2654E38B69B4BB5F49686B80BB9B9F3D1C2079D9F48BE3E
B4B4E86AB1664138BC0E9BBCFB2E2CE637CB29C1C501FDBBA2B70DFE137F8F5E
3141CA546211D598D2E9228AA4BA3BBB0A1C1B4B473AE986F97F7E002F2A3F10
B48197BEA22F0B01468DADE8D4BC4A79BB113E172134CF6A261E5F6F80C12CD9
5A1F1CDA94376F0E51B9C04E158B8E02A76418E5AF8B6B530DFF73BF0E38B243
916E7B9B8D970AA9915CB94FB6A116D5674925C53771D6A5077FE209CA302337
8B9E4A5F75BC69D895889BAF7F72DE0A2FB1CFD20CF76F2A68D327AE5848FD54
4F92D3B0350F58BB8C1C61EE201D7C1FAC013276246C5DA8B51A1ADC86F4ADC3
31FFDBA4E55E11007E857E117BDD775AF7FB868CC5E7D41459FBAAD69550EB16
48CB85F3BA27381A338D167AB4FB040FE12B093221C2AFC80A9ED14A027B595D
DF21911B2FF250013E28C6B09B6E9611BC7BDE2D2CAA194BBBD9CBDA39BBC2A6
874672444565F8CF32A5105C580AF9B3992A63A2AB6BEE8FA51E5386CBE5B406
77D11FC31127ACFD3706F8ADD458C23CD4A6EB859AF2C37D5A0FFBC8B7286439
C0BF9FCDD35E25EBDB9D0A586CCA35DB9F3D5C8ADC5BD13F43F0E3DAC6FD3E59
A24704212BEDF6D4A61F5B9F83B49A7FDFDE4AE966E7C21D1CEE7024A08EC2B6
5A476D49A1F1DB98A640D8AD0B57050D77861C1D657F9A8D619B4A84535FDBAA
06DEC0AA090E9550C7015DB6BA8FD6ABE33F32EB9ACF6E2013FBEB1EA3915131
0909AE448B07904D6238E447D1DA4F460189CA64264A69EB247E61C8535B1457
9501191DC81CDC5226B8E403DFE0DC9CBA3F5BEEB210E4A527E558FCD0804322
8DD506DED364F0867ADDD600A4699CD7307E1BB29CEF8BF027B491D204A58151
82DE99ABF6AD15218518708233D1157E49D0ED0A76B721516C77EDDF0CBF2189
5FD8B6BDD98EFC8E11171896209C7214339866C9D2EBFDBEB17457CF317170BE
23506E7931BC6740A0CAFBA49B895205BBE9A763737DFCF1FE1EE661AE761B69
0B1F0E5F2418F93AE4F1EF66D42C8A171D4A4BE5A6AEA3947869514221AD9B87
099F2DFD1B4F6C00711DC484D033ABCE0B3653CDD648C33356E3ACD7E629A0F0
4420F80D320ABD47C203126DA2E2F9EDFA1B9CAB4A4BEAA3A1AD647A95C0AA04
060C65E18277C8AD465FAE04DA1631571D2C25AD6DF32CF1BDDDD7AEFAD0232E
9CF28F286B2117EEB495A142155B6DC423026E665B5F9EDDD89C6900FB67A1BD
B3DF9CF3BE2A0831A3B99EFAB1DB9EB6674CF5AFB6952FA54B23028110B4DCC4
8AE9655FD02ABDB5185A2CAA57DADB6C260D3A5BED64B0863CD5FC92A8403521
3F0962D2105EE9C9B28441C0B1ECB2B9C646690BBD17726DC2AAF19928AB965A
A351BA89610E6E50EB514FBAB40CE952D7E473FEE54D356F3C557F2EF9182692
E725A5A74B353CABCBD33A5716229CE1332A9C21FE3A741DC74E6198847CF775
13984F8538B3F11C78998B13F4D7930803F4E5699FC0802845497872F4D1033B
1365627CBAD5CA7DB9AC589D3BC0D913353746FDF59D0A26CE977C302238C671
EA0F0B80C2AFBA8E941550F16E863C4663CF837E0BE1F6D14AE95D5485329301
02D196A39C3E8A0A02ED68BE2AEB9D50F00EB6B107BD4B1F7D70E79BA1F84B17
0FB026A3DF6413DCED84CCBD14BE0AEB8ABC3E14EC01D57090A1EAA9E29D869A
2748549CECE25FCA5BD754037DAFE8DF35490B5F80546905961BF1DFCABA3989
F354D642EBF119E7191FFE61B39970736B37493095FECAD09A7E245D45C75CE0
213B4796EE503264F78735649A8249EC90421DE30C2E0902E7D2080CAA194A9D
8135E4E8CAAF282C6BC620AC3E59329A8F180CC970DCC197EB74E73484BBC86C
CB7A2BEB7B71CEFC1F8D7779B44CFCA34054F25B4539B96BFD419B8C0720E7FB
0EF35E1979FA038F7D0B379BC4773CF9C28FDCA016F40052C4151BAFE8950EB0
E5CA7F5EFF3D405619D2DC346B8D041BE661E7A45448F746BD481FD512849271
D0C5A9D0BA815F9E66D7854B7A29CD42FAF67E19A4CCA78E004AC44D64AA432C
BFB8E353CA247853103E6B6504538380B1369F99E1F371E846F5D4E8BBCB743C
44C62520EB2A971D64E152A9154B5CD1F17050563776753E2DAA40E0FBC52D05
A372B14A6A669B4E26BD17E0AC3E9948054D8F55A004C989B12E1A0C0D91248E
F86D94CEFB6F9A75D8F0B2BC50DC900D329D895AB30E6D9970845A1DD227F6EE
0B596F7F9D06CCCA64BEC8F39D4961C73183AA9CA4C1F1840B98E518680AAD2C
D4B2714BF01952E2DBB78F4A5BB54236C739F09B5408E6D30C18E3E77B6020A3
304E688779FBC5484FBE083B945076AAB03C15EB4B28E4852FBAF2C383AEE85F
A70F8A13E4723E58885ECFEE87CDBF7640227443502A37C32882D850890DD981
F824E93DEEB00543A2BB42AD700ED1BB0BEB5ED633043D857383EFEBDCF793DC
0C140054CC42FD962DD054EF872B308FC06B175FA0EF7587BB45055C6B230128
9C39C18DBC71BC1A218DF851B95ABC84EE03A5CA83D5DF8CF962FAC557E4B667
19A14CAD2253CFC3FC248D42B74A9FBFBDCBCFCF99909E7302B9E78AC6491CD0
42DB02E4D6CB51EB955E0C5C8BA6486529F7315467628F6B7912065F72B7DA65
3B40040C4AFAF87522FF6DC5DC836B8D8E5D3E20384E2AB20F96C32920897A67
561F8A8DF8AD6A3B541450E0383423B398EA14BEF0054B86E456E7CA8F8C25C0
164F19A8DC9FA4C6537E3C1E34394DA86343101796AD5888CEBA6D1482E8ECB6
6FE33A90BAF278EA5D6DF181F3A39D490230AA5DC43090FFAF840894F904B9AF
3CB3E9C27454E9B41D806F5D792F25C309404790D1693CBA7F2D3F6399AE1EB3
0E3BC53FB0FEE7C2987BFED77A472AACB099DF136D7648A1BF80801FA1592807
8369796588BB92567BF4A6644FA922FC56B0B9C166BE128276F5E3EDD7DE1B69
3A30A4CE5690AFAE61EB66E7A1FAB84736788AA88B63F22F3F8C464899AC5686
6F284F6B58DA8B4FBD4BEC5A08DBED1352421F42A8AF0C1B4B285B9EDA4173EA
237719AD386C25D363CB157AE8D2A600C3153B9FFAF38BE3E67F4D7AC6707318
882683F4DA08AC6271A3A7454C6E1CE8880E3ED6564A4158061ACBD983250E5A
716AF42E341AB4AC7BF8E0420FE03F5909CF800F7A82B28F69F618199E66E34D
53B2E905951F92A23C0C8FB1FE448186001059E380DDEB6AF97B90CD13907030
38F388C760663AE7D75E4DABBE7CAD82322741E2409A8A4DEACAA2E2F5835934
41F2C433FB9880C863A111C33FB771116DECAFE77E1AE8908C75860C8E4CC58E
E1A91D72703462BE74A803F24BA5F5D4D9AAC45799FFEBAF046C303C11A7192C
ECB5A629EE973739975B0FDFF075D332A52F94C37837F0950B9AE931BAF39852
D00164E49D93C949B022A0D5DDFD0BE889990DA9FB041C99AC0DFAFCEAE09351
C346DBE1914AC297D40760C0889377070ECF1D8FACFD06811DDF888DD9D20F6E
4B9E33360B12E056B20F203A6C02D6116A479555A4B6AD077ACC2FEB773D9697
97EA2A37EB8D9DCD7F09A720451E3860B8D98E15E23EB6FFC0B46E19389CD323
BD51F05E020AA66A7940E946ADB73140EAD1D16A0EB8357108787BB94E58E91B
3BEBEC602941884CE06216CFB5C4A4D259EA9C7E1934F559584B8FC2B48054BF
BA472EDED9A79F6224E878358EB9305DD1AC8AA3E51C7BF7D8F755DC8B260CBE
81D8D156FF9AACB206BD78A3F1081DC253843D8AD29903CC3DE9CE08C155396D
F19FBC078BEF52CAEE31B67717921BBEC1DF6E642F7C0876C6E658063AB533AD
3D3EF2A5F4715BAF50A5CA5522B0F836204E0833F3E63DA23971A98283228F30
7CBFBA9FD8B6302A5C43A32017BAFF8096134E2393688C9CE7426FB3022F5351
79E9A8CA8F7410E04EC182224BD9499D0AA455C9919FEED4D8DE5F8C8EA19721
8547C37BFAE84116704CD33B5086E3ED780E216901DDEC22C93425806CBC8C87
0742E6DF6D00EAD461E1126F3CBE75B1E24AABF7BF07C8C5654534641051C154
6413DA16202B097EA24CD66ACD623CE16A94FEA3CC2374B3CF50D6308C3BE3CF
7CD6B78DCD067E0B0C9FB5CF9A7B17292DCEC49C6B54113ED853CCC4933C7A4B
5C609FB0A3B28A6AD9E79BF3F5CFDFE3F112AB0C9F4F87CFD7C167F78664951B
FAA486CFAF48A8B720F50D6CD313ED8B9592D7EAF2BA011E298B05A017F7738F
E9CD3370B658B702A17CD2439AF0946456124728AF854A956BB88E5A1D8D5A0E
028154210A3511C91B90C11A6D6512BE09FF10855536435677653D7583796876
41161822CE03F0A3455B191BD3FCD4D426AA93A47F2929DBE22997CEC0ABC260
F640DBED09069EFD3A8031D7DF46CE9123D4859BB262E21C4601019166782195
664EB75D20C4A3DFFC637519DD3D679DC5E27DAF054A4601C422CCBEBC60FBE0
D00A28E1CDAF67F83B620DFFEF1F555529493BA1BE41CF4FD82366710EB7E9B7
286ADE4B52C31E12C358C215B7741F9F765AE598A42962FF313FF33C168763D8
D04E1529E8D5DC5EBC306AFC27B58F6A2111243DE9CC5EA2B4F95A7071813261
3E3E5E3B12BDEDD666A1C9731554C73F49874A0FD5E194699D93A02E7422EA38
697A0123E29D382DA85D106FB19E09C5AD013F0798751BBA2F0A6161DF81669B
9370C2A619980CEE42772F681831BC6FDBD56C28739A51C760B508B0239F4130
CABA8CF936765560B55EE17EAE76C86ED0601CC45A4383F380C770ADD5FCFA19
21E39687CE86FD3557A8D3FB0CEC9C69E3F217BBA5EA3DBE33D8226CE087233A
4482C4E0E64A87602BF63FFAB2638E4F1CB21CF272FF23DEF7F676E59903254A
A00C37D472E7D6DC3F2370253729CFA4457A56026F8E05EF2AE2B705ED820B0F
B585F5E914C8A2E71E565FCCC26A5F6ECEFB3389FFA0B44313A56E7BF6088E05
FEBD33B2646DF90117EB55820F37077E1E6EEAAC9D269E6CC4A630F86770C78A
3023DADAB789BCEE243E826B7F13CB803E2B1DE3F1D4CBBE6F0FFC26F8D19AB6
7B956D51AB6C145214F4FF676FBD5A29CBF42CFB7F6749F99E826E5C52968604
3BFAA764E97D59BD522100831C34EBEFC7DE9DC8EFE7B0AAAFBF365E9B7B9E1C
82578B2414DA83B3B1510C21154B22EC3E1CD7F8F5ABFC428105E4889E7D2989
19316DEE6A0FE6C90EB5A4AEE3D68FB15A4EFB47CF0668E300DD37FD5F59DF69
3E718ED317A13733B9708190F0099CD4655F44980A51798A306E209FC8FD4D3F
4EE097AC054746DB8754676DFFCEE6FA69B32D0E64C884DB9517D8646703E74A
F9967F246FC952A805689522217795F533A5DA8B4B2457C1E67DF31C9D2DD90A
7A3721B8E3E4A4B043882CD38330D2F0E69DAA7EB4E864355EAA0F859B1B05D3
CF170E64E1F759AD95AE752F6FECAC5AAAFCF75061FF72FF02D5661353C3AFD0
CC2A8D3A4A27ACBE17DB4E01A36298C61DEF1B6551D9892E8D108D83A11A4DCD
6F1915013EECC870B54A283F7C6E2F74C34CFA92C86DBD441559AF6610DD1713
3C3F2E5723336A79105B3A4C6B30146DA34AB15CA6F1048D9B92A28EBEB7B93B
1E0006B0300A78403702EC96FD55742F8F7241273AA6EE627D5D1796BA213A45
9F41D1689A14EAF776CE907D83F83652D9C47C800FC16B17E97341D0FD8DF120
9F9994DE07A6A8D45492BDC30D56102150C8208BD1B5D470B8D48AA8C0B937FB
BF93D6860B9FA5B39EEA7F6DCBBC860344FB4FA128879D1B8742D9C8024F895B
FF7B131E4B5316E3C90C8668CE52442265B2CBBC59C1B0E5F062277901A9A88B
9CED47741B936DC6462522C6E476C2AF74BD6D12F5657F873F7FDEC7075A3085
A20D2D21BF2F37254B59D46D901AA6228FD8166E2DFFD178594549ADA1AD600E
CF976DBF8BCF238F9D1DBEA120EA1F244C9DBFB1493349FEF85C8BE19A72DEE7
A20D764C6B72B2DAD2E9D4D9288AA98CC2E49C47E0C5EC428FFED9582B76739A
B43F2295B7AE5B83208584920EBC41C215B6C2B58440F027B0AA56C7F05721C4
9D0E2D084F72BAC9989EA604DA9EF6281F1192BFFEDB30909B27E9F034C5AAA4
F4CA740C10BE7E494C8A4EF9CB532525BBFA7E3BF6FDF898C4BE2FDDEEEE1607
2BB7AB427C2FB6829ACCC08675B002B4D45A78F49A76DC1D6D3658862993ED06
75A71D888CCDA21D5D9C4ED60037354A0153D407676CE907A072F547843347D3
B2BEFA926EF04DD01628F9A725626EEE8272EBC3F4864825C804F641E691E62C
77F658499398258C0F77D870E9C02CCFF1DF4DF370762B39F5B02205023C18F1
56AB7B8CEA509ABC5A9EEFEC4C9F4CE0BCE40C91844F43F82CB281F46F2150D8
6B560ACE5D297F848195D1A2F9908402DEF9AACE87008AD27E03A3A2EA6F200D
7669133395ECCC2E5E37FA5A6C50D2A66CC738634EFB496766DBD53E7393E6B8
65D53DE8EC0801E4CDAA1BEDAA765E8FE1D066EFACD3A51FAE389A4383FFA072
F88B7BD8A0177A3C9050E631420BF3B8418AB5D08A7CE34CEA1952382086AE86
18B3C4B93CF52BF89A577C6F3093A56473B47FF47F2521A840602EB3D2C0A53C
53966C572267E8662CFB5974136B3AE0873B9F214E52DA44829A6BE6B758A5CE
76086BAA0D6C24D7146ED57CED2572C353B956F38066D665FD4D7778B93F6CA9
18A4FF409F9568B2E80F08D9C87563FB1D1AF9EEFE35E5D54CBAE2917597278E
E622B772D242EA82A55674907EDB8800BECDD103D0B709AD6531D9214A832EA6
1E9566744F23E3F150EBE7EFEC97668ACE11607E05924EEEE979F39F7858D7C7
F0C9A74A8C88C5A2F307B8856AE777CB4A7C1DE6BBD8FEE73DC980744ED7D978
EB75EB3570934CB1B08EBA6510178B926C85E206B59A4D4D6E5DFBE993013CF1
E4E4489A47D2EBD0622E1C757C8652392ED12674EAA206C0FC0C47B368867444
419E2AC7383193ADF155E62040F5D2CFD3957AB7837D8F803EA783D8402EF1CD
2EA7AD8B2D174F5FAED3B0BA02B2CC36A7DFB770F6A44C5416771118DE84BEA4
2585CEA5252DD513E275149E441A41D38360AEB23F4D2DB98187ADE24142F287
4247CD86E0EA8182BD27C6393F6B0A93B5EE039A0D3AA0757DC0BA187BC69276
7940D9B4C2CE12CE8C862D78B96B26115A204FEFF755D2893F3D4DFB80B74F78
9DC01F59E1396C06F507A67D26EC8BB03EA10EE772267690C38760B17A40ABDD
97938F5374082806FFE6A0E9C22F3CB4EA745989D9371F976D300AFA95D06D7D
F375F24A7B9CEB4514244625BC7FEE86AA0CC15FF5116F2D00D402728986B0A4
C06C0ECCFAF9885F90FDED5CF1E9019956CAB245D633DCC15D5FD3480EEB7D3B
4D5F5C035034884FEAC33735118E2322AFEC7E4707E7F6C481F8B556780A40D7
41F6CF1116AFD3CB5DE5EF4A35493B19BDF3AD1107798D7A05B553C396D31953
F78DE82390803E8D5A9D285718E98187C382B21A3B8EC7D32F00743E6928631A
3F9D6E5C58958124774C65903AB406F6D29194FF810E03EF6DC37786DFAA92FB
9FEB2D02E4BCBD9D23888E1A69254A546B6DA83B75746564D87C53EB023C86A9
B90C5BEF6EB154522F3C830505D0C5D5EB85B5D4F4C813971E2EB6E31009B9A3
B13562AA0B684601EA29AC92B16712F0990625EFDE9EAC58E66B7EA7EA743ABB
9FCBC29AAFAA45F117ECB913B032D07B77A67BD867A896B673F0FEE5A025D6F7
FFAC6563680047BC68F656FFF08504B6A8182A9C913C9B48AC5F6E099166773D
6AC08D76B232525C0D29B5E14966C955F454274D5C4993848CACA1ED17E5D4EB
508E9BF078D35EC6B79037BAC01B1E8A0EDA88F1778EC5DDA7949426CD8FDB39
BA7C96926AA7764B8B62D2999A067DAD0D519ADB1AD6F5BA9CCABD51CF2D79A0
BC30A8948592DA183567A8D5E491B04EEA15C4BB2F6F61086F2A224AF7868685
D5D0414FBDE94BF58CDE54D87D4396CEF0204F1150891DA9F8762A1FF178447D
20183345CBCB5C4A3F9FD109D55C51978DAB20EA1FF8F606DF9CA368E0A8B0BA
D4815AF3501C46D64D80126EB00CA2FDD7162BA641AACB3EAD8178365738AB32
71A5B75ECE429737A1CEB9E5FC673D529A5E32522111577A5E22A86992AC260A
2DE7D53A27973F680D0168262E588BEF92DB7D5A7C0034B554809DA62505B24A
A2EAF7AFFDC6BB616047FA8636F5079C63A1041C8EF0AB7A46BD6F51A5D38DC8
4B7B447C36C44FCC02DD4F19599D0D5A23AAFBCB97474B1C6005196033A05BE4
4B44333851A508810E12C2C9B6C10022F97B8B68327B9E189DFA940851700EAE
D98BEFEA1A878C6FC065CF46A197D712A6EE9794F35E009CA2E42084101FEA71
EDF981F8AECF7EDEE24C9146072C2FFDCE2F749000B18FCCC0BA8259A188EC3C
305011AC88027DA54EEA71FAC0F915C51A4EA21D07C4D7BBA360B7484DE764E2
0F284D93355E1B91B39D15FAA8A5E9DAA04FA0FEAB2F7C64ABE6AA6403EB1BF3
2234E03F538257747FC1DE73201158877E40B020121E32F57DF6AD24831C194D
5BF1981BD1C46CB5580678257E69F0539036ECB8C0AF2B1E700570FD05E7D882
A69362F2DAD38AA7B771792F02DD4695A7FA4B0E0701E6C4BF1A8FBC460261F7
ACE7B94633F8BB48404EDB9EBDCA2D25F705EFD847309C9159BE8B037858325E
C534FB0E2FFA6FFFDEF55FBCA10B81D31FD7EE855934C5AF353AB2513CC957CE
A92FA264894B13388E5DA8436E282E73B5D33B591ED76B292A4D462DFA75D2F2
7F9BD39E7AE32E8BAFA8F154FD14E0B0A87E5EEC5FDA69F1FE313EAD44AEB262
7BE9C7CFE0C102C9AB3668254A687BD2B1A7CF3F077A0CF70161E50B34CE7FF7
4A5B1DF3F3B527B80119F3B999A71986CED95968B4CF689A0877737A2A3A1C58
806C1036AE0012FF515AD07E2A2F5B61F6F7B7AAA92B534932EB115E4D53021D
7C56E26525A96EF0712091CFCCBB17633FD918685E318375E823E3EC20F93927
B8CAA84853F547742C6827718EF14E0CC557825AD1DF7EAE0236B5463376FD56
2E927E8C53CE409F67CEE2429C01769F27257A9A0CE3C8D0BEC7CD4C926C1C03
81CB67CB7D66E3394C7B60EE51498BB0EC7AFBF8A9FB7A1C7A2EFEFDD53880E7
62C62AFA74FC5A52E298CFE8D80DEF33B5FDE0A86B90A666A52C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 49 /one put
dup 65 /A put
dup 72 /H put
dup 76 /L put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
E8832D60E91796C916FAFE58F51818B80BBA52C1C06D94E602481654E5378C8D
137E3A872753CCDE4B2618C031CFB13EE91C91335441C434296DDEF61CDFBF8E
8FAF25DB3B6D6796FCCE2711938D605AAC00F0A58DD1A03FCE8732DE541E5E8A
41FC87E1FCA5CD9B5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD55ED0F0DC
D71412F8FABE5A24558C2CE63845D05D4183B13EFF7336D998770A0D22B1CA70
79302D1F060E41BF0066259F5ECACA629B0C28A9F4E65D5482DA2CC56AA8118B
CE62A09F9C5F4640F348449C01E851C4736321D6DFCE20133B8774F4D2E991E7
A981F856409739885A994617FC3578FBD2E7BEC58028D9D86E7E675E8610C033
94B0D6610BF9F9EF0A761395659C73E9CEA60360F9E92CE3C9F5E43C632FF2ED
52027089194E50D9D576C9751180B28BBDE5D04EBBF572F6E8770B68030BA4F0
E137492D09A24A0313720ACE328705E385DF93FF338DF2DA034B6DED05256CB7
CF304F1EAD0363A7BBEC37DE41E00884C068C7968AD16ECCF924043891EB6569
9AEF284631C9F947D9341793D4E4007A136572E6C3B0A9D7ED642949FB1EE1DE
FA61C65CA0562236207324396287925CA6FC87E04989167C09B55135397A77EC
BFAAE1647E03E89E38C8C3F92166FFB1E26017B573347D994F8FDE6A66D74688
22A642D70641EEAD8947C0D15328B988DB6254CFD70674D73B35D62F37B6B684
890D361F1AD5184E8EAB5B3E8722F748DFA615A5058EE84D1258EFC2384EEFB7
5540E870497A2362FFF3B998249610F3353DCCC2645FE2CC16593B94FEBB2E73
2946A34CF8BB86F076BD97FC219F6D0A06EE6C0FF3D8B3CBD86DE99B381FB8CE
2455B827311766573F323E05A26732D46C99C41B93A262E824E55DEDB8E4D1FF
D8EFED921BAA930A1869031E2C0BB1A8C1092DBF7DBE3A71C4D5C14170C38F61
FE06BC63C0F4441BFAC82D541D3617439C0069B55CCBE8D1F0523ECFF603D7F1
235A12FB600B92EEEC2C62EAE885C84F941F1FF22129F88C3197A476F870A2F6
844963608ED2BD5CB70E77DEA8EC1D37916398FB0C1986ABBA8E63287A09960F
FB0938C5C38838B9DA3075FB61518F4446425E2ABE858A2AF47162F944EE5E9D
180658C5C16A0A8960CF11AE6E137D687AEBD47B97E2543557DC75E909B49109
257898F100360A240A72AB27B558F90359995C22821DDC0F82F21CD0C6E4D6DA
A910BAF0E8A484D4D68898652D6421B7BE6909F07E6A2F34533C5518C5383CAC
90BB3BF0C993A46215ABFB9D1A8C7C2A6C659F3E168B8353F3986D4C6992A691
54220A9197239BCE70500C8A735DF316A68671F4B0D3480F00DFDC22CC8FC032
E38B815EC475E9DF9AE2932074325629DBE7BF3642EC9C7BBDFFC7A48EF3D05E
7962C3723BF6E61EBCDE3E4D89B7EF1830281EEF16254CA7E43E060977AB9233
338CBCC92AE6096709BDB6D8C9518D5F9C36F97218AF35064BEDEE396AA93CB1
D9A20CA017FA6B91922DD2D1622AB18FCFD76548FDEDE3403088F77DAD8369F6
AF3928416E9EF6CF01CDF9B991A047820619A1BBE5F56FC10A920E67E3BD2D60
713DDC8A1C331D4CA948A229FA7B50C20ADF7CC8BEAD3DBC74CF2C7FBF822ECA
E94D529242F24AFD27CB3D3D61796F7B82AE7FA98BF3667E0B04465C26A60178
B8E8F892B2B52D75CD481F799A46055D0D89758646713AA2B67ADE09E7E77BE2
AF933CAAD62190D61C3F336C8E68585AB5F0B69D613D96D86A1BB481B92ECA00
8DCE33EE4B71C0B18A210F22E618B71F2FD585495ACA7B50211AE3C4A5716DAE
7AD388A27A7000D2507BB193C45943718A45D5E4B776512CA40C9781BD754841
6DCD90EFC1B03DBFA78462CB0625E2FABF81E949F32459B1411C376787DCCC48
782D1F6C9752E7356EEA8FB8E036E4E671E52588E8F4CB3A3B7622E5A704402F
59B2EFB224107BCE6BE3B60ABB2EBDB72AEE544B6057ED358313169DA31C6D27
FA128E3EF1E77958488946545F8FB41731AFD8088037953FB4FA6EB237F8ED94
AF22F25DAD959C81143E2A8919CFB897E834D81079750511F5260974E84B54AF
0BC9C73264E946226627968FA8AD8EFA4530AD62C197D100AF9BC17825D62847
A988EAFC7B4DADA77D01332044E290F3722C395B2FF7C8396B923F91DDBB28C1
89C8EA8C7134EE2627670D34A25CCD029183CC1E2B72382A89470710D2FA37C3
2F1A27F8A4E247D62D9BBCB1308657FA898359CC8F7AFD383986C413CBF2832A
FFF564E1942E938108C35D59158DFA35093BB423307E3BC28E2E7BF13ACA9731
9E904F2149DDB461A062CD2B0CD0F4E4477932DC93C40EFEC42D050D3827A626
7F0DE53FCBF91622B1B454E2F96DD2B5525E3C9D5292B4C4EBBB52CF880E71BD
980262A16CF2898F22086DCDBADFDEF4D48A8C5C6F4904AB77E7B47AC1C74858
789253539CE415505AE0BF8B9F66F9AC0AF347B759A2877EF1466B4B255D1F43
29FE92C8055F0207AFB73523F485E38C51198680CDAF684EDAB671F6CE9900DE
C1040B384B36BDFD139C127C2D56854AA8AAB1C70A20D587094DD2DAC7CB4B4F
21C5D38B0920DBA1E914163BB6E0A8D0104FA460265089CBD45FFC81122DB4DC
74957847F2E717B11FA91D5CA8AA547E57CCE070BF50919FAEDD4CF75D5B36BF
E1CE3EC94CCC1B2DCF8AFDB0375211555B52252380801022C535712C6AC95841
EBF19CA4E61E4DCED932AE0D2CB03727D21BE4E52155550FE654CFD2199AC46E
0D83C9192F4755C968CB6F5B43150634053B6F9AAE574638FA8F2333D6C3D7B0
FC39D96CD9C700D33F11D3549C9353F5A90737BC4EF90573132F391F02905549
FF06DE53253A828244C5D82C0552072EB9AD573FA7BD365B951C5540C6B2A8B3
344211722FF0CB8F3BE3CF03FE0C8813AAF19BB57403D2D75656330FFE633028
DE6FA179FA8E515DC6C213017DBE683227C6ECE68D38218C229FB58155B790E7
3AA99DC8CCBB94C932D726BD9CCAB24778CD57F22C3482141091731B2C0A9A4E
06C6900BF1998197C33542DD8E78F94CF9F078027535E61892915487F829A8EC
FA6B57B146C50541CB1A7EE3A098E66C3AEC2B0B681BE0668A75E08F38314027
F426443EC78657C4543E83EA12EF453AF9A9547938F16A1C5603F4DB071B5318
FAA7C7493D08DDCA4DC3A9FC2237CFA620DE1AFCA4B3E75961046670BF3272A4
D007729F001D24A3D8BC6C58679B14AC83CA7F64860DFD70CDCBD98FA02C7AC1
32AA3A6046E1CACE14F062369BE18CCCDEE5C06E44A4EB0C16255649B73D767E
29C566CAAB447EAFCA6DED3DF5E5E3A0BAF3DAD18A6C47DCB7EFFF8FC87F55B0
74C838610E686EC2BA3F299B69E1D04578AEBF77D4E918FBBD74B65D15F95686
AF06498766D131B772E17890F86E2FD221DFEF7980E71D343C6C273AF5C5649D
75E0E45E587AE89497C6A35007B2A24FA416A2894509928139F79AC8269B80A2
76836EB38EB9C61794B96CE2F454783E737C0B5D96F304B9A7E96E98FD37CB80
CF5383D2E94F71A00AE04BFED53B4436FB4BCD1643E3D8EE75EDCE425085CC15
4CBABF1C5342553F05A0BD8F52BF3769D0D308BBE55AE3BE56538A500808B89B
A75466127AB4FDFAF028917B604019FEBDE10BE989214E13CEB07CF72C4520EE
373910ECF14D5713DE5ECF5E48CD1092C22FD1F16B9F8D9BDD8AF1955CF497AE
B018F72451845C87E4B68EF4EC011CCDF0453543DD1F977D6CB0A28111CACCA5
DFEEBD9BD9D99DE16A6AB6D71AECAE05D510A50AA2FEC258612AFFB4D1D36901
0199BFFB00E838D527F7241127C46C4F1D4FB06D6F2A785597ACF8675AD6265F
606B51509869FE79F9DEC1773D1D29BE7D043D0A9B3E34BC10F370BE211F8B64
17C75F1898D1326EF83F4E0FB722D096C2707BCEE83C4718DADF6C4EBFA5D294
0816F177A569C1EC201180BB54AC05BFD27D3D912D4AE6A6E4F628A74CDCE375
33AA7D9B7BBD2C0A90EDB75CE7E716D3E469FAD94C8A2724EAF420FB09E83CBF
A6C96F3A86A1334A78F9A1B9C3941ECE4BC182B48DEC38407552D303C2B26B90
342C295EB025EDAFECF8A055EA56A4A7C2FE4FDFA9754A3F2D19E2204EB88474
D51A6D537CF05A8C8CC2A19295CA674E2763B21C45FC99FD4BDB12E114164919
37D40F217631173A7A91912F4015EA785F9EF6B82AD69003D09E6708BE36D184
A9CC060922808B5ACC85D24594CA507DD6EFA97C8E8064B540408F1E50F0F08B
3290372FB4C210E5DCE69F918C929BA69B7932DA2995316D7B5C4F86F17B68E5
8F9990BF45E997B721CD94A8556BFFB92B0DB184389DB9CFF89989550EDF9549
E6A19EF926D4648C5C70A6B5F644EB019A20E6E481717FDF7A72E88707FD7901
C711AF0DEDD2EA6FC7BF90CC5CF641822AF047FF25E286E6C5FC9E168CAAFAE8
A69589BC83654989D56496824F9E1AC7270E1CE02889947D437BD127435317AF
04D54B89F6D563E924164DED645F9EC80492CA1038FEA46B22D50A21D17E4A8D
A066978B3F6D1199FBC8304EE50D040633E12BCB0D594ECB926FD14BA275F8E2
778A3F763F53BB26DBC9593BBF50BA0A068D15B529D743B8DC2F5B3CF794086A
2994058B1CD86F547954A178A0FEACDD9C6391A9AAA8AAE2E1D90FD9576DD737
0F67F9C670BBF6C012C45F6EA5A8D7EC1910AA85CA83885CB990B3C4FD6D207A
857CBF159373FEE1EC59D14D426A14AE50E3FCB0B8D24C40AA46785490516557
098A5B3405DA666DD24E0429B10DB08F898C0E32033AC090EE1BE00579486C33
732B0619CD03BE0EB2F333E744543ACB3B8E67877E9AB5DFB7A110DEF9DA3305
C3D445946B2C9D3C237823FDF53C84781BA93D02348A6C3A12420D7323EBF992
053F74990D2AA3918D9DB4DF75B50BF8EDD64C0FD1DA3168F46979B4E9BA2A49
B5E64CCE662C41C305C2F797B614B13C06B3A6B94E2187FB7925C73C0E224E40
DB1D4CE80B45A7535AABFF1498CDB689C6679205372CF649AB8A01D0B07DB4EA
F947C091877F7E762547F1815314ECCA7A71AECE0A7EFF44B0748FF04BDAFF75
4BAD59DF45587217BA0A0EA9D78F35B90F167FCEDB1D2AC022773962BE62A6BC
B81FF3C2D57A88CEF70112A500A79E240423942815EE06BEA1B871FF50C770CC
7707C65ADF5EA66C502B4F756CEF4E338211F32DAE737DED3F9B21A1A95ABC7A
59A092B6B7CC0BEC955FC55B50A47D35E7BEF1EDADA66349D2BF0B64491B97DA
BCF8313FE1A014554CEC4946749CDC9810A272E39FD0B5344FEBDA8F14F3F69F
27E23211E6F769327CE97F981E588E716AC9922BA874E2B40E34E1FE1FA32B31
9772E3B05FEB2B57C6A61273CCC5963B9EA701DDE490499ED988D86AA9264592
12A6335138916CCCBC39F44D91CB5B4434B410081787BBEE67016A38BFF9F8A3
BC177146D91D12FDC509ECBB206F38873B28811D787B6B922D24FD9B72CBAEF4
F3E0D5C830594AB5555323E35E292CE080558CF416B78552E8F7C0F909BA8D9B
4B782950313CB32EB6566199C4DAAFE79A6AA696A4A488ADE9EF17C716DCCEAB
631BEB7BE7C41BB03EBB2A80673C11CAB5C2F88EDF5F2653C608EEC36B32A387
28836BC8183FC9367BD9AF50FBA4EAE3673F4F44519C609F6458CE62908BD09D
DD702B1D5B5605E2D2038E6D8B64266995EB81280879B7D9FF776856C4BD2946
A84DDA7D62779E7F9D8A9C90CCA1BCF21591329588EE94AA1BD801E7C12BC4BC
4A0EAB56EDD7E5D8DF8D336BFE7817D73F06AB8F04715E3D6933DB9D21D55410
8946669E590A7CFCDEA81907A7A162D3D82CEDB428F54311B5CABC8B6019E281
64725772DF20FF7649CBF388529C4FD05552340A38D720A934185C68A03BAB8B
5250A90B095E551ED8954AA2A9F6BD164479BD978749A7CC2810F5B687AE42D2
20B861BF99929451A6A29C7C5E7E95DC0F5ADD23E9FF4B42159E5978C3E4567E
5CFB9055EA20400C04F5075F916AC6375A4CDCEA4A392CB46C3C66A53A6F5165
FB8D554045CAE2165DC9FE52BF305B31FEA94E92B20E2FEA9D29A6D57D65FEF7
95FB88DED82414B178DB99D5D89703935DF1700355D9C5FBEC28483429729ACC
9DD14B661CC961BBFE6DA21C17FAC1EF77229378C85DEE0C20C3EBD64F926BFB
83DB9D2B1F09DBB92B25D648F173DEBEFAA7534EA40BF719357CE690DBD253DA
C1152BD8DD3891BAD30960C382F1171FFB95B1ADD20A771316E9CC517D3167B2
10FBEDF493380A9046A9030783803DEBC71A1A18262FBBD4A907666407FF228B
5F1B101CC59396254149F512A4421D08A05FC848919F88F75793404D0D868ABB
F75158630CC59FFF377F292B46385B38658E52F86232B9A70BA6F7953EAF1F05
0A1417336F0D715814A25F82BEF97C0F76890CBFC955EC8E93D34D22606586C1
3DFA6225A069DF5ABE1877B714BD51002D0AAB49910CC9229CE0E98C8820FE9A
66C39FB51FF715252CA8BE2FF6BA35912D60DAA09A5FBB67AF498E9EBA5098D7
1C9D41B9D978F25A7848CF449C82FBF6626C9F938B0EA96AB14FBA2D541B4E97
34351B245F94930E87AE19A6DAC1108653CF88CA1B268A1FFC77A2CBCC002A6B
C524C165595CAFC574A20CAB0AAADB755C32A91592170A3BE0C9ADEA7AB4289E
978A77DEC653F5FE69D9923CF35C6618BED20E281687BDEF33DCE54F0AEB7583
F0E42D5DC1FBAAEBEDADB48531852739A987F01EB8F62FE34B362BDD9B76A592
BFB5004B54A863BF303950CCEE7E68C8D0E2FB4A21FB07845AB8835BDAA23278
BA4A07F282FFD6B73A977327A9A568296EBE08ED98A6A4DCD59E7F8F79862EB1
CE78B53B74AAECDBDD15383BB5ECF32EA57FD310E8935B79B4ABD569E15264D2
3170D17DA60B86093F833E1D36148D037BB5AF3A7009FA7BA4217D853967AF5E
8D8E9254577B6E5C2A260872D1220CAEA3CC06FE0E1A3693584CA234FE632464
306F133C70EC65540390637EE5412D4A76C33FEE794899132540A58F85FF2865
732362A4680E9D2944C8F42A8DFC55DC5F065B0A23AB42E718381116410510CA
02AB499A0FB8CA9AE8AE2C0C59B857C2CEAECFD07F2D47A56304D8999AE6B643
804B3F4F4823A10B68814A9C0ED9C04E3D84D7A508FFB81CBA11A4F0EFC9EAC1
9C70CF66342A19CB2C662679D6B6921B0111A32FC5C411C26A9946B27ECAD66F
A8FA31DE88FC6163AF730404A7049E70478265F4D061A76EE3F21AA0A584ADF8
076F0D59B5228ED7C5CCE249A8B964C9E7C17F3DCD5B72155DB4AC7307342F45
3A5BAB76D9C96B4AEB5B5B0761695FC5A24241FC91353E011A43168EE215714D
9190EEE4DB57E0B7487078584A61D016716558CEEE3DAEA7C8583B1FB0BC61C7
18A6E727011B81AF5C2F1A1B4E8F423DE2CBB96CC1C58CC292E4DF1EA00DBCD7
274BFB5A743A11A3A7B39E2BED755AABEFC4687BC7BB83B7C969C4F0FC7798C1
1897B7F3E9F494937AE5203A06EF3CB2DA30999C57D073D7C4570AD6D9081CE5
F56DF3BC31E0550BF03B300DE6175C0F3FB78036A2A2E01F514EDDE697BAF323
48BF4F69FC7455AB0668F40BE0CDBEE941FCEA9643A327B15070806F77670707
44D71CB63DA711A538E20FF614F9CC39A262A3145C5289EDA28D35D73282D45A
532C951994C11F7A3F6BFEBAAE69C357E98380271D84812F9E5B9DE7F9975BF4
7F67ACADF55E0EE25DAE7B232FE45BED03B787E9407AD0D37231F409A93E9F3F
5E1AE3C64E99C2FC76AD579F763277C84AAB4544907E63E87369725BCAF6AB8F
5B958FC87B679068F5CF1860BC65343761114CDF86AC68F4785BFDF9706A34BF
1226A0078F73899BAF42122F6AF8FADA62B4AECEFB4EA937050D5FE9EC734B1A
98F7FC40897D403EDA9F599E5C95FE71AD8B75EBF60EC947A814FCEFC27410BD
DDDD4A4F40FB10A63104AD5F9C57311D493D33CE243F4BDFDEA9AD5602F8B115
4D1709EC74F184792654E1994A26DB4C30319F25AEFB00FBCC5D6880CE85D248
A8368E220D7BFD646F885229A9084C640546223EB5C1F54739C30641F23009ED
A96D6953C39D483676EC1BBBC91B18235C7952C2607A83EF944DC658E84C710F
28171FAC1F59D2646C1270A56982CC866B9490F4CDA188E105B481A1173F0760
2E232FD9EB7DAD08F906B00FDDF048E6BC1BDFE3049175293BE6E37E191C841E
E73EF833B2B2E514AA8D0A00F0A22D0C0F61A874B1ACB915CAAF6064B51223F8
1970A476675888327A2A73A925AB383D1CE8E05A19E8177357174EF353F5F15A
4559A4635A7214B3704537A6C36130CAE312D9CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693A774D95B3CCD3EBCE6E4D0B66D4A77C0D54F9300B1A5B26124F8B0D1F26E
0D181D08FDE3D629286E320BE4C2F2B0568943DE1A68599EAFE8F764D4A1BDFC
B3233B9397EBFE8DC4F4C411F79B1D23289EA3FAA825650D8A62496EAB5EDBBC
A637CCD068A86773A3FB74D01A7D06D59729E5AC2E58C07E573EF02AAB806B6E
A3E14F7D7C52096CC941F47D98620403DAFC454A30381E07F915846DBCB2C690
16198828BB42507B524B622F10AC8781B19CE8AA275D02388930141B4BBE3E2E
D75093D9DF32BD82288116FBB7EFC6E67AB3B2412051E7B3061BB6599DDE3A81
9C1154D1959FE6E01E639A11009281F078231838B6A6405E742F8864AAED4DA1
4AAA966ED2C03C95DED79E46D6E14D8E8B0ABF40C84FB2CB114ED1FB496EA1B0
C4CFE6F251C95E01D0699A99AEAF6AF5E88299DB0A9434BD6BC724446933E812
E05925BB568A27C841C934820FB003DF902AE802661C9154C291EA653AC679CF
3BBEB39C508B2C4094EB1EDDCA4A4DB92B58E267BE84C24A28D651734093ED90
F12B9BCBE4C94682BCE4F9D2BDBCD8747F744E651086BEB322BACDC415CA2B5C
B0EB08E44D033B1A2CA696072CB90C2A771A40BD9855090E633EEEFFC6DB8FD6
9A22B7015B2533E2AC4A02DE703C9266B3CBA3D9E7EA775BBA94748632AFC864
25F33D900ED9AECD6ED5C8BF31C6FDED10984E83F0024228373A2A01AE09324F
8B33BDF4658A52E559611FDC9D85BCAEE269784A629E49A39BAB1DC51281DE89
A8462378314E4475201EE587D49DF8BE872A0A1A2A6310FE25C95C1ADFAE7BC2
0FEE89A9ADC5253AC480D21BFAD543D129F8D9F8694AE94457E43AB46D10115E
BF3C6F9DC2017A9431984404BCD93691942E93FD1A9734DBCB267B3EFF5C7266
0F026A234810366A0CEA232837B905E9BC5C48173C6C0C51FC15C8C047E46B98
12ACFA532D900A4792E503F05769E8BFAAF87D6FFFC966C5E8D6491331AF0AE5
BF2B1E7B4AF17D24327A1A489583B87B5EB4A7BB6505758988E8329F7871F689
D0EABE8C454E4C70C4290ED90D9FECFC61EE3B728BDFE6693CD655C12F42B28F
DEEFF7944FF76423A7DB7ABF71A1C1D9574582683EDC92009D4E3B803185F5BA
5F7F9445A9931A389CE99E62EE60B783D9A610B2845CDA20CE461148FACD236F
DE236A32C7DA8E7222FFFF15F647FD59519CB987CB1AFEEC74E4CF0AD5AC8297
A9E6BB576236200AF40C0087CEA26DEE87F3D05BDDA8825C724BDCE61109509D
B6A4A0FFACE3355CDDEA53F3B8AED7F90DD1A48F54F311C89C1CE41A234C0599
F83ADC0AF8E5B29ACA2711E94A8811643496A79F42C9E056BF260040B9CA3881
CE9868F92CECB8B2C043F002AA59DDCD9B4301C5CA4CEB7DAF39335F3E8FD66F
7431BBD0D94FAF805CBDFD422B80EAC6AD6877F51BD10C0B20C1B71A782E59A1
FCD5F283273BBB85E020D63C995257B0D50F94BAD4421B5D680B324B02CCDD09
E07F5E91BDEE5F95DADB93CAD413B7E66EB6E38847E1E628470CB42EFDE3502A
C4CA322AF843FC32E7C193D7DDBC0FE3295925BEF0692304D294212544981940
3E4C6EAC5379E7355B3749E5098758DA5D76694AAACF4FFE1AC3AEBEB0996DEE
5C29ABC54AF28281B891A9C7DBE78B605E160F8AE4CE272A9EE798E0AF19E4EE
69DBEEB6ECA275457581BBBCB6FA6799E862B8A791B04F236DE50371D274F2D7
684D5F0EDAEB4BCAE071E5EDA067CE96BE1706D946A9F0FD9EB07447972753C3
C2665A60569D95131552E739733A3E8651D46F9DE552C5DFAA2D5C9327A832F1
6A201F7DE98BC11E63BA637E99E93B65F8C58CCD270C24E69056D7259C042C7E
6FB92522910FC961331CB02B9C46A41A2935069D4BCC6C86ED381461BC0544A2
B7DD60B30B417119BE7CE880049207E5E3299B435A4AD6EB1CB7CA079678DAA9
BE11401CB204A2FA1B8D00D7264472E95974D3B38271D08CC7D79C21950DE541
F9AFE3090B29FBD912D4C871A6842DC410D2CED11693257677692296CD9E75F3
026CC06B2F554C61A951970F7706A6E815707FB1D56A523C7A1D631175B10A5C
5EB20E77F455584A3C49E81215C235C12211772AD310FB955D848237BF9402F7
11A9EA68AFDAFF4DB3A03C1E2E9D6F2DA2D43178D4E271872686176291C0FB7A
D369DE7223E0113D5D515163FFD6D4533C1694F6F9AB1A44279ABFACFA071E4B
D3AF775B7E9346F108A5714A0312C90F05135BE679EAC3A4D589F2C35935AF3B
CEBD5C810ACD5C73ADBDA46E86E8081D6E15C9838F9653DDEE24DE943B094FDA
04ADBE9E6189713CFC2A3D62FC6983865EC855234103C847A534F8D200C26E28
624EF53FAF30EE4B2DA6257C864CC891472A26AF610822C730C15ED7967D1097
EF39FCB99D60D25C5A9BA690AA97DEC9ACCAD0AFE32045E894E6DBB10E340B9A
80BFE25C17C9CE931659FEB1093EA18698B59B083470FFEF5001E8977B8D571E
7D343B97B016C6F35E2B0BFCC5DC3903C646790F60B51E0991F1D3FF56B27ABF
D30FB174C17877E64C59B34557D14A986E7533E834379B3477DA6BB30682A6B0
B08E27B8BECB25392942B676852E9C28DFCBFE8BA586EE4AA2962D7B4B26A7C5
B32BBBCE052416FAA12AB3E6F36507D59A02233ACBFA6B59ED312C5FA66DF27A
0D079BE36956B13B1ACD858EEB22696BD8776E40EBDB083323C0841BFB29027E
8DEA10B5029B21E952C57760C7BA1F8A4F3A7DC089CDCB1C38EDE934367F083F
65DB15AC315DA4BF540535B07648FA9E5AFF1C26478B4F253205C191D4D20FB1
A7F0A5F5FE77030516A0A5B88B786F41DFCD5F9059C8BE804B19ECA1655E1FAB
EF224E4FB8A3F233F9067BAB60F2157F2B4FB1CD0ADED0C9139AD80BA0D774AB
097BB7E668F3614644C6589FDC8DAD594B69FC6DD097B4B23D1F6C78900A730F
DFB7D4AE2DE1288FBE1D3FB1E4CF9CDA07319CC546748DF5000F692FC19122FA
ADE36226DC1885C6B24162E2840EE1016D189EDA3A1E0501E8F8338BA75ABFD5
E8EDF86E349190135C5ACF642C4CB92C6749E080AE29CCF2C4B35E945C574857
5D0383949751766FA944E490B8C63A88FC41F93995B1D16B840EB53D5078407B
323F4EC54CF3F11877A6E2D24145E861508A7BD68F0D68965BED05F0E52AE42D
2AB8B587D89EFDD6744F573CAFF2CBAA41C9A717D0FB2502017D8D8837D2CDCB
4F5A8D34D6183E0DC5DD78D0389F0257B9ED5A91AC02F82D43A71A217D7316DC
CBDB9B61BBB8158387DD18B01724CA72B584F8E80EEBA083B29D6B2AB9DDCB26
D39F6AB59405FAC0EC7C0FB862CF8AE07283EDB3B86441713CFE282828E93178
6138FACFF972079071FAF5291511872FE562FA0B11E0BA9560436067FECB57C8
CA86AB0A92FB041D3FBE9E84C43BE0001FBAD623FDB7FC922E47E2DD9D60B6AF
841AD4A713DC5DF59C8BE835CD1BACC9497D72F4E65E4CFED3D4D1FBB7C10107
0C3C20940F63552F0B4B012393888776D5CA1EC021E81579CE939D058C90E9EE
860F1C34D8FA5732D9C42C2E92700EB1E25C957DE219B8AD72A800B60379720A
63410EB5D851D5C199B978F0782DF68084259F1E421E1EB4D2A9C485FDE7E067
15F75B8B00F95434BE8C4326B71016C589FB64615BA8D52B6028033EA70D2BEA
4F2933E7543B51C2B160E23F87F7F91225A6D20A763441223FD433A7A6F09D70
B857BA13469AB76DBCB472088F8F868FD0C2669DAC0426C002032BFEFE0D026A
925879D026CE9F5B78A52ECD86C2C465B5FBC0FF39F90F3A2C2A988322701C67
46F6A48E41EFA4636A25F40BC75D896F55C49C86D5D6D5F14BE6392110E5DE97
0D5618FD2AAE2C40EF74E8DFA2B5939A411D983FCB29FA132846B5850B3245BD
CEB0104F0FA81608965463FB6ED54CC9E41E65DC6D1F9C46EE344BAB8E427202
83C38210A9169890DEDF5A344E77E93AFE25BEAFF1627276CDD82F9A90857FC7
D4210AA3D34A26DA53BCCCBDD05535F42493C553AD78707D3644E0063D50349B
D50E863E1F54F5733DB22B4AA7B24E6DEF9903E16F62D77C27F47986E2BC33B6
C47EB4FC0F2CF0F8DEEE2A27E71A217F4788E0830EDBC02E65F213A3C6864D7D
A731F1D309174BE4F7B115615350B145B216EF357F236A0255A60E0B37BF4361
AB892E940B7C3B4298010844F8F4ABF23B71B47DF439558CB59D749AFDB3E52F
B51B82C9024155050A58FF2917A7E97298F16F1604405BCA551D43C36DF6A772
C67081DFFA62A5149AD6B96434AB6FC9C2859734F2E0A06689CC13A744AD8A60
E5EEF3AD62BBDA25F2FF41F99BA7BA0FB9ED5EACC8105D9A2E4DF541699FF1A6
BD25333D30594AB215D1A7F768D29951166EDDE5EDE714996E261673A5BF5DCC
7EBFECBD1DE579BFEF6735B24756F0677E2068F5ACF7C8A08450AB91AB46D2D3
D83D650B58ABB38EEB8DC97157B0F2E6A471ED6DEE777B886A24545FDD5A939C
2F33CD4D025077A61198DC9752987ABEEC263059925CF2E3CA774E92EA09A046
47648BE74A568173223761ADEB6E1F67A31B322649D3EF4B23F62076DA19F380
D2CE34CCCF4CFC655D0F9B1F1BBAF58AA9EF59F53CB583045390EFF695756EF7
7D11600D13A886CF349CC40820D6DC2852B478716A5BA6B204A039DA6A2A77E2
3225FD7B7099BF3B8CFEF457A7E2BF19447E573EEE8643CD80194CE61AF03D39
91898BF846FBEFE664AB413594DF61EDAD539B573ACB39C48E2AD105BCD06009
2E1D6A45F5AFF01967C9371D1124CD37AB8D284A33C1D4241BD1912CA1ECC96C
7F91E8CFC725CCC6B256DED9F5382F3FE79D525D406D46420C025D8D7E4D50D7
848BE9C650DE373EBF939792B6CD340B0B6CD643539B6DC8EB57ACC29F21BD61
77A4CC7E7E23EE9AEDD68BFA476F94B230A46EE0DF25A023D4915F3467AC5E7B
E4096CCC020948F934307F61A45834E3C05DBBC32339D8167AF614B03929F7E7
070980FF149C61B9CF3EC63E7C53E57106BCFB1F71E031B20FCFA16EB6610384
9B235DCF35C1C122386E412A797C8E77300546B32AEE81182AA106856113A86F
1FFCCE42D8CC137C54A2621941C6A569DFE7AD72575F064FC87EC1E0DD1DCD92
5D4FCDCD637FA8B19ED86BF8DE00702E9E48FEA3FAC9D2DCC198E46B73B47C98
A95D9C3306AB6E90E558898647389773C6A7F7905831158218EC26C7F1FBA54E
BCFA98E7DC0DB9340C4E93495709DBC5A65F99E289416A3FEFFA57FEA9F84957
6CF966C64C37DED01AFBBD5A10F20693A72423A98794EFB5C63C95E6EDF337A3
B44A7C418DDA1F663FF15D8E379165DCA001E04FFA2133D115E1445D9F99EB96
D28765F47EEB44A59E5770E592DDB7E366A2F5556FF4BABEE08DC054EACCE2E7
08D2A658340DC83A123A8E65BF1CB877CEBB6F3C36C101B571C7ABD621571415
D7A2A4865EB0BE75EA99A0AED23305EBEE8CD03F64B839895115A9CAEED8FA17
EC392BCB3687C3160CA615B8BED9B9A29624B70172E2D6086D26E485D575EA65
1C567111B4700FC66FC8F2BF90624E3218F6BD3C44B98F4C70D24C2887242231
5C3D26219ACB794C3C68B2467BA4D9D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.0: CMBX9 003.002
%%Title: CMBX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX9 known{/CMBX9 findfont dup/UniqueID known{dup
/UniqueID get 5000767 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX9 def
/FontBBox {-58 -250 1195 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX9.) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 72 /H put
dup 75 /K put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4347EE3E5AFBE73BA
31023D79A7299D8F662042A8D8B6A7B4E86F48AE98EF848E83FFDE68E17A0832
A181C126D15EC79861796F03957F5A51462C817DF752097718413D012D19C9D4
423A5EAE1EFD4EA7A9651BAE6E45CC194BDCD03FF43F255E58EB5E50CA26BB98
B8B11E21DBFF2BBB04D039E63C453EEDFCD9378F5E7AAE3A93E8691DED5865B2
B78F540F8AA3224BE372B18904651D057608DE4DD729FAC398A80CB904410451
90D66C44E943517A8F4969673B985D9D244FFC743E0AEE309EFD224F7029D37A
F6EDD96E2F88C9D071FF16EDF055955D31DEF10808B343E948BB4F6393D275D0
44C4DABB75332DD716E8127283E8D70511F8EAF4D1A5F72E2F8503A2F964E5F9
39304CC17ACCF531A8C0B6A9D58DBA6F24A4ECA62EECC939E8111E4BF79BDF77
D656F9998F1EFD2ECE3E61CA526106662273D5AD3E74D08E9D4453569B359C2B
E2455F2136B4DB54ADDC3C0256EB7A11E1615AB9323ECCBB6EB48ACD469A2020
A873E88B28AEAACAA01826C1C18120774FD5324DF9AD36FC256706DB24FEDF34
0FCDF04B12ADB66876EC7AEC183A1EA8BABD38BADDCD0EBDE11A5A1BEADD0F7B
83585C3BA141A8B296872F712EC42C625DBEE9EBD2C414E57CC1378CAEFD00E8
DB4B84F51967F2968329B8503C4B37A56F6136DA89167FE3AAA93257140FE94D
D96C7F85C6F82AE1596511ADFEFDEBC1B41B0395E66D2074B39B5565AD4687FC
89BB4BAFF0F7568D9EAF069CCBA2DFF61C59E2CB2F4274459792C5D097FDE6DE
0E40AAD8DD8F64C28D04EE50AB79EA7D3420CE42D39FA9080E9E046A4F22B5AE
AAA17FE750BFAF7BFF097E4A6E9362412C55E25767C311832C1C0C76005C733F
E046FCFD4CF49C6181C24BD299E90F20A0A0ADC868C11A8AB7F610186D0483A1
B3BC4FAFFFE12FD746777209B4DCEF0E4ED15D90F19BF2FB2B56231FFDE5D40B
146E3FAEDDBAB365D88CED98629B9855AD6E57FB01BB82659BD320D248E5F7D7
B584DD43E1F5DD2C91945DDB772E5A62AEB7080AF36A83D2BA8533E7E6FD287A
924F616F8090E9FFAA607A21F38718D668FBD6BA3434500BD01EDCEC00354F68
E1D0E9A921DACFB83FB61C1A5C27D027CAB348C4B7E2781013B68CC5A2BC8703
2809A49A0C2E9E004D56844EFAB4A8763B103CF7CFF980C9CF7F6BE28814CBDC
348E2486D9379DFFCC0E9329854D518B49B98F582972B0D1D18A3319EC00DDF2
F64C2CD2DCDBA287B279F98D16ABD1D140246E8B66C759571981FE7402F14C94
18394A4C426AEE4B0688D86D08B408763DA3537E5BA0D6A6796C316FDB0193E6
77C6F257BEDDE17F2CA5E661F434964BAC9834BFF36F563637872FCDDE94CF22
F076D1C2DF6357D8A26D305D52C9086CE36F49CD92ADFB4306705A0887407C9D
59B6BFDB82379111C9E33692BA9E2ED9782CE4334C6125933A2F210684642DF5
3B129F955BADA1E86D6B80CE299FA0D1C0AED1AD61686AF1052A188881E2125C
98083BA8255B92B9CA0B48EB57F936790DEFA6E6947C0FF4083FEC296FF3034D
AD657C64F2675EED2B4EED1E88F0B1338762CB4C64C79F111CDE9777A000F65A
F9979943ED7C445815BB59052B91F0FEF7219E3DF27E1D5155B9C42B7BBB06EB
1815997FC3471CF963A15B1C5E4653C84236CC5BF55A31B94E394C635B95D847
69E8134F4FFEAE836CD6AE71F58F48AA2F95BDB1E2CB89DEE590EFF3AB7097DF
AC185303E647628F5D87E0D82E6685DB467A0F8B7D3AB2B7F3F11BCC99BD48A6
FA5D4D75698454CB74451B486CDA6B65547C0CBAA563EC3574364540AE7B11B8
F9E86BFA655CDE88DE2E7D41851FD208649E9C011E04C78ED9209FD56E2447BC
E1AAA0A3D36F6406C60F6B19347CCB7D56A84D961E17E361F92C5542109D9BFC
FEA2FF9775230EABE3333EB25A40E29016E9A8255713AC8336B8F7DEB89FEFEF
4006DAAEA26C6BA1EF494AB99C2BC960D9E07981BABE909B5C121F2CAD48C938
A36129D10D38AE8F5C64879F61138FA9F7479341F5C5DE86376B65A642B9622B
E58DBBFAFE07EEE1D11DE9DC34309572868586CD92D39FADB711883AA85210E5
C82842EF225E55370FE0AC600A170687C60C8091B0625A1C5589186F3C7C1218
B15B5CC3A5CDBA7085338D963D929A18A651EC7CC39B8500899DE9220A1BA363
78698E414607C34E06E29AC5BCBAB98A70DC2BDE0FDDCCE22D4717EDA7D95397
33420EDEC2F1D6E7072FEA85945378A6BE9C7F68DB4FDA6B5BBC0032B3C02519
F4168C804B6A101AA60EF4FC40C2428AFEEF5A80F9B76D561C8A21B3633E13C5
215A14D54B8A1E6143A9CA0B5794D20DF97C35B3C9E9A4673AC2123E7DD8E216
044269B1D6AEEA46757F8D9AC5C8A92BDC1EF22EE0575C80CA7895722CDD2BA6
F9A208E6BEE5319E63B3B3CA197D9739A4498AAAC9C7484D61418ED2BEBF63A7
F5283A075D1DFD4B2702E1551A0D1A90DBBBEFB6A55B5F29C869763A856C4E61
EEB3C8E14E3376B7D01A4E265C6C8056ED23931DCF669A0EC9427F74A147AD8E
82E172FA6C13DB1281651BF3D14163D963EFC7384BFC4B3B9274274DCEF647FD
D6DF0CC146BE8AA660D709526B394CE253369281FDB45AE071319E8FAE4EDF10
2867A431E22779EE40D885E95AFBF62916D9900016805D004C0375D29130CA14
F3E466AF350D1A5D181816EE1C4BC75DC09E4195DADA5AB09CE9EF2C4D5F7CEC
6C16BB6EC791E2870DB46B6B06DF421E7A2781D82A07D92316B553D068A1DF5A
8B19041F96ED637B932DE184F8B856FE1947F5FC8AE505F0E3953B325E0FD6FA
825EAD072AF06E258BD35607A1F082DFBC2BA5251DEDCAF68B4D03086CCF84BC
DF70BB8D2EEEE3E0EAEACC8440AA130273E5C7E78A15EEF66A9A1E0D5E022188
0AFA50FA55C6C461C743E1845FED77378D639839F548D6827CF371AD3DFCE592
B7F6E29FFEB6CB92B33E24E34875A5A92C08806F67E18AEAD86447A977890AE2
30A452F33B609DE5B792D9CABF39A086C0936AECC081CBBC810B3EE1D35F9717
260E76132661E3A8170759084AFAB04A6E773E9714A6D486E0BF46F336A7CDB5
C325E28E747295CB0E8FFB289F4907BAEC213D4D0B495A246A3DC359B995E9C0
C5322D750E13159B7242E4C4DD27932AAA130BC6B0400428B5E6F928CB8F7658
EF02F7522779CDBB67722E09774C419489192FDAD3DF272C95BD9BD64DDF0BDE
999FC72607F52805DCCA5EC17150EEE38B866E3D5199E5A6CC262785EEB11D51
80E79545DA191071487EF70C7FAC0CA345955F797912C1268924DD79D0FCA3BA
460F43E74975C04296E34423BD366A4EF7EE9463ECEF08F7E7BC8BEC570F812B
066383C2EF5375FB1504537D902818D63B30385421FF81AD92A1C153852B1427
A39685A76DD636DC4ADCC53F2A78F795F48EFB23807E5751023FE324CB401281
60F8A8DA779A245DBC26E73B61A1450F25AC276E1B5240578E85E1CDF5A784F7
D4F5BAFA76F70300972E4B130C685189C4010B9035A5CBF0562EB3B387FD89F5
C53A25D3E883B506E0B477389DA5CFA82CB157D8C30F287678B0F9A17F5A8704
ACB5DC57D7CAD21A4EBA49248F277F929D3E49B17463EA5F31A4FC11B0836E34
3A5FDDC6B9A45113590F114B99566D18C21464E7FC1D9AAA9B1133E5E8E2D14B
8E143E1E16595C42376694A83684E3B217A17F158DE89549ECCCB443701B520B
E20B972CA5EC6405C479C5054663D48A22D105AC98AF094340B5964D0C26D9CE
241D2706D3444C1405B2C9F7C912CDFC87EE8FBA01C0020D1AED1A6205A8A45F
8504B42431DB5409BA8AC472F2FCB4CE698F6DA92C4C8BF1293C2C998B771540
3D933EB5E976B7D2252DAE9584E5C6864B29C3048EE159BCB7638CA956E07F81
F76391380AAD2F1DC2DC201BAC657A1BC93F5569A5F612A4EB6B01F136F41B87
E20D4DD6ABD7ACF1275FD80D9BBB87A45572979BDFEF59212F1F6D9423FEC976
1228499D626A328569B4BA2755B1ACD20796398AEEC5F3C61122D52124996535
D0813227F549FCF59C6182D6514A70F9E38565C8C98D5F797318FB531B5DA58E
EC60235B6F1D97CA5D495CF689C3F9B3260998ADA1204AC00135C7C72700DB00
7C06798A46E897875BE619508DFA2201FDCF689E51C3D85342247B059C0DDA14
766A31E3E25E792F090DF3EA0C45C3F64AFB918BDFF92FF0ADA2F71866CA190B
87B2FF90C872284652619F084E2259F044E2980101A62004AE9F4BBF675C5279
BA3437ADDF2D552A033D2301A669EE8BBC840C0028275D077B8E9977D447B396
F1D82608E030FA43511BA01C345078986B8C35B6C6990D018C2DD2CBC7774450
D8482DBB262BB816E6A26A1FEB084FC2027C62D17790C80C65A9183F23BB2458
34FDC5D566C1B667EE801D0521BBA520A15C0C923EDAD84AD6A83DB23806711B
0AC2631C15EB1D33C26F8D65852EC37A3479152557366929A63B753226059870
45CE6403CA23FF95BCFB6F0C8DF8CAFCC0BF27C59414217CC6552F5945D9E6DA
AF83F4AB1917742F7502B069DE44A6ED3BEC966F59A84FAA2F8DE441C11FB122
DEF1768D250C0CA5F2DDE6FC4E24FD3AE4386B91ED2A492A959BF7E4C0AABEAA
5BC2D933147A4A21FC5E5CF3B2AF5C0A768A8B79337FA3934A43E24F9F7DF24D
22C5BFE4DF1FD57289A6E1C9AA48D32D20F613AE94B4308E0D3BE4D1BC95B33E
A9911B82EFF461D295C5462EE2B12A3E40B89E0BC778FB76F8B847B6AA99E061
3444A55D83FF839B926985B0F4E562D726FD99C5DC86DA24BA7AF38B93C90F51
A937E7C35793010F351594465B39BA5276F223DD3CAE1868B969D8EC93AA50C1
4C7E51D0D7F5E9F0EDBE1BE24BA5A977163BEC724D575749C56C4F39BD60F3AC
47B930C9E07A2D59642C9DE85EA6FAD1E7D8817812C049FDAEE148E8AB207B89
B2324191F1A82A7C499E7BF09CF1299F0ECF55EB0A2A32C5BB89411B4AF2A401
074718859CDC27C2FA78BC5269D5A38DBCAE55F6CB669DEED2C36E5B0D590504
B6162391FACA9F20224E6AD24B86CCAC0048EC7A618B3263F82A317B3969F0FA
9D5EA4676B27F371785FFF6599B61A6D32E82DD9D511B04E03F14C95A4CA6CD9
5B59A8A7BFB2AE32E9357C7766528E9F74BB8D0B9317F02EDACE2033B7918D6B
8616F1C1B3E113B0F77B0A1292E41F8353DB55EBD872290491AE1FBE95EC034F
DAC1394928930EE297693598D97EBD0720A0A7B4A5DF4EF4BE0E2E0968E64CB8
167CA1B8C40A779023AB6F74E0F1626D8BFFA96EA09CA88524837B18DA6152A4
3F0DC3C3958EFFF86B07581B416720FADFFC4AD35F1553A18944A6DB8FAB0AE0
A8118C09DC8E905CA32904B44E0541FCC7EE555335E61108D8346B4EF697DE67
7F67E1E4CF0EE2F6D89D10FF2D115C6F8163B8180378018F58C148EAD188E969
C60B83C7B295F30614B93FF925BBB2974B0B9C68C2BBA6E973DBFB5500A574A4
F7348BD31C735A1E57519990582D8F7D97F8B63D9DCD488DC569D5B392FF26FE
F06F9762956D64E9C258EB9B90733BAA8F1912F3B9AE88C6D14DB46B7131BCBB
D47CE60D9C63FE0B9620D03F615EEDAA3C76A7285F9897A0D476F35F5CC158D2
D148CA1E5A96D16253B360F34336D476FABE9A434AAD5FCF65A27F48C5BC3519
DCBC35DC1D324A270996B8DEC6D3833E76A434E05074C7E3FC8E5633D6B25B7D
69D9BF7039DE4E755A7E3BEC8A4E5929A98FE265E742B269666C75644E53E6A4
C5AC907F7DEB319BC88CD1A7F29A0A4D43D471892A674D50C70BB6EFE5740F97
50522F2EF056E208C0134EAF15DC9F85C7C06066782B715A5EBC22AD414A169D
86A2F606150B6F903D3AAAF44E75649DC410C3B8C845909BFC8235E573A2D291
19440D724C960014917EC802414651E298160EA70FD54BE4EAA1A1007ABDA8B6
085A89221C3DD5E9C759C19BAD6EFB91360CFDEE6C4876AC19B4BF67A38BBD5E
0BA20996BEFC1F8C427EBDD666B30DF5A2389F1F3BCA17132FEFFD3231570AD2
61CB33381A0D2E2FDFF470FAC3A60E61E99C76A3F4A6BF32FD4B2B6DB6B27F2A
76A5C35E24E78F7DF28AE1B7D04A71097881CB67E060DE537C1A318B95964FAA
1455264E48DAC7689EF10905E381C569DD65825089EF325595388FA5BA6A1EA2
E2536872DE92D46AF3BB3F1DD920FBAA4481034DF831FD15C01798AB04A73B50
1461BA7298B2EAD460D6E645A9ED41EE0E0282C335AA716D7563AD7CFE2841B7
0C782ED3F6D31871350A12A41AEFE21E9A03DF676671E4C953E51F801CBEE091
BE0B7B413B7EA2479E2529DE9E49C03CBE8159DB1B28D2E290826B6D01B35DDD
083F85E9CAE378C1A3B7065280D9FFEB04A02B76F1F0E547328F005CBD39936A
5063812D1C958FD4EA6BE9FF87E5FAAD483055819D1DC39D31B8417B44F30B50
EC95E26103A0DC2241B56DC62D424438A5FDBA8AD4D9B417F0DC31CD82DD772E
FEA23036A719927A4654876985FF4AC2D28A180969A76F3584D001A2EFAA2BB3
7F0CC228CAD9A485F3FEE3E0F0059D3BD8484FB97593A6EF08F9D352E3860613
2617ED6138ABE551DBC67F0151D0F9CD83A613C245E23FEE6FCC8858592AB43F
8E66FDC5A27F9312091478D102BF867B320431F7A6EA42EA763C51FF7E0E0FED
A6A830AC95600C837033968174A9406D0DFA72FD65ADF153E5CB3420CEC76A3B
43DA6743F24C6CFE0E9A7E78D540385B657CCB379BF5E238A07B836F907017D9
C0CBA503FCF625536E27B77A262A0EA1C3DFAB015EC859FFE5BB26197A05F4F9
87046F3AFD3387CF1B040DA7B7CFB1EE92816C7C172164CBAE3E9204559C2A74
87E4A41AFB16E7789686047067947F41C82A26E3F343E7359804BFB3B7904F4A
12FBB7EA0E8C26801ACE0E9093D7E2C3E288F781E3E6A53B8C121625CEE7354F
B1A059AFE21AB4DD2B43A9DA710F2D811F63DC41699FCC43330DC7AB9CD10F00
C959F73155E9D63EE7B20970C7AB1B9A8A51D0DA0ECDB917291FBD57CFAFD9F0
E1636B9DEC48FA7FE5B225283546B01ACF3036F1B5F399688F1657E41A5F4EEC
2CB1324C136CFE6C6B92958597B952552EB7A8D58BA7773CF685FED451D89392
C290D38D67FA7519ABD024B85D3002D8592C5D30B50726C7BD17577FDBA79E38
3D99B3A08797696E593C0BEDC50706C986E6BD05AEF30108F4BA192E956D2942
72F59E1A025FC31568C2EAA1D5942A479203EC01B37626F1EC334DC3C6527C06
41162B68D66E7923911921E861FECF78F36E4BA60B4FB8554E83AB554054B2C5
8C05D3FBA010846BC5B32E9ED62C6A0E8D92B8F3546CE0406A87634E2D96F5E1
F007DA0161E75DA55FEC10F7564CD7CB9AA0A016438D082D9A9FD107CEFA7B27
BA3C61B3A13D9A30E4BAD25B2FAE3ECE3FEBC9722B448E3AC5DD9FF784718F6D
DF58A8A7DA91086BD86AC776CAF3F4F2DBC2F0AA81600D53D2A0EB178568DD96
1ED459E1CD3D897776901284DE5673813ABA0CA7ED342130B261727DBAE566E5
F57FA86A7B4EE5F48F039FB95D318DC142E26022D7F85B34558E99078C5E6467
FB2ECE5B519F7F42C0A29B5C062C6CE6F2E1B611B4C6033E677C436D2D22121D
35E02B314EC425871A9760C80B1EB6A04A6B96EA9E36FFFA2CB830EC3EB2E839
D0751AA4AB1244C1A154ADE5803272A4D03EB18A47B9D091234019D2E2248398
D0BEA2FCD4557D0D226934EECFDDC7D0B0B71B47A2787B5095BACD95228E9869
ACC993754B6924988396DF3B2EF015C1E1417E02C197B010E49F7B468D51C051
13E4DC5801A9A1822013C4B64C9BFD510200C2E03FA050BCA016D431A70FC1CA
00F7391E9D2287DDCA33C2F03885C3697AC4D8949A3526FA5C8A4255456DEAD9
5D881994DEB86AB350C472628B2E15BCCCF9F12EF83CD6BBCEFA630D0B38E790
7C5C2BAA23F39C7E68A73A54FB4E9E9E4CE34660A7B6C084967A50FB5E53F680
FD000657D8244CF19E38D28C66D2E466B4E18359D1A86AAA228B9C47E3E78C0B
22D2600D5CD55A311F4C7B24E484023D78E9DB5A2446FF209D4729BC929A9E00
082942A5C533BBC5342091744EB5AF7CF0ED05B26D65BFBCAAA74198EEE8D0AD
C4BEF10DD41767A4A84CFBA77156ECFCF0B8317D9EB1B4B788BE82AEBD73100F
BFCF2FDAC16718D93A72FEF566B0E5E7059F898B8252E1EDDB98DE628B34338F
252F0C80EBC0102F935820D7691B230D15BECCED0916847ACFC0555B5A3F4904
EC5B5C9E828D792CBD84259E4EFA18DAEBD26B935D0EF35EC875BE2ADCBBC668
807010B6E3F916082BAE53CBF5C644015DB6509BE99B13735FA47174630CF543
3ECB7FDF3665311F13568455DBB7BE747FA3055C85D171C037117B0D740F2BD8
FF08C55637A13655C78662D3CA5CD6550886CA156A918B7E5BD45A93A198B5A1
09CA9DFE7C4E1E7F6414BD61620FCD860E354CD4A70322B2BCDD4A811B7F5D5B
CDF0FC74B2621802B29C49FBDB8B095EB19E3A8968AFFFD515604B1AE6D39EF5
9D0B5788711F2EEB0FE30EDEE5DA910FDD4534260C1CE319F447D93A53666C35
1DA5FB58A60BEDA95EA318D843FF3238937618FBF1749FDC95547524E25EE4E1
1CB9606BE5763DD96B4FFE753E2BD567B21A9284AA839ABECDE7E13E762231F8
B4ECCF87036D8710A517C2AFACF1AAB5EB6BBB58BEA7568F40392D051CA768CC
B4E6E7544D6CF409A1FB9332106BE47676DC9B0C4CFA1CB5CEBD6452A06167C0
DE7011A65EE718488956EF7138EE8C2D028297063FD26919C64B2E5CE8E1C6EC
0C90DDC40DE9ABE7F57880C39621E6BDFC339A7E4A3F632F13A5E98CDE850FF8
B3A3AEA8414F1F4957EEE097BFC0DEEE6839FD715FA5B40082E336216495957E
E853672F729EEF9D270035F96FA92214A75695AEB3F6F5FB2AD8DF266B8B03DB
BA823E5205073077F3161CD363ECB8A14492C6D3DED15E979D8392C29DD56CD4
0B378060D3A188F6412230A88779393F4A5E8ECDA634815EDDBA0CE998039E04
997736AF9417A7CCAF3F0E46B721F60A9A0488CD8B7AFFAFD64965347C05C58B
B8859EB604BFB542E6E3CA953001AD48DA806F8E3C7258F53C0F11547B8DD5BA
DE3B64DB50BE66B5051F706145857D9A74CAFCE948BD30B59E237AAD8D74CFE7
122F27C984A3EB4E833762C7E103CEBA1ADA036F73D596BDC63DF243D9DACC7D
64EA9BC9BDBC7CD429A02F54CDB28027F7955CFAC62971E0FA7D15DFEE50CA5E
8F33FC6EBA3F128456F98B8120A1B74F31A9203AC989DBA7A40154697FAC0A7A
5E8163536BC11E82A1ECB234C36E18F1B59C47FB4099C26147C2E5285E95FE52
E15D456361107BCAA07ED4DEAB30A4589456E100B6E0B99DD67DAF1B17DCEA3D
1BE9BB00D39C5C330FA60E2C3A6D4D775EE32EF417E65A173BBE31A836433CD5
E79BF7278583A4A92777F2252C8DB0D6A1823007717BEF0B69A79D5A1F80D025
B7A7652B32380464BF63F729E40A3D8D156FDFF2F70918E31C708674FE5054EA
86DB7D89913893A8B7BA9C139FBACBB37A866C571B8FC56833605BC94DCE76F9
3F574F8ABCFC2A2AB09A9B5CABF253839D6A664871CD71095CB92AC70979AA47
C348A48C6B2827D9B5487E38BBF27200B23BB19C818BE72CCE16265DD46D9AB9
A37C5295D6D2920B010812785C1657F268D8B0E1DB31CC0416D269021D4EFC90
422ABC33B00936A79F69086E75ED4616478CA112A2EBFC350821753A512939F2
503458E089C8B653F36A48AEB94DA6D0F82CD9921E3DC4B5D0430750A9BE68EB
47FE0C9CCE27702940BF9F2C08B5A9782BEEEA48C546CA76E7070F2E0CF8A9B3
5403B34A81EE1BE4DB62B40E7C06E5644A95FD19A05F4FAA8C031B9392B34892
7ED4130F8A12B65AE0BB7D7D29EB34B80A6FF20507FA342DEFE6492FC4703E90
068899C9B226C80D8A0267FF5DFC217D04E7A363758B0EA7BD9A9D6411D3157F
A3EBD910C3064A7B272D8E52DAE1F66D8C0BD888D311A922FA6C780E4D9C16F6
6579BDE0CAB362FD5C843914618906CBA65C50156E491DA169F1D0CE0288DC0D
9325018D84FDDE1E1392F9E1C0BCE0628083C503FD40F0214AB6B3E3B9F38347
7600CD129CAE5260281C97A2BFEC267CDAAABA4E464BE83C829525F9BA5A7B45
12F5DCA0AA661A9238E11C72E633C54CF0CAE35D05FACA12783DD7715F580ADE
54778708E6F63E7E67D42514902794193B20CECF795355739A2B8B2D94ECF7A4
597465C837C8F2BB1325AABB107F410875FEE4EA7EECEB11D5ECC07822A29DA1
C1B81EBC486CB726876E79907972AFC1D028A0788E78DF159B9BFAFF17A36A73
6EE76DB8F704FA3FF179BE635E1F848CA99DD39587A58F49F9C11BC292AAB0A0
C9CB170C35FE73847B0F460E493310AF4A81B79D14853FD3A067357F2077F945
6ACE2E51CD03E1397D1730F04C5AB26F26D7C5202F5C412E2C4F2CC9520DBDCA
69B8C6876DCA3ECAA7642D29875468A53E7B64B18DFBF18B308D74D8F93D6441
00027FE52815CF7CF2FB3DC6BA55EFEF1D68B2B0D97E7E4443263C11D11AC800
091119DE5C195F8D5C5B3B5895C5197DE5AC5A7D68CB7F56F7DC97C357BC1B2D
8B8749C7264989750689F530E3A0E27176E44DDF48285929E3A46A14F9090287
5A98F611A2E75F1FB86E2CD00FC51808290F543A73751E4F04BF0DE46E3430BE
349DED5D9378014146249DF9E5469FB6D960619D8C7AEAB8064667E7D6B5C2A0
8B6E21F8C841DC136901D788D88B24CFFA0ADF67701B2C1C332D2AB6DBF76B20
1A04D21C0F2B3F2575B1196010094313B46927C7084092FDD252792915B6C733
55C46CAE8E40CD11DAF1F81A268F73B962140884B1D56CD85A3244C20DFDEDFB
877CA6E2D875D5C2D7D54F1F92AB4CD2080AC84F30B366AA7E98A55CEAC9B17C
FB0BAA3D43F78746023B1A4011BCBDCDB881D65A3F063C4D27E1EEF83AEFB1A7
96B0690031F50FFDFFF2F47E41A392AB07878BA3B355B856E023EF24058E3A80
138738745929CEFEB2068E908CEF8D59163AF61AD3FB3070DC6BF3B1643B98AC
1DC2B728C7AB8E8365C43DB4D00BE60AAD8C7A2D7887B361297AE16CD883715C
640E62DC5392639A3F76E1562CD4FD33A69B5147DCEE64EB3BC71E53D002CCA7
F5125157E7CFDF722CC418BC9506BA8927A5AAD3FB1FE8117DCA009AF07AB126
73A00607AC6A4228AF10DCEE82F08CDC0CE2EB1DBE7BD73ECE51113760ECBA78
D3904AF19DBA01645E9256040A76ADBCCA5F3897010A4282992149A9C4CE7A3E
C64DB61986C5AEAECFFE809C16C7DF143A2B8565769A120D806F6DD81FE48441
AE5BEBF24DDB120668CB071B290BB9FA98D156D053AA2670698337E2CB00E942
04E29CE54AFE6B76E192B9C578B89DF12369ABB6F11B9E7BA7AB309BDA782A33
3EAB61E22EE23AEC9B30A5B8E9F278D082C5ED86FC738A9DFAB103AAB45FE62F
BADDA1241F5F4D491E16B9EC505E74A6B288DDF7531D31DF180F333FA37732DB
EA89E10E9875AA77639744BA62AF37BA68212FD29F37FEB60BBB750575F2B640
8AFF9AF47D6D0D85904E620E5A5E01F50C253FBE818574E87768FC4D27682D3B
A9828E92AFA7CA05AE240EFB5B8A72E4C3818A8C50350B5E5D28D3DB917BFE3D
9ADCDEC5DCBA8AB342F7F248C613201B83B3607B3C841F7EB31C63DE54E11C4C
EAFF2D9A0A138DFD2DCC30CEE16EBC5FDB68C4980357740D0C662568FB397FFA
C62DDB7AC3CFA7D45450AFD711DCE8F334C91871DBCEE299A964A6389F5F7D0F
E19F08C80241AD59733590DCAC875E1C0F1E70C67D4FD17EAD282C633D9B0618
7A52BED068E59D2236624C9D8AAE771C3DAC438FFAEE99B6388FA47178FB7718
24C532801B835A9175E7F340C89CDFF88AC082EF3A79C9F067B178DB4D646D5E
4071A004AEF030CF41B68EB78FEC837150DDAFB5C927187F173B432609A1CC0F
7663D7E8ACE67B88B1AC236D3810E86A41EBA4C34C10D85713100C4372856D4E
CC06BF0521662BD7BE7BF4EA2BC9A44A3FA1714C00F30B3AC46A45A894E25C93
11A85996F3920AFB0C1BB73A2BB8E24951993F0BCC62D6AC583B2A0918AB10D3
7F7B8AFB0BBDB5417E6D22A906BA1F938DF9F338AF1C3AAA7CCCF730DAE6D558
7DE4CFC8EA5D73BDE5108E1FE62D602BBC85AFF162ED3EF01BED879A9A7335F5
64FA6D4F5C15FAA83D50B7291668F1D64AD0DEECEE6BF1DC858D2775A0B89DC3
02A7057F9E58BA083B7E00DAF32BE6561606E90DAC332586FDEE42FF1EB36170
88B8186FC5AB76C77D75EDF72CCD4BB1D8EA4634BD25FEA1176E88F87E4ABE49
7AFDB4BB2F98609E9264078EA0333551A4928AFAB5919801112FBB2467A309EE
A09456100B40A002991E5D32244AC6A96806EB72C1A4FCE01450DF8012D2EB65
A49939CF4FF34F958190FC9DD799E46E9EC93FD119A57CECE640CB41C39F8E6C
54C12CE0272DCB6F47421950B0B2C3986CA4DB9D0DDDF1818317F10DAF7BC3F3
71E6816A86B799D679DBCF750E71CE04307489ED2906C7FC300E4ED5973890D5
06D9662AA231C671EE40BF3F5C43A4B807904B726A210A19E36B14ECE02B6025
5593A4CD042FC3BAEDB7480A1BB2C92F5FB38E077E82BE3327503ED26E4CF615
CDE44538376F3F6D5DF02D9184D9D5635FDDB63C368472A6F65DC8EE7E0A3BF8
42D6A4804028426976DBFB9A5E149EA5D8786E81234978B5419B7B06C75A9EDD
F3772DBA3CDFAEE0454ED0E1805FF455E3D597BC0B562B6F6C5A38B454FE7223
273F97C3F947752A25AB2098CDEED82DF90AF3BF3F342D77E4EFF3C4D9047E72
E74F0A93C2BEB2D6586C5DD7E211AD32AB400B79C2B2907BB21A607B0E75235D
23B43BDF6F6C222379F28BAF7DCD4329BA62C18D164EE57FC4218E687A17CDA4
BB73624B77A81663662006ED37A7F5FF96FD5B676F0A9B00C2A6CCBB5BB51A6D
B7857CD06D813AAE2F04299A78308B4C75C798D0EFD52011E7483729CC482F0C
B09FE13716A16CB72B254A97324542E4666DF0B705B81239631AEFB39EE275B2
6F3E26756D68F8DA3349238D963522482940015677BCAAACF66BC665D210FB5A
CF3737E67B7862508B9AD915412C467754E69D06089D86FAB9BC9B682FBB765A
096A68D3EC7D4390B813502E9D2745DA705386AB53BD744FDC4DECCC0A20FC50
709FB75820C53B03C44C0D90D6E3CA3E0205133D523CB09878610DF6C46EA63E
93765D9B54ED77D131A01BCB50C1B004089349B3AAE0681A9955945149692F5F
6956D1E9C3C5B3F2724F46878BDD531E8E40BDC391A26199389683D8C1318C12
34EE57C541048A39CC4FAE79E39503D8B9A03EFED1E050B552DC7AF353C670C3
2AE5F7E204BE885D444A30E53E1AEC240BB1B91C8B86FE1F4E67DB25658CFC9B
4384EE6F9A1597B091E5111257974E0A183889620D1285647E577C2798AF1394
9240005FB7D3D994672682609033CF4A0A5A95E204BDC0DF25E778AF66EC0ED8
4D82DE8EC16B79EFE5B11AF684457D2F580CDA451134FC203ED25BAAEE3D1034
9CF070FEEB3CD2C774F16D15C039697A0E6A495CBEA61DE7DDA45C8A4147BC3C
C60A75DE400DEC303E5243243E4742C7AE2A5DF277F24A996D072E87FBEF1AF7
D505C2D7BE8B33749758B90490EE187CA2BDB54265D215C71EE6BEB85EFD8220
6DE88C7128CA4B61753EF35FFEAC1CB38C9E1C9032300EC558C4222ADE34E30C
AA2D165099F81F4038E0F6297B74120F564012D6B92C49581EF71971BD60D36B
01754B5859CBBC3FA289AD410B3B22A7D326E30748FC777F846F7F5989084847
AE932DA4EB6467190B45797445AF3960F169430B8CF7F792FEE4B7226AB5D195
40F817A8A4BB52C599EA038506A35B20B04790905077BB6D77EBEE065366492B
08B03323EE030033014F055A5E2CAEB3E18E105538246E9EFC1C534377D9CB13
610D582A993BA131A90DC9FAE5D4CCA4A6D76082878283DA3937466138362AD0
867E684BDF2B8372DA4282EF0E443F873E1BEF8D7304AFDDF88F35E1422B69FD
C564037D5DABBEA2D6C304868D8FCAD8D4916AFF4F2424C78AB11F593C27D541
B301BAA08E8558CCBA2437F5B28ACE12D0E56BE0FEDA99ACC432DBAD19614ABD
167CE7EB62A0D6B9917D7A3BA20C4CB59D31D3C9CABF9C6F04EC53E91D610234
D585E349F4133677FF06C9DD6D94C5CB4A16AF27C351720C35E6743F8357DBC2
B5663B0DAFE18D7E38B6834EF1EB8F786F610EF00FD17FD31C43077439A0B01E
0A5D06AC557878686C47EFA4D89EBE5E669F172DDBC8B5DA2863395D04F4ACC0
BFC8CA882B4BFD04766C617944869798FEE13E18FEAD7725BB313033B37521AB
2767C8E4E4F9CFF8757231ADE2119A342E698C4B93F411419D074E889A31AAB6
8DF6FDDC704B97737EA7F17264509BC187DA514B259A67AF1A3A9960A5305A00
8C974986FA9934B2AC0B687288C9AB57998A6B98D05842ADB6ADE6E176A500E1
A2748455BED9827AC00CA23FD13E9E4F4B13790A03ABA952F759B8EF64A46612
FF78810303E5C2DF35D4D71AD7195F3D5A216C0DDA2EAD9B869222D13CFDF599
74618277F943B4F1F389DE9A2DFD82BF18C653FBB7FB8F6A11E288D77B75D248
39317912626BCC9D87D70F41B751FF58CAAE7DB3BD45B02F76A944FA1AFFBE87
620FEE05850647F7688766265138AA1437549B7822B87832040CFF13BBE9B3EA
35683312CF5E0C4B8CF43211047D917A05A9D6C49CEA096CD1639C10DEF8CB90
7FD858CF7F251CB6DF22F90AA16EC7FC26EF1A89DF858B0491319A078DF57F07
99A285F368CEAADA77DDF717C68D2CE5252666E5AB5F68A9A5E078D8610D45A4
80C870C09A79E952B2AABE0C6B36DEE952E996916F552F480D6F5D2FC28EA1B8
A9B90CA4D52109B4DF0B72BD0865EB74392612F1D34A3AA94E3553BDCFE70EDF
305BD758C2DE326E2F283DD5027C0E1B1A1A2316252640EB09A56C95FE0F513A
D0C287E5E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
24F2EA3EDA37CCC428037795EEA5F0D067D00249C3F19DCE62964A797CD20753
F196A1AA97C49E3500A5680480DB03E84FDA0728074189F24327564A0504776D
90A2D1A68B5128A40199F7E95F58826DEFB27102EE9911C493C67206636B8217
309417EA63ABDEE29D32282EBC5DFF816E4EBE23BCF37D7F6B9C64BB8312CB11
1DFAF08A68119DC643FC0A6A33501744270A59630B186741652A026C7A078FB5
1EDF9AB841F12CEEDACC27396ED061875BACEFD7F9F1DD435E9511BD66DD73C0
7D840427F2EC657AADDCE2B258E641574DC0DF03D7F0AF983DA835EDA8065D1A
FD91EB5FA202F4C27D4F5C43690B405F3D4A8B862255D413DCCB07E20812BD31
1953611540219848646387456F14BFC5C3B06A11D83895C9315B007AC3FF5C98
83BCE6E37031B6BE720C2C0A13998B0C370E0EA8334F8AB70DA7FF760DED0B87
A8D3282CADC259E3C88895F4E5D149F027BC310C29C2D1E749F6D38CDF193A1E
6AFE96C6A0E3D9BF5D7CDC4387579DC9B1D0400EA99C0263E8C65552B80D908A
C3D63E19E85157FB34E03404B3490A0549075699CA2E693266BDE55792CBF801
B8030505798A5B997EFDA1D07C22732489BEC42BEED1D9197398E5C4D250A63E
A1253FAF99B3369C890E7E346C3AA30A900512043A96C1BF0241F0EC6C8D5104
60552999670BCEBE57F6429B0CFC65DE0C795B5750FA0535F83D8BB87E73C914
C8EA0D60F8676BDCAC5A104F03B1EF1CCCB456C4160665C16BE74997348602B3
02F6F0A44123E762AEA071E73644EF2F1B7649D09A107578BA9732F9D896298E
5D6448
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 117 /u put
dup 119 /w put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DA3EA18ABBBA3650DC361C2E77
EF9F97618B0C337A906FF39926D2B0B7883ABBA650816C4C6B34EEA836994EEA
AFEDDE56E0099D0E09EB88EB093544B9BF4871200746A0409C475FC4232A38D8
F3105B0FF44E4F132378DD12D9E796412FD0F9478322215E9F59E69396C35AC4
097C4995B60BF4D8B3AFD0A002B3A6E4FA114131410D5658999B86DFDD3005F3
AED1FA8F077AD1F27EA249221585703F20FB70E37A26C6C3F2E101693C94612B
65BF89F37AA3C10A40EE8E49915F1A1B95D2193D8003DECEF9D76FDAA33B1AA9
CEDCB21C2A3B05747FB3ABDBD904B66EEC60CED2867442F5FE445587EB8C6D14
87A6B1B4871A8371A7ECA6A159EAB295B167CC35ADEB8512FD0C237421773BE8
A081FB687F9C5D676F2944DE6E6B639C37E8E49BD4A6F0903E0C31EAFC4B58E6
CD01B59C73A14DBFB287B7017F6AE0F6F4F85551429A85CD87315FB812FDA28C
BAC26B5E7CCC3A650565F8239A2A5EFA3D9FF922465298B05A57E2F26C9730BE
F421A0AE453EC19BB507F0979674BA75B9B20D4C0ED4CC348A59DEAA0FE68374
F5A64B15334595D97D9B2559361341E6AFBEF03BEBA20B5E04E14EF195F0B3D9
3919E382F703BA667E25D48E5BF0AB17EAE9516AD2F89CE32FC2649522188DBE
4B3C25F79B7C6C5DFA1BC88DD54715FB795FC468D39CB80F0AF913633599D428
25AADBE3348E47B7F81B804D7F71610740217E4E7E974448FF7C73D142BF303D
10A6347F5B1FECB903EA83B1BA18F1F895E68821620A8608AFD28541F00D21A7
D62324903C94243EE61106F8ECC930DEECC7DB3AFF358B60A71B47545D76BED2
4D2D511404004644C2D8EB6C19104224F5FDBC70A40B5551A0D8F8262FA3D2A7
1DCBE6134728E9F26B64E1B21EBDAE470624CD1E6BA8EBED936F547B1269022A
04DAFB66915E9C58A586281530FA3260198EC959BBA56069FE343270F1429ED8
BFB9E4E3EA1FAA3572EAE57DF8A219947D323C567C8220D433ACA5C695D5DD97
7A88D0E7C0A000673AFD749A94AD983117522A76D92913A57DF2220C54F6A982
CEAAFB125F243A5DC4891F01521649A87D0677C4647AE52E9CF6C142B90D853B
0FA15A4D5815C8BBF2B011CF5B9C000A6B02FFF71C0872FA5BA2808A1DAE72B4
7BF210F8AFD151D3D0F264C0D622C4D78C637AFDADD67C98F9E7F512BD91D3F3
41416757E9DE8D571CA7011DD094C13911E33C4ADCCA7526AABF61874516B0C1
1879862AED7AD4D02B7D119C5A7EF18D587CD4BDB324984236C90DF9552378C4
D5628C6DE84F164B249EC795F3A436AEB670E927D114A99FD35561E2E5608200
B8B4A9A1BD0AEE7C6A44D34377AECFC27C732718F212D3FDF365AC5CD8C5C344
4E749383953260DC28ED1053243E9A259FE290EFF3EDDEA84B9C1367ABFD3795
305AF20E79F89181C9784A88A05EF6C42CCD440D0603D49113F5F2379A5DD893
2BEBE6E97642E99F5BCC116DC21CE16223EEA3AE6B5CE804B7463204E9C975D0
6518FC04078FD4E07CB16334E050637953EE183E3D6605490BBD9A41D6C7DFB9
513126D2CEC3F9572F2C92F667CD7BF44C193A8B6D7534FDA1A31A23F6DEA53A
893D00EEA462A46AB3150E28446473A150DFC4CAD42E6B120571305B68468DDD
5FBDB0330802CB2BA2F7F96FED84D65C5C4CA9E6F96DD120FBD1754BB0029B5D
943C91C99DD2D487D03325AEBC701E82B3C8EFFAA823E86C60F60BFCF76AFA71
9794C64C4FBDF4000CF63C0205074A292158A3BB32755F8F3867E74F2155CCD8
9391289CE3874F04F3949F49D2C4465D1073C38D1210BCAD702234937284E6FB
898091ED5FD0291C98911FBB671F9DA632CFC509908ED25B779941D311954373
AB66CC420B65E6155816BD0A77F465E030760B66B05229E2E114E5D9CDF2FE85
781112FC1200DD042748E4AC90CC743AE09CB6614A57F4118A460777BD05C533
493BB62461641DCCCFFC5DB82E146E289202949D376B824F9E8DB5635D332E9C
236352A0978072F3CBEF3ECE5E3B80F8266350FCD7CBE0A73A9B4FED3DAAC5E2
BB1F8511CD559F65B1728DFE7A2E0AF64D4AAFF33C23C550C452EE572BE97FEB
4099F130368531EAFE8D4C52900C820B526C71D9AB7A822BCDB78D283E2FA76C
12E00A8BC2466F804C6E9CE9FF9103B8995AD511EF9820D0D6AC0F6795917BEF
3787D9F131B420F6F50DF5C3AA14F478B28C23CE51BB2C4DCD49CC83A44F14E3
7AE59A1CE94A31420D87E0570C7166002581B524F5E8B3390D79A0CA5050AB78
36BE41522929A53CC4F1397A4A8A97456BA8A963EFE5F84AC8E9BBA39380C7B4
A8923F29EEC095E0E0D5B4CF68015CCAB3C9D7B81B95B71B59CBE46B3D9BB97A
9199719E7258D14922C632240CFA1F4ACA90CE12DD5A63EC519B7C209007D9B8
1B196832708D584E8643F116CB9B46EAC278CE7EC9A66C1A93DDAB7094F14D7D
2386E2ACB422CCD10BECF776F555AADC57F1E5F2FE91116A3FEE2F79BD51C811
DBE11036427947DC400298FF16F3366E09B3C041F779612352C36477CB7F0CC0
DD4D15DCD3AA830A4288A22B3AAF61F49CD2FAE858C6C85F6B582528DFCD11BB
9E59C5B0061148A2D1802D1E50B2E3C2B007B49265B4D2BCF55C39247D10D680
0318E1B462A40E5F023193D5EA933932A5CDE01F4C08A747494BF88F9D29D06C
4D57230DC84E9B28948BCFEC441705B510CF41FFB16B9A76D88B23ED56BF542E
0ECD14164A76E3A9062D8B3C069D3F45C3E7FF04F23152E96BC063554059E8F5
DAAC9401DC6F663DC42BF44A1A12FD5FE872E8AED5D4AD3DBFF69FAEA53A3323
735A41792D657C2F75250C0D6C6428A397080F0F94AACEBFB2B6CB9D59A1667B
41BF89284732A790B6127AFC905D392F8C6A90987EF1C9DF7BAA29F8012A12D0
024C190E98EE96708757312C2C89D9632E5E80DB9DAD88149F9F1AB233456796
F2ABBAEEA9E07DBA9B45F438BEA0E03553EDDB7B884E725540B66F8174BF4074
E461A1F34CB99C49C0109E8C359E822BB10D2C8D8C9DE5CC948E8DF189DBA729
6CFC761E2B1F5332BCB7292F582BB385F123D82CED10D733A4A8A1BE6742EBFF
76A8C3FD3CB3B39C13E2BA59C414A3A2B381FD0572AE3B6469D58BD885766338
DAAFBC6D221F93EB4540E9C6CDA5D5E954E34449FF0ABB4D0A519A2BF3AA3800
E5AB587862D7543DA38CBA70BEB4BD0A0887B138CD759CE6571FA220B851D9CB
327934389B202299F10C5D0F11078C1E27DD4C5D8FC0B91FE9E8802D6F35635C
7B8E5DB6F8175F374A1AAC6A32EDFBAA15242DDE22DB44AB647308557A766761
E23607C18C178600F99CEC8B9836C8EDE006F2A4B5669AAC6B857291BCDA9B67
9D4F7B0C9DFEF68324A8E5C2FE23920AE88D5B38B8A35FC9C5054D0F358F73F7
6702A8995F8BD9E42CBE942E6D051592B3ACEBFDAF53B4D6F9A0DEC1566BDBD1
7CDA488F7990C148AACF1CB40306EF55956F57F0096FAED0C8400937CCF91637
A70405CF28BB0586B84ACA37FE5B338D41EFD1CE68369C718516F62842B49EE5
F7DE6720372300838B0E32F10589F0FF9F1DC9B5FDF248FC30059FBA2E1DD9AE
5620B3C20E95EE075965DA10B0897FA1F78F626E3125B46852F70572FF7DCABE
6F2244F96639104741750A5CEF04308261621E6FC24D0FB1573087F1D7CBBC78
8119267A571832E01A4B3A9672933EA7C28B311A00EF96FCD39B046C431F09C6
D88C112C9459A4C30A681F658A73D384735E4F7C37C470772585D3B38D97B55F
4787B43B48D9EAD59D923008DDA8D40E06ADF68C40D0CC1C82746B5BC9E64A32
59D40881791D53B818179C03B1BB2B361B0CD4F1CF080D80BAEBE3CECA9AE787
EA1A9629BDA9FB3A38993F1AAFCDC6C59A860FB2621616F6A20C35EC276ED59D
1E3A5DBF4F9644C0FD7811C6648B30C46DAA4C6196EA2C40DD250A21D6F3F47F
A5ECB064AC303B8772CCE9E6001315F52171CBA2598E7AA960E1AB42D04BA4DA
E0F878F6EA2CE1C9843CC2D6F4E3F8952815D350DA5973375CB139BF5805CE3C
F32A65AB3F20E95EC7A12932149812E3B1A13155BAEFD7983E8B82571BA9872C
2467C9C5BD2075E109823083CAB9699CF95EB9EAFED73C7A89B8EFED037E97F3
DE4D1F8F16D2215F76A0F900034FCE4441720C7AFB982DB845C7445B8DF26D9A
AC57C7CC82D6A3F0274065AE77D226C1511607471DB13578CFE70940D7C36A82
A620DCAF3430986F66DEAF459B6549927E39A9E28D88AEADBE66D6F87EC1AEBE
1695371F5ADCA7452F120171DAC6E3F72438F695071AE5FEAD25E0587D7CC55B
1E982A9B7432ADC486BD9CC1307E98549C48330944B9B341D667C81BDD4B47BB
6CDAF6D60A0234AB7654590B2A6AC051B70357E2E3624C597473FF4F4143B52A
2C893F5C02A1B98F1B8F2A8B74720BFE9879C5BF8925BE1DF017FE76BF19ECC4
6C58F53554BEDAD0049641B53CC9B3E25B5D5BF00CF09E3A6C81B961C4087976
CFF37EC612D2678BD3373889254BD273D2C1E1BC906E57B3312DC341C9CF5397
120541693FCB121EEC3C6E042A902465D2D4C5C61F0882F35A1A29AFF3BCF9FC
16D407657F12E888ED0CD59BADFDB8D8D15D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
20AE6E9BC0C1E5143A5DB4A439B103686497DE2461BB90D37C89627BECC0AC55
70A57C2909F2E640F991D6F12358B5B114CA693BEB191961BD78FF2392DFF4CB
1D7AB6A7B88149FC49EE895DCB134D1F38F37B025300E6ECA15FE23197600C24
AD4BD6B59C91D0CF4083BBC7957EDE6DFA56299A52802A64B2E1FD8F680CDD53
397B02197B6FD6BF35BE9B41605C32BDF1D475B1288CE0F5FEAEDAA325B40BB4
85BBF060B969D4438A98DB4BA2BA2CD8A143B14BF7586AF40263AF65D5BF84D8
E2205AFBF3D4BC3AACD79A48157258DF2BA832668C9E6A59AB334F22CB8124BC
827B78EEED11AD7CA7924F6E7333901B8625E9546365F9F845E184CC0594188D
C4771B8904EEEBCC24FFA0D5EA576DC9E9AB838AFEECEED5B387AD8459786AB6
73EFFDF8F0815D7853C6F61278341A10182865672A065760CD6959497D1C4530
08AF26856BDD3C2F8ABD40C09C59C2F18FF32DE5ABBED403E7DB8ABDA22E2E4D
127E01A968961E4D5BA9D189BC8EEC733FDF10B6C08AF8A15F4A4DF393B4B155
330A6619428D352CD07F338778AE87B1A0D986D709320930C0D150AB7E396F1F
CBC05A0CED81E5613B96F2F0993120F65822D457A787523C0591B53CBD3D2B90
3A94A98F3A100BEC19E13A656F1E41834518EC17624F994B0DC7CB53C8808F38
CA57A2D497B50B23D1B47007EFF7027AF9017AD7FDF8E7D69B3C996102B83ABA
B6D3CF9B39D9B5FE0B715AF98BBDA7E4D8F38D88DEEE5FB8325FFFBAC2E0F8AC
20FE028DD0F5B714FB4F975A2F7AE055165C148CA55C7A1D7F655E1457D69CEE
D6B679794CFBC557F2BA9C091FF033EFFD2B365CAAA03C4BD9808AD5DC309B6A
998E83E5365136AC77328C93AD17F446D0C53FD075C959C375C735028B31B843
2CE3891C6DB6CF97066AF9A7BBF817F372EA9C62D2845D9AE8659D3813AEC6F9
5B13516290627535806DAAF3E5F1EC2E2B1DF4DB93E67D2159925E34CA70B551
92B6A29EBC2AAB197E5EA6EA88F4804462ED7EE4BF25653E7AE0478444AFD16D
EBF1C38D5F6037F0180333B6D84A171FA7E9D10D4B47F75D054E4C14E018849F
A837008DD757D753118CCB16686869E6DA6414CB729A60B13FEFEEA3132FFADD
E29A676726FA4DE9AA2588449379BE9D9F1C391D08AFAEFAB484948D1AB28292
C0EFBA5BE1F043F38CEE52097AB9BAB6E1CE2962DBD7C026A7B5F1164E926592
45514FB48444BBE75B07B02C711B0608188DA753BA5DB1BCE14966468B12920C
9C8B0E3205458D6A172A4D0586A0E4762C0C0CBCCB4E8949AAAA31AB615C7DB6
127C31D5945C8C5CF84EDE0C0C64A45E3F43E8A27FE7C391BD788D8F26196234
782B3EF26745E8E648804A46ED1AFAEDAA738B59D64A9E5F3597ADC2EB6BBE1A
D828DC28023397C9BCA84894B1A1FF77413727B341BE13F628CBBCAC784B54B1
7BF3510521588C00538DDB3F5B33C291C78C668B79EBBDD441EA5EB5A1FB805A
D0F205090A037EE1DAF46CD3472CD9D70672DB654B7766492BF0DD969FC293CB
DF7584CBD554F80DDCB485D18FBD2E0F65805890EC3793A2A7D29321C4CBC0C8
C5076876ABF67E6AE86BA44396F2237620EFA9C4AC0BE2D1AA25CA25226F6997
FBB0C61260CEFBADE0741097552BC996315700669D9D8A3D136FB6119F1C0E7B
BE7FBB900FDEA9B4CD50903AE04590771DF5DB3DBB07679EB2ABDE89DEF2B282
876822DAD40F11628096D0DA958829F3C7D61F30D048D7A184D03E7415C80F01
6C7BF0C4C93072A49F12408447D1605DFEBEAE228D06E4CB676FF24CB721EFD0
79AEC65C4084D725BB08927B936A128B938B5FE1A8D0C140D9870CB323320E47
C6F6DCBB76385F32F57FCDE6B1E1F752647B02E8D7781CAA779A4DBFF4D07BFE
56FD1D6ECD3C7A873328B5CC351E220C6E7257BBAEF6AB7B413FA0E779CE34EC
A08C8BFC9A99565FF9A91BF33A692F1AA0BAB40A97C23E2B05734F8AE504B0FB
F632F92F8727172981B95AFC6AD412742960F1B7EA0FDB1228C5A9576768BA33
610DA9AFCC96BB51D59C946E05361A88907DCC8329DE942340A40AB10918009B
39DF41C82E0A3CA1DC2B0BD7BA4C685552120DEBD28BCCD7B42E870B0105C60E
AD62AFA1FBDAF5762DD7B63562D8AECC26F7C12D5C234119A258C87A14F9A50E
224F50A0E9539F9A82467F53263A33BE89E8DE5BDBFBE2A24B2E34F880432D5E
68CBFE292CD0CC112B0C80F3E7E58A097528C707DD7B2A5C657C7DE2A9A3618C
F1189E690EDF60FD334D6924BA78BFA72DAD3F407055A86070985E033393717D
2431C4C7BFF010DBD59FF1123FCCBD73E709B773CC4F360C6948A150469DFA27
D6F9741E95C03E2DC1DBC6EE6C5D9DD59975BF34E684AE9C58F55B6832946CAF
2E1166D606A20FE6DEABBC4CEAEEF4C7A5002FAAFF0FA452B63EB4949F1AA98F
6194813771F59F8939905482D1A3DE543933337B10C8EC12FD7A7C8FE0473115
44E87ACD067A065FEF837576A2573D996C3587BE99182B57AED30F16167BF398
F024003E3F04ED9BE00CFB7E9B6FE6999D776E31A45FA7248A5FD0C8DD2AE4D7
A60331DDF480B0D6186FF64821A07D635FD53B6329DCB2C42B417B774EFEDA4C
545117D2F1C44B9D4FF40863F20071A6CCEF23F347A236D082FE78341D792AD5
23132B5136F4F70B80802362363B820D857B334F8A497CF7060FDC5018DF28C1
082BD57E623002705AB226CD729D8308C58526D52168D4E5A155E8FF8097A2B0
D236FC69AF63877AB8D8500DA529A56848E1C042DF74C267A3C5E7AECEBDEDD6
F120FD0CA22217DD3599809B4E3419C89600F7435DDD63885ADFF465825FDD0B
263F60035977DF41EA8F51CDAB2A8F96FFC376459E1ED7D729106E63F635C1F8
A0C0C504F853DC91432A35771CB15ACCEB7F22F8013E3917B594AB49FD4394CE
F22F3C217FB84541C8F820A9D93B204CE98AE7EA35C7654A36B95F56435626DA
ACBB3361154DA6DF5425F4A55A241F8CC5DBE1040887A5F063B40225451E30CB
57A0E74A06F50DABB41A38D0EB02842B7C17FFBD5F43AA05B58F65F98A370683
1ACAD56AB31BE632460E4B32486C449AC25DB98DD5BD44EB1FB580E27488857A
56F84C24DE41E377BE245A0782A99175918AC418F73216CA83F1F1176D3B9FD5
B348BEE797590161F69089D3752C4D8262B3A672205E11CCD9F784B8ADBBF93F
5B385FD6610095EA997CBB04C83775735895A0AB86F77F325F6CC612BE9A2888
CBFCFF9968FCB3A1356DD5BE33B8DC645D91939DB82F167E6ACC0DC66FB78CF5
75769C39A7659E8FBC707C912140724BAD0CAB32A6367B99B32E65EF42B8E29B
B8C8FF8843EC4C1207C704167F6A035464209129E9B1237986B27F1757F167B5
F3FF7976A4608BE5D1324723E202FFFD3FD0C641B1B7F48377255175146A4F44
2954BF654DBFE53032BF651E16161F1D9084E6D06D38960D654F65428AEF68DB
0DF2F2FF8E64C838701861413DA993D3B50CD6757FD4AE4FA14D5CEAC6034DE9
BA57B2F9ED7FDFDD78AA19FF23F8E3C7807F107A100E5A40F1ED72C3151DF3B6
F313134089D7579383C9375A03E637FB59EF89B24C28D98DB5F17391899472A7
F5BE9CFEF8AC7F0B94512410F7A9D6A22F45CDDB1D6FF04FC8A98789662E4029
835388F9248D2C81DE84C8871EDDDF8B50806B4FAA2A5A7ACAA44649A5CAA8D1
667F60C2B24141F92DB575C1BB86D3E472C40C3CD427E82FABE8AAA1CB6A8DE6
0C896D19BA87B6C7B7C972B93CC82B961823915E7E173E21FB55935E2E241731
9DCF630D4339BC9EE74F59BDCC5FA3A7FA40DAF2DAF8AA4FCD64A53704B704DB
BED1D1379BEEC73CBE82B57967728920190DF0784E168C830FAA55F4AC6F1539
9C2321901F1258DA687B61A1526732A42FDA6D6246840F76E06EE2D38B82A860
50194A31FC87F9BBAC9FD8043C4F35B031A2ABECE5B694190B6A5B8C5C2B4CFD
C94461E9CBECECEC1C4CF53F75D65B5C9E67F54812533F360EAE03BA34420E28
1C1AE24D83E77BF10F5E722CF00E1CD6AFEBF21FAF02AA12378CF3AFF916C4BD
53923A844B01178D2E2D058483C6601E399E6E6BA9A9FB517A05C5EFF369FDFA
C107DC39D86DD66D52C76162286E5F5AA0B73B57383474DD175F6FC17EF26A88
088DF28C2895878B7DBDCE171D0BB0E98974E12D8537A9BBC75D00D66E5376A2
6726D36A5380669B115D7D81D3AA67D795B5B0FEFAE3B7E7C5D07BEBB32D80C9
CCC30BEAAFC319EEF128246E3D14B397EDAAEBB4D812FD9CBF02A4F61E2815F2
1732D98BB783631F07C3DF3BFC5E6FAC9713C522B19C4AA719FF5ACF5684DE66
F24734B8C23B409B7B37B4F3C62B31799D1F40458DB6DF185F193EC1BED37CEC
D182736129C22E0EC5E56B3BDC210EFF79B49D1F05800E4079210A61D3A2C172
638F7558A6CFF18B46F6A1D2D6BC9225A547D9593064AACACD24DBBAE0BC5000
684C8FBBECD9FED0DDC3CBC3A95E81F6C2578E96205732C10A4AA4BDD8432F67
6178B15F07D476D587A154EA407FFFF5450D833F377E4DB97AAE8B0793CB1821
BD2DE3B5D7C601FDD83EDADA4205597D9273B157D4B16FBD964328CA0B178E31
3D9C0129635F8CC36AA39C22DFEB13DE533FD498F17321A4E4D501A2E8852113
49FE6F12D648C38EFE0036CE8F98E35A0316E7294ACAAB27E25C81043CC74305
EBE947FF06BAA36A331EB7E69A22B052886618CE7D869C8CD7D081F6DFEBECF1
211A289151945531787805FED714AA0EDD6DBE8563F417D47AEFB1797F2A7D8D
8BA3CAB8C183AF2C764E0B6B984498BF046CB058E5B6A3D8D64522024BBD896C
3386C7A5FCA2B29C18D55BB1BACB64F329A659A5B35DF0CFBBCA3B1A9B1386DC
9492845112A5EDFE50F167A497C3304C579D286B9A219580BF655E609D7C0F23
9834D2C6AC60243565022DD0C4B99C03B1CBA187ABCDA9CE7F48A065DB320436
8A53C8F01B8B9512A6BDBB9E9AF13CF47B3DA4F3EE2802EA30904E069A59E0C4
3791C1EBECFD50F6EFA0C06CF0981E02229DCD1B3BB30FFCDFA53CFA509CF179
1F6A1C59E36E13F2BA12CEAD3690BCAC24632D9F0D08C4C68BC2EE465538F64F
26D826F926C82A7667D68133F5E76F48C016AE2592E96DD6BED41EB8F7EF93A5
EBDDE6471100859627AA5AFE4EDCE6C2E340E869F90EC527683E19BF40358A76
8EF9D11E1044EB486738565389BA9C4A94B09921A99FEAB76C83B3A5FA80207B
7F4491B6074435F89E1E43A41D2C9C04BF878FE45C789806CEB3317598DBABFE
1E870DD19BABC0D2BCA6A47A36585555F39CCAB1115EBA964011CC22D449F8A0
701CD47EAD956DECAC00490FBF312D71A9DB497D29662B6BD9196C532010258C
BFCA9AECF77432EF5907C5DC9C43097109E7ADDEF3A4190AC756FB3AB5BA8BD6
2224C656AB835143252AD56CA061AE7D8E09EA63270508001538EE480ED49139
7589AA0CCACEEB5335507D97D2438872E6DAC3A264DD7DF21F82D6310B4E1EB9
712C38D974B20672BF7CE5753C7F9A4050810F21D1CDC385607ABC2BA131A74D
DBF6FA0D850A24465A93342A5F915CBC3022F530EBCBDFA26AD104CCEF6A8E36
F4E9EA39376FF000690706D0C74E42B9836F082B692880D27539B54A170A5333
2235450994F468EA23FAA6D3994A2C027B1074407AA26BEA3A0075A9E9EC39A2
AC4030C549909290779872EFF3230332DEAF6BE03DCEDAEB60647D3CAE4FDC3C
260F2E92C7807C7452BF71CEC2556B7A49207AA87BA476FF20123DD58833AAFB
EA438D2CC53499E33A9B12456735467C1EE9EB986ED9F85A075AE415DBBEB402
82E266E3A4D897660F410FE4C56B7869A64B0484211BC7D79DC1DA4853609241
3AEEE68C4296172732AC69866750F5C5EED2DEC986E8C462F21239CB6CABEC49
ECB7D2C2766D5FF32495F1216115A9DCD4C3603A59FC546835C6965FD967F6A5
65D0BDDFED5563793CB15F22604D380FD357CC7C8AC64CE815964D4F9530F86A
FA11403415366421A31EB7438350EA50B6690DF2554C1ACD8393973F54A5C153
75E60E57E99FCBBE2281C69A7A1D10DB3808D5D4BE653DC96ACB965A9593561E
9A81F83F88F74312E8B5B6B8CB5404E4ACB14C29A20BB3FD350D396186D2FFBA
D4FC673E7FF16CEE7A609E104F94C23C19D429B5F674F7236D2A7CD8A9D90C27
48BE39CC27386089B1641C0C568369ECDDB86C6130374F74D1C9B5991750A10A
C24207B8159923C5D237E61E1AA3D8A4DDCA1F96DCD691BCF6035FEC44608FFD
1549F229E72DC3BA6EBACF8900E03B971C3FA3219998B8B16C92403D0B1EF947
93454C0098636CFEED325C01207C166D1E61DD6E82A812FA427E5A498BE8B1F3
350DE3173310D86FD42D31745E55293F283EA27D6700AE980C608E339F7BC187
AEA5907985DA1FBA1D09D82EE95934FC7A65F60135C9082303AE8191113B8F63
F8F497E8D459EB57188E19F1C1E569B153531C5311FE81A0C28557A2BB19699C
3D8292965E0C34DB1EED84CD7D2E9779074378AF77CA62449A885902994AFFEE
BECDE9E3E922F02FC31F5B6DCCAA31E67DFD0C5E8E51FC207E2A58B132C1857B
83BCDBEDFC3C1B2BCEA0DFB34367754F00F8918174B8843A8A34E2AD406731FA
86D18DA7C3F3DE685919239342CDFBE76A6AA44FE02B9FA2D89507961B2608EB
0CC38F27022457A1DACD13C8BABE9006DC4F0110A47D6647D4FD5879C0B4EA25
3576CF97B4D03636902A1050E72D1C0595AA9C96F24B5A25FBD87AEDC0F3A18E
54817F7B67AE651FF37E7236DFF875622A2622D09C8A0541BC7FE20DC1C711DB
FEF24245F1E3ADAE3F49EFB029CCE7106DB73DC565695C92B293F308FE27C877
09BFC0D001E877D47DC4DF9710E63D05A25CA1C44B4D1F66C938C240B87A3EE1
B55DD67294EF3489AACD25BFDB74874D820713FFFEE9915C189A0AA87CC18A4D
08728601AF9CE225176952186F97AEE58D9DFCCDD0C3AE53A56284D68F5F8363
55632AABE5C3EB7F7C3696A035D6D1771903B943DE738105F57933300D77EE91
162D0BF2A6C0FF1A41909FE8A293118E30846A2DD9AD4595A46DEE2D4DAE45D7
EEED5717D88A5918F22F2F154A6586E019513802D90F9034B4879B44E5593E21
1D5F2EB27B2107E807EFE96A0408DC4D97D7804D7CEE1AC7B74120A2A9408174
573B3210F875A02630FB388E78FEEF32B376C44AE52477D665B99993A80F04CE
1D79EF4792C5BC37CA3167AB0E8F1D697A34CF029D76566FE64B63525D0F864F
5A22E422BA5B1D102D45002147FFFE8B88AE1F81CCFD1300B1B74B25A00FD5E2
BA23136DECD35327B471D8995E5C5ED549FF153E90B14FB4C9D2A4BCA2C8E4AF
9C28A6D994C75B380C48B304D2B2779608DF5780B500BE2EB57E5BE2036A7EB0
F7F28C4D7D733C0839513CA1B8D3A554DDB7393081D8F6687D7FEEC797B5F58E
80EB3A892AF1AC561D81ECFBABBF04D043F898F6760BF8EC00648DDB1F9CE8A2
B178A26D68B1DFF6E67095DB8D24429F95770EAEBC2F0A4E9106788DC5172514
9E64DA9E884D84324BAF9F7A38A2ED8B5809FE81B60D83FF5C3461E84398EDFB
585C3BB5EE0F66F40509B974E2B2E3EFB5CA67A25411C6FBBEDCB0DB55AF8F07
422C9C3A8C21BED9BDE1FB680A4A1B6F4C431F494882452EDB6FE1DFABCDEB7A
9B3A28FFAB180C4E5CFBC6439B797ABCBF2D1B0D02F5D5EE3E1F06ECA0F66D5A
977560E11DB5DED5DAED373C9DFCF9D0090603F472086FFB3581BBBFA5BC6D5E
8EB291D43DEEE2B8D41B42B317BBCD2430FA1CC0D555C977C54250FA577EA3DC
8B06B7AABC6BE967EB768D78651097A43A6AF8EAC45D260A3D8682079C5EBB17
6AFCBEA81015295820036BA0320113D7E29470209F55736243DF81E96BDC5D82
872E307A44282F7C89EB90AC9A7FE7DD5153E53B6C1FFEAF0CA7C2A473772912
C3B0D1CB7DDA2F10EA766209BDE9C678C644C9F37F29641D474A0ED69D08011E
8750866DAB9C65DCE83E38B2FC7F970A6EFE9E0400DFA1164FA0AB80F855495E
89E64F358D6B044E9D2C51E387E251157A703D2C4790D11192A98E7075B68B81
DD6B0FC8590B49C6E085ABAD783FA48AEB0D7527E548BE2EFE5CFDAEA9A9BAF2
A3DDD43A69FDB41A631758BE3A1219A9CC70A59EE716A0781ADE2C2D36D0F983
C81641010842BD03645DBE00185B2938F9667B554A6CF69F07C7AFA4CFD8FFD2
72D63FEA03163C33703F7054CA0B16E65C5DBD2E5CB4A83BACD7CC9E152DE990
7DA00C9F1B2A33610C79C7F901D8A7934FFBA8F5585B735D399B7DCF7E9EE715
C71D9A6858A50E1AFFAF15667678DAF8B4A0908C08F9FCCBD98E7A382B198959
64CFCFAB063B86C0D7DCE5F7FEF239A9373D9E5B0FD6EF8C270824D70FBE0B04
04C5B30F920F5784F4843BE1D99AB1EE5A507D302819EDD7426F8ED5CCA367CD
898D056B0A5E5084D65F4BA1267AE4A7AFE5BC90694EB37058D70B8998085EBF
15E1076BC5BDD3517241C7A0C0C690F7751653BE5F6743A0D13F6B3F02F262BC
7D3DED326FA638AA92F59630C0D22A18F7678402958699C3335BD8503AF3FD6D
8489C6B8EB531837396EB5107152C90C62A6C40ECB833F8C6AB16CB61E4473F4
77583C26043C0646A4CD4B053EF297A99D0AA5306E44E872981E9F87C6B842BD
B800D633EAC72D4A7A516E2028374916E45604013E288C6BDBF9554B75E10BFB
C8C012CC44C1620A34C45418B16BEB49426B57E0E11ED8CC3ACC8CD15F1A38D6
4068917B0BFD4997C26C5FB23BF3FB29CB387BC8E9C7F6239863DE87D721E25B
D46E50B769A7CCB4041620ADF54466C0AB6F9FEFC2ED0A3312B7981C77DDBA62
602D1C9BBA3E62CD71902D7B3EF384A2C108259B6E9A688781001B9127BA589A
F6697E1A75AED61A02C4474AFFA9431452073AB9AA3DE449DDFBA37ADD7F7279
88709A407E8797EC160B880D9E537955C77DCD4ECDAD07BB8997BB4A7C9AB11E
606AFFC3A1398A3B11236B6B9DC4FC918C5B0A8966FF81E8CF59486356790693
4C521AA56BA7ECF193F2B9F34B63C807C0381E9DE7AE3235864619C532C27D38
0E2154887EB177D6B869FDB30407F37ED1030D8B677C6110D24EEF93A95EE183
AC867A2E6FC57D14763B7ECC7D2258EBC465AB117F4672C15862B6C75841C94A
31CE3223F31F6F45DC61F33F7E3955F6A808F1DD37AAA08E4CAFD64D72341F53
F044F7E21F391F1B07DF327547F4519FED1C44D1632C0166C37D5B1FE53E34D1
97B7BF362A11310757452A21561CE9BE647C8A2413F7CF8E22DCC9A5357AC37A
822EE537A3EF6287EC330C2F229AA17FBE992B9A1097C9809D12A3D5316F9F92
1A79D3307CC3D9D7A0973F64798E1908A39D39197FE5F35C267A3075E3428276
B92A75D4A2139B66406DE7D335F02F2D20F1B565E71B3C109151F4039E69F162
6E8F19765BADB27DF4C6A806651B4B5AAAEE5E7CC967F22CE1F06BB5C55D352C
62726FBA55B34D9EE1378AF3BB4243E7EB97C90B968A062C66A2308D876944C3
C56C2AFA9F08A4E9E06377512E83689A2DC9AE72EAC30AEBDCB2BA4DE6C271CB
3FB1B8A1A2584617498DBB7F8C6C8FF39BE10446EB1B55AC9A62195EDEABB180
6E100DBD61332C792C73A32CC0980F8B61744C8B9A775E910A01340D653E20A5
210EC6BA5EC2B42A17E2B8641DA94E51864D61C7B7A17C274DD033D0528FD412
64E9979B1F373637194C05ED89864B6473C15682B2502547CF0EBD08D9ECD5C5
94207EE1241FC06F51B875B02A026097A36EF4B9B3322F547D041660626B7159
7B5A8C10E288D52C2C527569F6EEC76D813EBA364779203B4DB06D0E2A24D97D
D036477CC401F8A329AD77F5A8AFD040C11A9164ABEDDEA99BA91BDAC606F1B2
193213D0FE917F7593DEB7A1891EB982CBBB8781DE57FB0E78ADD6B9E2B8E9B4
37F623B97E9B27A3E5FEAA39498E5B7507655BBCB561EE70CAF885C89A1A7341
84770F1C904115C9DEC99F472ABB614CE613FDA74A4C161AB857DC75C646C6CE
EC78E820C56EA4DA2BD3B7D12E38D8C37F145A900827B4EE3CE97862F993C480
BA84A84C9BC409856FE077A204A55D4CA23DD276F8F06C83B622F7B4460AEF68
1E9B22B3BB33C2DE3BA44B5F415F7373A8B1C0F2CD2A336301006D6D3BFDAF16
1FE28F5373D8C83A95DFE8080A6F3FB057114A38D3D3E9D09D92F5560B694C97
F9FEF6E8C74AA8BAD24E2E01F1A8BC743E25447C85AB268DB81CCE50B2E7859E
12A665C0442F5B40B8A59AB51396434C2F29541C67147833455F6001CEFCCC30
0BBE29301ABBCB53A09B9FC82EB620B5C9593B11A49951813284722281353D8B
7A3CF291378294DA98B94047F40F48A782C0D1DD58789E26CC0F20C39D5A58D7
C19DAAE661154A03D84181D48026655C3CD39796B195FE20378D1C2E08B7C634
9F547DD10A5E2B43F8EF0126C94FFADD51E4CC650D0F94898B0BB3B255564A74
FC815A905E34B6B5A7E25A4755F17D122DCC39DA5F39990E09BF81510FB65FF0
8FF0817C0C39D0386FCF3BB427078D55C15AAB37E156CB33634026D0DF8362B9
22E64AA75BE8E54F5E07F60F260AEB4A46333682A8CAAA86E6ADC99C2B395002
4402226CFB8DCEC56D3ED6DB3A3673194910FE398357B18F2D1FCE9D5083A77A
E07605EE331F79D1A579DFA74DA2D944592E3E17CB5C9F7650C5B25221029023
585F33FB5E7EFB81E7F0A32398B5EF27465B234B3EFC63BF7EE2E3C688A1D615
48693B2F8A438A8C019F35D5A12BC32207BE0D697716EF5C33B89E0DAE00C88E
B83B089E6C33693E1369FC6AA497E6E1C2BD84DE6046ADE09DD67AE70785DBE7
DD186A62FDB19C7D0480D44AAD367952BFB250DDD459A5C1491EB85052D0AC37
884023F1440F8F637B7985D137C919BC8C553B585292D5036C43B94C6728BFD2
9059DEFFDAC2F6B4FC41C8D08609CFB65406BE14A96E10BFB11EA62A68C98F38
6C75CD2623D6938052363337226FEFFD6D732F98B1EB7125F04E5CB7F3B942F8
1AA271FFEAA685EC79E10A4A67FFFEF223A6A76B013011C2C64990275BB977D4
68C5DA85ECC275A07F02D6E2541FC8A943F20F135EF3DF2EEF34FE615E727D63
8728C1D31795E5422D00863E4AE4AADF1AA12ED205915897D26EDA2C50C81B8C
AED3DA605FB81A07C6A491063A8F5D2B8FEB24C8BDCF579CCA80EE839B614BCA
4AB1BEE9558AA90F6656A36896E277EC5717B50AE539E9702EF31DA93511A93E
555700E7D614209D64B46F8956F648171744DE473587704E11FC297DA33483C7
026AE74417431E55CD0EA940C1D8EC7D6FF6E2B348E510982A1B448AAFC2C1A2
986E4E011A5F53005A58FBCB7CD9E8D7FC3BB167D399366EBAD93C31A9B27AF6
4C856DDA67CC98A8F174A9315F0C36C2291AFCD1CAE57B43671BBD0C7BB9A4BC
7696BD2EB4D3597EDAD4A6514E3EA66A9184D67042A6F117127DFB1C78B0B7BA
9221D3530E8A171F39C1796E44C1B61AB2B78DBB6FEA0DF6871F9B17776680FA
6A3F59E6102D3384CED5661542B3F69097C7BC261D2DD8B8EE12F387AD360721
5FFB24321F9167F77015FBA1D37B6D07D485A50DCA2EBEE2FB93BAEFBC5B735B
7BE72C0773E9CF93205CF223987F5BE39BFE2988E536AAF2A7F0AEBA673D01CF
F5DBCB84BE262F9998112898DDA87B36EE3484DB206D8CD1ECDFC97052D38C9D
FF61A517F56A509D85011552A402AE4DB47437EEEBC2DBA5A2C0EB8FF9B90F35
6C516512E0E89FD09057C94C656AF5BB880CEC9C24FAEA2264AD9C7AB72092E8
62C3F806F1AC2C9765E286291129D0A7FC50E6613AF1DA2185BF137CCFE74EBB
728067637458B3FAE417C7E55136BB137709A12F5D4DAF4CEFF068493F72B2B1
F16D8A952DF3EEFFBC442212238793D7E8492478D2C38E2C801CF25FC4A3777C
B9CA23D1DE3883040223551C18AF38A4AC5A466F4808C3D60C5D80905CA9F0F1
EAE6312FDEAF1824C12A9479DC76E37A77DDE343322F2043101D6EF705953662
58A9FA8623AB0B81C1A79C6EE71CA838B889AA757774A0A05E184109E8BCB1B2
876CF0AE4EFF57C97A7E91BC49250F2E8168CBEA329482A8337F00437F992F9C
707D18390396E713FBA9F91251152484A39407ACA1D962A679A7414FEA7BAAC8
32D1F9B1DDBFE40215BCE29B6D125FF78A6E1866BC197524C6862A523415691F
DA333A76722AEFBBE7BFCEBD7C8297C174D7465CCFE8860B3452A12AA5C7C3D7
11BFCE92085611CC853722A265E4BCC5D9A39EC471BEF0B664C02AF09C7D6A54
8B3EAB6944BC4CD8C824ECBD411AB6A3271569FDD75E4F3F11462336AAD8E152
93D80C93DC422688DAC4544CEC331220683A9039E6A4A19D4937F0A77090CC69
3374507079CCB70D3243BD5B0AD146151790B829FF1AE235251C88F09909F2EA
79932FC2921AB46A35429461DFAE7D41FC3061D6985AF6C798FD1D500E4B26AE
2967734D0DECF3D50030A14423065FC2D76D25924637C5E15E2F0EC65635DDB5
82D52EE7203F8AA704393430F501B1A723ED9466D511A237B3C6AD3CA4CC6598
DF0CA2B71360E3221D1D280645F3F40D40BAD692FE628DE97ABC00C814622E1D
F2A064280353F14E5BD3A110560709D6A09EBBB723A5CEB41B500103CAD4811D
573487EE776FDC386603D76DDB7375516F41A5ECCD376373B609033A4C316ABB
86A9FB11067DD8A862884ABB64A296D491E11DD21EDB9A0AB6A7D017E91CFA95
F6AB1A17A90BA6D806341127D52D39824AF7243853A65A8B42BC2DFDA0831F19
43690ECEDABE9E32DF32C966EDA86AF3F50BFE85F800F7F46285DBD7167C9882
0D18373318555CA1A461D4B57D9820065757C2FD532A227558724659B47F7ACF
01B405A87353BE460DF652FE8FAF1A2593413538A3A91EA4F6E8189D21C5310B
B9C33F1515D4B918ED015C294F71B8C8C0B3E657A22F3EE71D50D0E90AF7B2BE
BB2DBEF3E5D8227A1B4523E14A5B3517D7047BCBF7814FDCB6DDADB1E695F8A9
643B514F76A04593E1315998A591B8831C16EB5169FCD36EB83DB28674529276
D7D1F5CE51839F1C17DB15D4A2C4ED0417CD3D36C30F3EDFBC6E4920DA6589B0
290C2F2BC0AE0429E3FB577B1D0BD4A9F118FA9ABD4FCFBDF0B5CC8A89347F2C
CBD704EC541558555593BE09A9ACCDC55278C6B43DB11057025EDAF70866416F
36E3F25B0B494BB64AD2DD02B38C95ADCB3CF443B40D2CDBB7F3F25305D3C69D
8ECC7C280013927566208A4FF7EBB3E17BC39012A32D2133393F373F1694136B
9F56FF4A0ADD8A8B50F63FA0CC67ECEE25816011211D5512008C19EC98F57D47
59B0EA52D0E07559D03EA576FB9908500A4C828D562D3EF195BEF13AA6D8363F
0AC8F88A18220AD14E1EAE70CE53FD6A2BDCC494A7E338E94306A0CA7D818E44
A021EFE102B7B594D879B2361624634F949CECB73D2B489B4F70DD62FA0A00E9
168F320C1AFA253A406CFFA73E182C5B907BF0F3946CB428811CB802220C2E0D
E49AD42E589EEF590F31A1D99BC8B891ADC2E650F930853B1D8F8983F440F00A
4B373E72C7F0BB58ADB853D7E8D032DCAB47A73CD0F38D8E8C95AA454FD30910
837910E46934346A4DBA3AA4DCE6691420978E1E3C559A4A08FE9F861D28B778
CEC65AF4159B0B38FF7763B51BE97BCB903E61EEF075815FF046AE65DAF33CB1
F3F4B96E66AB224F5ACD12027CD97CAFEC32ACE9E723FE3E754C4DB928D8D6B0
3609A4C2DEE785DCFCA392DE69DE2A0A44CF9CA3A5FA9EC1A4A4D0B3D86B30EE
9696A6E4E1281E5C26A72172F3AE7AC7E457FC04183E0C4BE08C45E1007AC615
AA10888D8D8A5128AE9AEF30AF7F625182754161D84D7E5FC7CCEB73AFEC91BF
8395FB1A335E5B87F8E1215AFED7F134180818A76D912DD902063B535C2BC254
C782F71BAC9BAD78E67E2FECF5D4CA35C8ADE58368AFF0BD32692D3D3E335904
149416BC5E7FC9D7AD482C4A8B1F11D3832CBD778A9572BA366F289F9840D76B
6E93C51476C9A84DB61B06974F80BD0C2EE61E06709830E0AA903D344F369EED
F65A31FC1DAB390ECF964EAE733A98646351D3F8BF217CB605895F19D9203379
5BC80ECABBE5777A9B86A9D2EB1C62D36E3219F7C091FD3C988D27863DA11EA8
6504D00C032CF17F88E9E41424D8406D0ADF22E701E1776B363A9FB877ACA303
EED4EF6C371C72FCB1B41BD16A5EF8106B736FFCF5B22965AE0AEDA53CC620A0
65B07D7727710231B9C6A706E52B0E9AF6BDD563F4390BDCAE2686431C755F2A
D3D62BC7726131264E995065BA12018A9E419B73B70CE5B0DD81F0366570349D
ACCD06C1D4BC8703E1B6E6E087D36266A7C09637B588EC5E9F15DA6771099648
4E0C6471C70430FDE4803DB20C787E07C5ED3224A479B154268D2A168779B9F1
C10A08B4F152204C0D5ED96AC7E5D4E30BFB27E8DC250FEA26AAA12E61874242
9C1DCB662B601F26CB093BA182A892EE727B4CC68F060AA3FFF6FFC6798389BB
659420A32DD2F03C6417A29644FA08F1B496D82C9946744C1A88135CC6D82C43
8715B3E267983B22B45F5AD52996AFD539D5FDB7C47D04FE70203E6E4D65101C
891F9844003C3CFF0D304EE0E86A709CED1876610DE9DD34B1215D7C367427AC
A37C7736113D787482274635CBC23147983804FB4D5C1908E0FC824C9463934F
7C6D3A72BC1E72A5F984456553EF2ACAE6B5EFC19B2244AE89171992DF3B875A
9330C0AB6C8A05528974B6F5972448CAEF41B25888780859B46C188C7D171639
C38CBE0D712B061040AAAF0F3CEE292254A46BBD33F9088F63CBDB5F2CDA7407
F11B21EAA4EBBEF2CC65F790422C08E83FB650D44826BA5CA9E1C02C109179E4
3CBE844EB2BE9810643FE88D4203306B4EB5736DCD1EC347A2A8ABB08AF5756C
DB0DAC584EBB41F879CCA0B6FE5D0BAB9F06C4C80382D782E234557F22E765EF
7076E2D4392D9434BC3DE4CFFCB14D58B36AE67F77FA14A1ACDB36A32B92248D
6ACA45DE7EAF93E547EE7FF24C35D07636A8D2FD7C8D1E490501A53883DADBE5
50B6F192A72CFA9ED6EEDD05333062325EAD661F7965A4001E4C8207429401DD
23B3989B0E3E72DFF32DD03A32A8E1C6D41851B8318424B636A6D607F86FEBDB
6842DB540E4FF6D728823F242A382F9EA6842A9959FB4918695163E8EEBD2ADB
9D0266978ED0CDCD588EECDACD255330F17B72E861AA6156098CF1AD2AA2D9D0
6D9E8BF527BCDA7930F748CDB512C252A9E6D053915145E691256B8F36CDB64C
AFBE0B366F0ADFFFA664C33EB2F19CA070284D0C81560DCD2E1720B4853B40B0
250DFB2797AEB39A3296E74C8739003766FB193D721EEA19406E8F016DE6A6C1
88D24D22555A8FEC4AF1309F06BC2DFAEA0FDE2D0788CDDC45BB5CBEE86AADE1
8524C0D3B81D71B56138B0733A99FBC479A370C5442791DBDFBA726F51ACB1F4
9D025730FB64C29B6011DDADCFD58062BD163BD47E2E748EC3C43466F51819C4
206CB45DC629557CC725A53D9311805226F2800BA0BCB1E65C03B6B7071502E1
3D9D3764F85E07A55A859D8207EB17F2F5134E0F1B2DCCB1812F49688710111C
E8E6372B0C6DF91687AE1998C1C5B966BAA1ECEFEFCF5596806BAD7A5C08167F
55FBA1F50FB195351C39051847F995701D0E5EECA2D6374D83C16C7C4E96F793
5660090EF83BA8069CA4C3ED0B081948538463D9A387291A76B8ADB4BA548DCA
BC35232ED82C9E57B0B59EA4CA2277F4AF0317DE72FDA8A8FA5E00A94ABD0E70
CB79F56941761C0AEF033234F6BD0B4A79B7230A07A697E288139D2C3528498F
E4C2066A80C018EB978515ABA1C772A5B4C50809A121D3D0D6452E3A3572ACFF
5D2602526C5A4D3ADB851801DE6B90ACD0414C847980D23CA2D209AAB679FB81
9078E2600E74394988E203665634F3AD6264CC5666BD6DA2B0A582940305FD5E
B492B5F77C83F6244A16FEDAF4C911E1EAC4063BB2B491AC05D2D483609391D7
2FBD4156E631B1B8951791FA2374E54FDF2B385F19BB6A2EBC5E46A55421B1BC
BD60DFD519B1B9E34694A1D96F913CF86B391BE46F08D985AAF61B850C4B9CBA
E7E4F97C5CBBC3D51DE7E06291047100C51E34FDF01B902A0CABDEECD1D6D016
3D0A091B1C3AA234362F2C47B8FBA813DEBA662C5DBF266D39B00213BF89B532
6DAE52887AFC0E42527DA3EE68255BF79D8633BE5FB8E876BF4C45E9D66BEAF4
E23D5BD57F140ECA79A7C9EB87726AF48E3BF71E8DB18BB5DDE7A3DB8E5536B8
15C6F7BB9C9C43A97796A399E22C4651B0837225F216BA8F198DB08455B6C904
2D0DBF6DC69F655B85EF0EF38DB28514BC485D57DB67D3B5A1674CFD3815B89F
C25714ACEE7E09CF53FA022C0D5DB96D32F1267DC7C75F9FB88C32F3553B108E
E84408DC06489ADA2E370C468177B8DD1612B12498DFFBE6A7B704F38AC7FC43
BD0EF39FFE005743CD4A9314DF5587FAC98EF8F42DD6B72BC08E9BA3C32659EF
0C4560D7ED7B7C164CC08256ACEC2A89BA74CE86C4144C557D6E1ED3BE92FA84
1B6F3E4993F7326324BBF5B1DF31D302924E0C0EB906EBC2352E43D02BC92524
49778EEBEABA93CDAAB9AEC3EC14DE71964AF3C091082D40DEE01183DCC9305F
F2206C2D9E072B0DB43BE3B6A2C2F4A01B6B62672702FEDBFFFBB553556305CB
553D791524508B64CB41EC4783BB4229CDCE3DD391CDC107849A417926C8EFDC
1C5DB3A6D64266CD3DD128179D77B4E11D46198C04C5DDFCF023566F87097C96
D1E120479C3A4BA2BAB8C539D4557DC7718AC973FD1629AD71E83C433D698657
FDB334924177E642F6090349BB675EAFF8BF9575C300CD609DBBE765D044D199
6A3BEE43C3918738BB64F8BAC6EEF44EB62B9221F157D25F4A241F861C3BE8B0
C045B56DB88B570F592530E8478CB7B06D6BE8194DA512984E374BB780CB7580
0664E4BFFFB70DB59C7D58F00042F68560F24FC5C6CDAB10C3986C188A10FD2F
47BE0045482EFAA10C5C30F4CA188F8406E217FDE4AB7BDAB5BFABCB97FB4636
FA974FD418FEDFA5F35C9AEA7540302F1A42295840CEB771D22781C30EFAD54D
766F6B9E091FC377E6B68BEBEC6074AB688C987F91A1E0F32CC5598A360AD304
A4BD7C16B9C624DA58403AB9AE43597CED44C7235E35DA644473A6C0A25FB4BA
D92D02BFAB110399BE25BBFAC7BEAF813DFD85540AAE37878F05ED85034A92F6
96C9B2142D67CBBBD65FF8A03756C12F1894140D0A1EECB6C4974B35A22A3FC8
E0459A5959716A1E9149A418DA558616E12D7F2746378538B81E8FAE6FDADCCA
471A4B020CF5D3B5E616AB8682111A72E8BAF4EB03C7563929F718245BFF4A60
CB4A48AFE8A35FF2645EAA6CA9B709827E303AB1A4D2D2EAFA9B7F33F9CB7FBD
4CF8CFDD550AB25A5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 59 /semicolon put
dup 61 /equal put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364704446D3A12157DE158671515E8
FA0324852EFF0888FD90913D77B6417FEE8C039C12D8CCF516AA5E9AE60B0424
8E9B0C2415CBB4114D3B15BBA4D129CA6D4D3015919B227992C3A8D06300E897
5FAF42C1191C0ABC8C1B5C69DC9941DE3262222D729181D0C7D0E5A99B9E7C02
AFC9681029329ECAE472DB88C9244CCA67C268BA8DB757B8DB38AB6C896DD87B
823A4A84D3863E4BE55E307A1FDFE7AE75FBCB63DE36DA6598ED9793D2F90CD7
A975C5B708D1AEE7B0F1049BFAAFBBFD3A170BE3DDEA2424B354B094A06D6029
0CD89961EAF3DD16C91B90C11A6D65123C09D9B3004BA68D95021EB44F9DE38D
B9AC4E251C58E9ADAE1DC193486BBB934077F4ADF761B751082EB45FE7328E73
5DC7433C88D540F2698CBFBD9EF778302B5C52D7A50065C687EA4AD820C35920
1723A3795E9F7479F64DE90E4A43BA8977CB05B7CCE857B2DCB368129E7BDB8B
8B519DE1E324917C5A99F4A32674E535D316ED13DF03C99757CAA452FAE46DCD
AF8AB3A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBBB8255F9F771F4DF75F
F3339974B377BB84AD85C2E85A040AD12975FBC71D755F8F7DD4F5E299604685
4A2D891B0605B75435B3075BA7DA5F6434B8BD5415028044F23BEECB6E0DAB28
979DCA9FF1E7B3A9E1899BA23F55A3F08E59FF2A6D83FEC83747339FE108161C
E2FD412B833F553D214FA3C5F0785CD027F75D6B3A2F5A8284AA2F5903651C41
1305839A17E680B6899A9278854EA8FDE1C4C64588B3B7230CD6EF0D4D69D8A5
6566C0FA3EAC58EC943F25A823A88C7E731F647895CECD96CA4A2FB085413A1C
83CA8D73A2D86768AAF47E147162F866FBE4A8D344768EB7DC6A46178EC6035F
C8F3399F07B6CE17E8D98416D772984988C4219051A2214B3BFD1988613ED589
22C2D185B80B478DA643F3EBED3ABC74FF8B1F3B42547F2E2696386D99CE937A
447BDB6911FDE58A1E12F2C7CC21A13A2996CD7B500369B045D0BA6B583700E9
741F1419BF36A9CBBBDAC2CC08419E34323FA1832FCE21272C7D4339C7692404
98D7FA46A054E8587328CC3D8F057415A1987EF8D90A43B1264FD925BA93416B
6758A092C304ADACCABE3D5AC2F814D8413A9C3C1072C81E26992A0CBC0E8221
3C70F8FAB28C4E998ABFC56EB4108B26305B0A8476187101E350556D777258A7
BC2582C16070C4D6DC4777ED7A723EA37BCF5808E562AD70E894621158C22F17
6B30163607970B04647E765BFA1E7DBFF2E95B8DF74008A1D3C5E7C12D812CC7
7C75D92AC57B512250CD711EAC252F6CA4CF382BD0ACEBB7C4599E08C56478B6
C2F576DE2BF71BC5D1EC3C831EDE8F5F1DDDA31ECF1C1EFD3262B711994EE781
5D92C1D6151D1ED9642824ED65F147D6F231B461AF422355101AC49658B138AC
E2074ECC85F78DC9DFECBA22ADAF48D7419CD5B87A919433BF6C70F5BFB5F85E
CBE7D3F5F8BAF995F1D86F8EC129F2C2F8AAB35FA5C74AAE3A3C7F6DB99965D7
A2DAFC8DE4B9E4E8024F1933E15D94B8F3F96ACE602DE8670512AE5AA12B655B
96CE950E7DBC216AB3598803E76BC5630E175966DC59D529BF84C196324530D7
8306BB0A10285DDA5E1EA917B10B32ED08E77D76D1276CC7FA6A506AE3C8694D
148D81662AFF7901A071501004D5BEBD20A33ECEB88F7A7E15CAE8C5D90B8D4B
3AC49F26F773D1748355819E6DA7C449A549EA5111F21727E34F4CD0FF350D1C
EFACD8EEEED628C6BF37CC45E60BAF4AF5109673BF2BBC47434C1FA9AFF6CA3B
FAF23EFFC35BA38B0EF5C1FD6656EB95CED62D03220EE473531C493751C41282
5C6337C6B57DCA4BBE176809206D8FC9AEA8F35FD2854C448BD5D9C2788862A4
508A1622CFEF541587018C30EDFE05813F43D631D13A802CB7B6524B876EDC9E
F0B3FE8586170D50D90EF8DDDC0B692ACA1E819ABF8AFB7051E4FAA8D878652A
4CAF5ACBC96D24843B4C89006FC4A34E4353C010701124DE871B3CD1B8A5FC82
69C59BBDACAB70E1FF2085A5FB446C59DEE1EB28761C11BF4FF038843895B6BD
EDCA2A06A1C6FC7B5E1BFF8F5A2627A09A5F93A16DAF98DB46AB793C60C39161
32681A1AED28AD9016BE19FF866A58A141E1BEE3F6605B45B2B19202F818BEFC
CBD19F5EFD81029619C0DA5E700432505373FB10E80C99F08A14AC86DDA424BF
2C1E84E6AF01D8B9FAEEE7025A73880B2E875F706EA7B0F10C82527FEA966560
9F866077C1BC2A15889917716A5461F883767949E34D03DAFF97DB0763F9618E
E6E30EDE2D57F574818FC2CBB204337DC105F29A21BEA925881F93087D44EDD6
55EDE259AA85A4FB1096E0CF303DEB41172B430088B5786E7FC9CD61D069594E
031390BC673D187748BAA20C22A0FA5D592D83DB8AB06ED9E187F9E15825F57D
2DB6B5151121306593CBADA6353D803CC951AB4CB3677A862A363E99232FA7AA
CC59C362864C9B9937744FEB001FA13E44683D462F5B92E6F19AF9168EB79ED4
6F91535CDF3834B8179D9446DFAE67FBB8834E0E8CBE3C48A8A14BE2B1C9701F
5735A69A220DD7F231365BE2C51E73866A401D2393058EA872F7D642C0D948BB
BDCD9DCAB437038111CB85013BB67134B56197C411E3E84F82C0B3B3540FE724
36B7BD3913E1CA53CA5CA0478A578EDEAA1C01D0648030AA72D8C783F41044CE
CB28E31AC2C563B89563D0D5FA10F916330770219BB3D1D7757792C1356EB6CE
B63F376AD94097CF0FB92124858A522B9E47D445CB120A89DA6D603E19E05CCE
AF44059534422249D705EF92A99870335A21FBE89BEA4ED9866C076A4D8C4332
C77F2F2A5C6BF8F5E3D1390D2F94901C61BD0E656E5311FFB4FF1570574EACFE
F7D3593ABC3B2EED661395006C1C8F814913C32C56CEEA53A08F97F5ED9D8632
C4BD13E7FD14AD0D8CB49D42C168546C5C955509BDD99A537F5C9B818F31962C
7FD9A30D9E8FFA1665C08CCFB91663D48A20BBF0B4045072ADF11FB8B9FCECA7
C92639D3C02792CB44A20BAE18322854B5BD335628AEC559E3032F1555042E52
D5BFA7AECAD0155463EDFAF7DF63DE350C30BCFF5732B023D3EA131D4B95C8FC
7AE15E6B525599BCB056B9A6339D5B4AFAE1B7D87F43426B6437127C93A4D3D0
5B75AB13FB2E9EC4DBD1F074A235C143E16BA9AA82FF6E22282CF9F3E0F2C512
FB49B6440EBE0C3CFD42B57FA00918A36364CE91AA02EF831F56A5C5F8E8DDD7
180F306DF16E79A2D2DB980C1344D3CFA6B60DFAD490E35D7D805F884E54F9F3
3C5442D4B869230D59D9B7C8CE00E9522A502205BEBEFBF0D03E1EDAE3FFB2B7
19D0CF3BAC1B04FB338E43CCA0603D0F6B73BAE694B34E1097EDE1892AFC0EE7
442BEAA2193FA6D6C3442EAEED0F8A726D6158E2843ADE25804BCAD8ADC3E0CF
9E1421EB9E01BA443290F5B6E5FC95AD67DD6A2A1221B19500C028615B5F5470
23A7CF43BC0B0EE9DB8E12CDFB686AB24214F3C046A1FEF9DC20BB3166DF3C53
89F960C2262A263D11F3C1CCB7460FFC8E6C6A79D4E8BFF1E511442C35BC60F8
7595EEC43826B20701007B66235C649081CF715E634687B6D0FF6FA73D9595C8
26F333231AA99F9D731A3BAE567F209C939D8516182CA5F0966CCBF971FEDE25
EB06839368525E86E041A6DED979FCEF2B340416C481A75ECDDB8874CF9C738F
CAADEF27878C1B92C19CDFB8240F2FB9A930E7E7FA7028C20F202C698AB39B21
8E338E0A63FA30A405AFBB6BAA9577A6BBF61640DF831604EE8E5952B06C7302
3DB603078F11245963965B3EC5DF05589F15402DAE4EFDFA2D553A50B57F87CB
09E8CC84EEA24F77BB33D88946BF0A0EBA8DCCD3BE0D04A1238C068DBF528C83
F7025FE6670F693B2127F504FBCFCAB597231AA06AEAC1614BD19D8AB06B5D18
639DD2DC1446093E658AC98C73777601E9046A014F5D1B0DCD7C0D38E408952B
1F0637282A84A5CD096CB3178DC1CAEA207F4CAFA63E108B00F638525B7AB6F3
37FCFFB74D047208F06A7633C936FE7A58DBB29897A86273EFD82A3015BFC773
5C04A50F4A3EFA7C55DEE0E2D27299944FCDEE3B1F8A40AC5B196E0A81BF6A59
5A226F250FC05774DBB21F44AEAEBD71612EF6F8341DEFD26E9C64105ED8D396
71F75C1E86344B46E2B930BBE1EC7ACA694D2D3DA2B06BA8CF2399A7B0153ED8
D7C72012C88173E55F8A944113D4AA86F15F0226908C20527C35F23BCA461B8C
0A8EB05C7CC6F46E85C099A13BCDA41BCEA8A8744C45888D590F1CA0E5E985A1
261AB364317316CDD654C7F56A1446FB2FFEA1C864A4F229124B3283CD85B46E
5F64159517676B24D2596D5D25D80C0A60372AE0E4681DC48D13780FF54D6EFF
5770C42B08EAD7E6E6D899342CB6AE3F31FC7A9B9F9A3F4B89932B99820785C6
A8B69B92B0E1EA063065B263DAD1F9AF3B4FB29F1BC7CA381E1D0265EFDD1F5A
11BE796AB502CE5491537209BE394CA1FCC9E7ACAE3BFCD00581B2181D82BE5F
E1497869EB854B54ADB6F99DA8604E38440B9A8A9A87EBE5F9A42514AC7ABB2B
DF70816F25BAAC1B0C734F8795A53E1F15030EA41B1EBA96DDC60B47CC3FBF4A
2D10C56154F9429E2BD266A9B1C08BED282A96A1454023EF1A87C05061CD4BA3
DE102868A67D0BF1F1E76A0507AC9B2D2C5A1667BE752BC7AC1DA20CDE753E1F
EDF1B4C6FBB3D944E1E86D63E625D1D067B21D9BFF5D5CF389AF07A31E623824
C8DF28227B5E126B6BC33EF51D832CEB12D288612C27FFA3BCA41B74B73FD7DB
0EB74EF9A169713C3F6FEA041C9459819D3EA65F9D13007879304EF4F0050F19
62104716A553DC0116379D3DC1F14A47FA03BA7A3BC3A24FE1CCAC260B2C108B
1068B84B1AA5DF741299DBC6C05C66E7E9DCD1263D586FB7454CF15B3D39B71B
492B26946554AA796C0898626A776FABCEDC4EA9E229A7019CCAB17CE58F0005
C23097A4B722775DB1D43E1D6CCB178AF6F5BF3843C7EF809D0B0C26E79CCA47
32340A3FFFEA9652173F5638B60AABA8103EDF2AE9AE7F24AC3A2548A3912AC8
A0D9CABCA8B80ECE068A67C7FA65FAA3343DEE450E4FF63180730A18055ED807
EF9F1514988642B6145360D381803F959E32A6028B87515DBEA19F6D402EAB2F
0C88EBDF04DE9E4D94E9A48BD180B9DA188B9E00C00A56A79208829A1A8C346B
6C5D8087679CFE30FB1D5059F724DD012C41B107035947171EF91178FC0E22A3
FF6A63656B615841A6717F153BE89056FF1139DAECEA321E2822562F4FE12CB0
25D5FB9D1D24222707F622B6DA9970874F01FF72FCAEE2530CEE0D4078E95AFC
C5C6629405E9AFCBAC7AD16A3FD821F4AA263C05DF3CA5F86C10AA4CD1ADFA1F
C710AB33BF3C848EFDB76853D29FB412D372069D5D732B33455F007BCA824038
38BEC4100707EF0501B665A7CA815885243A1D3B93DA4737BFC8B642A65B57F1
820AF979D21FF23AEDEB61826EFE3D65A0D1F0BCCAADF7193210C5C7D41E9FB4
469B735997E21A6B1AE374D0336FDE2169AA0FE7A11689DBD045E3064685E5EA
1D1DDF137BD2E05584988BA64D97985F29CC4F79864BC3ED4D6D5264A204D06B
5D0A92393576B6AA0BFDFDED160C3AAE915BBEF7D5EBD394A6A6BBBA96BA6B7B
DF4F41EA30E96CA303FEA7993656C55865057DD558BC59AF8DFE0A930C8C0A79
CF2DA0CA2BA1E3BE0ACED292265103830C45B2B57194743A5C20DA6A8178A679
2C7E0B662B2D0DE80A79DB25040D9A13ED6C7F1FBFA219D270317E7B7814D12A
CFFA69003B4CD0D523C6F774F70B8BF849DA90033FE3CA0BE8E66ACE798C8B07
66C7799B735482B68874DBCE051DDA8D4B22AB02209BF1AF5499DDB56647C1F1
BC772C4EC03BF6CA7A381D41059A6C7DC1CFECA32CED5872A7F066A6B724E775
A9FBD38FEE3B65F28D70E47B5D5942B29619860EA3A268C5CC9F410F3EC74705
E32516A60CE213D549C5254D65DB2E82F9D64E5238542AFF7A81E9EE33C768D2
11E59B121F7C9C535FCD4994D7841CE5D54AAC78A4FD3323A28D61BF7FF6C0B8
59B55FF9705C4E89256F1948CA3995963FB4B143C0402CFD39E7FE38FA6630EE
1BEA9A1D0B461E43260D550A6424A53D38A77439DAC95DCB1854229C31AD0577
49B5C912A84045F157F54A4304872E88CCF1EADA9AB1C03703CE7076FD00DBB2
F062A16E5AB8790C2D5C13DDA638EFC23465F556ED973CD6362CBE5BCD5A4383
F380C770ADF4F5BC5000B159F36DEFAD94C4C1E35EDA505C61EB945BC76AAE90
8E6FB76A2FCD7FD503D83823B1A14EC3A6330B5ED8B364E7606517B4C3FBA999
C6B31B32BC579C3E405A75EB1BA7525CC2DA963532BD06B9B53538D1E5628D04
1BE661E7A45442BD34EB89080CF5A05AEB5FBC2294E54C856E053085B18CCDC4
E886C86CBDC52982A3461F2D534ADD570ADCE93D8EC36FE24B34A306E7812F9C
F10EA273A9D61661D084158622207F552839078151B46551D38B2D7EB063AAA1
E730C850E7A7B258489D9D0CC045BAEAFB13F6D1CB3106B2B01140ECC2018994
E8C4CDC0026CC4D74275083A4159EEDB266432752721E1E8822D2AC6343EE128
1F372A84EC6E0E54E5CE23A7017AB0B811492B0F7CAC7BC2868C5192E3B0916D
1A22003880ECF2DC7964225C309BB83276C9C11062F4225569BBC7D7205D3981
51C680A7321E84F263F75F85BC040258DB2EA134AA48F703BDF9878D538E8D43
DBB4A21137A345846DAC34DD495B79B584B36EFE59214646F56344747FEE984A
151D1388FF3B81D76342171C176727EA1BD8431771598F2908964C68750FCE22
87178327F747E0DBAA381DC1FEF78CB7B6C23B561E7CBAC5612C3CAD321F9DD0
26DA8E9303902A66F4E1BB58BFDC89AA61F415A48B0F7753237A7B3C54250859
F59308821A95D07ADD1E725C17AB4C5B119AF8595357C4B4711CD85CA6A7A7E2
B7B76124CD0244460CAC8E725BB2F3BCE853BA44DE5D0638187BFADE57727553
C7DCDCD9AFC0820C7368E0E8472A3A80225864403CB46F33A38A716D90B2E871
65092AB78CACDFCEDC25190CF49E4A2888478EFCCA3CF518299E5F0FD38DC991
621FAE915EAC0574430CF565A9A5E25CEC70C3D086FE86F5E8A291A7871E4CEE
12254DD6EC6879C68845D6F3B8FBB26F3DF9EC7093A7E97B332203689A4F8437
F118B6EACB8BB151D145B6226EBA261242613ACFD4E70E4B856F6FDE85970D7E
B8F0EE33C13FE50C8A8A401577A3A6A27F922F721634ABC77A0C1138F38A0C6C
0F9E4FD1291FD4D1C8664EA8C44FB1BB762F50DBB8D27D7D1C38D77DBDB44E9E
B2D013B826348DD62CBA3270B58B36B13FB6068DE30C08306229681E35242CAF
9A05014DFDB3C42DA3BE8C0BFEA09AD60991497310F03A9BFE0ED32267A5DDDB
FE7BC45E77A9207A350FB898B8FEEF57C13D3BC33A0F9CA829BBC8C01E68912D
D06D081FD3929A98923A16B4EC087DA37C066786D4263315EC40FDC82E8FD3DC
0043B0C7EB4A662A9CAFC7129969BE56CEEB547C8677711AB102B92511FA671A
6D45BD69635AFA6E6072C17995968B8845077058833320968E12A05726B0F6F6
60E8262CD10AA4FBEE7FADE1CCE1320088EEC3C634EB2277CD50F36C5FF93E96
38CD929CA85ACAF1A8AE81CCE3F067223483E3EC4B432ED5801F701B56BFD030
827341663767D518EFEE4FC4D162408E8F66A639607D25146999C7F21BFE663A
AC3D082FE4D4CD5C0988308C3B89B3A29E9BEA8796F5EFAD8821D210722392EC
CF257E7E8452D6FC7CAB9BBE15D668AE0A922B8384813E5602AAEBA9D6165745
6E0C994148F08F07038ECAEB2E985D6B10F9DF458715A22B89AAC4BA438B0086
3737B1605042F53221EB73C8919911FAEDAB9B73F225BCD94AF776C116128138
AB5ED9834F56B8DDFAF6B136112624927B4D976168263B967E327D5B8AE3377C
45028BB3703C32F7C863B27C2ACC000FC6387ECC008BC6988B45ABB58D91788A
5CE8ECF6C16BD17FCC9A94D73F1AFCC56576EBFC13746CFE3DAFFF4E01A1C680
9DDFC846631CDEDF8B90C5F33ED9940DB1F3792598B52D343D3802B48E40F368
126CDB3F153C4FF91950DBE7C064A24546758CCF21AC2EDC33C4733045EF8DB2
2B7E226207DD9C7563E18B288041198EEAA1C07DC3C01A490F77F1CBBD91B105
1603F71C2CBC8B9D6E4ADB7C4C99C149CD8723E9C4C12AF4D64EBE26BCAC6E58
2737B0CBEF7FEED3CB3BE38D7A8C6061B82232998DA319E50BBCD22854A45602
E29E634B89D14EF75B938FD466691B7ED0A0C60A8A3A9A4367B262432EB19CDE
38F0E59E0892712D68D0F58F4AF22339EBB49969846DA05150FCE81FDA175DD7
20218894B9F9A8BB3CE8BC37FA7794DD1B5110F7A733B4C59B9AED19DF3E348C
9E44A6331771823D5FDE30871E395BAF5163676797C9221AAC40ACD8912FDE45
6F084F7984D15008E84A4BEE48C9C7BC45A13A46990307EB52B13CB02A765395
93C07FEFB5BA2D89398C3F0AA5D156BB1A7985DF40F75E7BEAE3AC524353196A
ECF13D35E414F01062D6F2924CD00291279E185F0321533CFD004B4F044D0B7B
3E6BABEF27292FD71CB26A9E3A6F764E9B9775C3174093D5701FCCC4DA32C871
1B75A2EEE25DD5F2053FE594B265B6652FE44F0E6B5F070304B04169FAFEE816
5982AF85608D740CDDC51109443631087069CE431543CCE5F30DB30650CA4972
0F332D87CF076507D4DBF80DC6B876577375F1D43556D5E4CF00B5AAD460385B
D73127BB3F54329D079F74F1C02541684688DF59278227A3F0BC7F17F3FB5A92
DA2D93B044DFE84207415CFABB3546676053B84F413A62959A74FFAF8684B9AE
89BD06926F0A3A3F9052022EAF61ABC0F0023CEFBC6268334E5B554E2EFB9EE3
305B60C364FBC4AE6811B8680BEEF25EE327E47EC834B615E33ED24FE3D604E5
3C1F0C2FD96FB8ADCCE50CFA69200D1CA0F08BA1F2AF9EF23720856C13230620
1E6C3ADE2E0FA08E9F0422A3C95F744290B2649C59D3403724919BE40E399A7D
34D370A2AD13B7EDDF85B3E6DD775EC1E760B804A8247AA1E0B2BD8920EA3B7A
43E06C1F274C575837B2D7EB8D3DC0501293A5FA87328CBB5789AA45F50119A1
F8837548ABB9524B1C2712EB33BCBAE5F9F7B70D2697474CABC3DD0405160E40
A924D17969CBC06F4CE538700243B3493A44EC6B0B8EB0F613C5BDCE1746C4D6
AE61EF681D31C4E31505DF4E3A8967BCFC855E4543C897C0BA6837B9C94E46E8
522D02EBDE831034725B1534E1A439D70C45C0C0020D0F316F1230AF689918B4
82B767C1655096042BDB874B4EBC97991C2FA13C6E343D0B72069806BAA9E708
87177E32CFD38CD16F1AB027212A6D38ABF4ABC99D871D43924ADEDF7FF78D51
84E89CF7328B9AB42CC2D0989002C527B7D6257D63F97A7020C6B13599F70497
CDB732BFB28837F4AF0012D465768DAC4FC0E505AB87820CE850263E25F05A7A
22C487443CDB761803D9390B8B9966FDBBC05CAC04E131486D98707E253F0561
32743EEFE781600F4D5E07D0A3CD5E042DC0B9E268C9B6C0A8CC71A2560C93A8
8E1A87D2498FBC0A41E6756000BEBE7F50A99E69E27BC4FE2EDF3B8DE770AECD
5845EE9DEEED3B328F6A05F0752E14F608FB726FC8989D4A658939A830FDD345
C9950CC5BDEB74C244313A620658E052D259FB15E3A59B855B5FAFFEF8198CE0
789CD7699E2443E9F2A6ED0633F51CF440684EC1547771D3863335AF79405053
BCADF6AC524739D6CFD87CB1DB812A89C3AA9B53BD8A5AA2A6206F74FDBBACF5
5D516940DF6164843D78E48AE8AB391FE9EDC391E3462BECFB5C4FFC986DF1B2
0221AD1678F4F81D6E56A4084DE6F24ECA3EC73900BFFC40A2CF36BA5D38BE10
15D4F40F0BAAD3EE9752B2044F496A3F046A84385661E8169A68FE2C52BA5123
44D2040C7991C70A89286963BC95848C43DC9560E46B1F0DFD1BB26E93D7292F
1B5875D2CB2B031011401D0E6268B54CA48CD1CAB138791B72D8E813E9CEF51E
D932DC27DE63892D473320F654E5A3F2FB1E89DAE02563F58C4595C5AE898AC1
5255B8AAF38A091EC4AB594D575AB9B47C5ACBB0C9CD0549C629C55CFF0E2DE7
CCFCDB10635AA50AC71A8956B8E334E69C67DD6FE4B67ABAA0AF26C6A74CFFDB
71EAC2F8370D73A3813BD89E2B194BEFAD3EE0E6D0997542FA640167A0A6A677
95570637C77B7733696C0630063C3DA1DB59813A2011F57C06F91CEA5E2149ED
D99623DEC573B1941634B6389085273F954C10999D3261FD8B766F2033FEA397
680C17C0435F205512178DFA81CADFF995B8B18CA1DE7CA3343FCB1C9E299D09
FBE4431DB76BCEC00FF3EB7CD1B6BED89104CB57EE18EB907EC31369F8E366DA
21F559B58B9D25632DD73D880815E66E34F929327AEC36F91ECF7A7240075829
834CE3F3B3BFC0FEE68878C4E43E79117198FAC96656AB6D4FDD59AFE22375CB
020B94EF349E70ADC06B2E21127282A76439046DA57DA12269200226721C376E
269EAD34B688405218980CD816E718F774D912548AD9C4B3780195122F332191
697AC2BEC4096BCC88224B8948A2CC16D9BEB4252D67C7186479BBEB1C98870A
7299CF437B6280710C99658E4EB9DAB487BD56C8F52F5B0C9971812FAA3C97EB
EADD5F987F97A2DB02C9FA0E60F9F27160C210650C1C0EDB93CD811751E22D0A
641CF890AA9C4DB541FAA4A002145DEF4784BEA5E741F5C7F2961614DEE820FC
6059EB2072DC311C8435A64C9A456D70062CDF6F3CE98088FBF6A1509696DB71
9986C693458BA92428FE4DBD0164EE103E92D2C04253082ED694066A34BCB88E
4B5EB28A7350CA68AFF6380C130FDC01AF7EFDC0A976AB6247362600FB12A99F
EDAE193EB61BE08C7F83EBB0F033BB3FF025E1991ED69FEABED1D46654CA3179
2A73E700766F9A4FFD7A448352AD612E3019E4D27212456B069C4B9F1DE9D293
A6E675D3918D3CD79461408ED2B4E096BD4EDCF91D2A6340702E10CD857BE826
08FDCB93DF22593074FEEA17711E2EF065EC0A12C49DD38CE627F6742A42E5AE
2D35738C8F93F50E26A9F298154EDFBE3369989D6D90F20DBEB30A34F422F33E
A2BF8D25749828C5A2BA81F46187CF3381443FBE800675C670ADDC27EFEFB76B
C36D165A70DA23BAE6045AC247B884301CC81B2AC0408EFD5519B85EE2F8ECC6
46D808C75542D79313157760A35D65819C50741B452EC2987E9E7C21978D4D31
5F8ED5A34EE2E05A7C1F3EC4BC4906A8DC038D2E6F4792A1EE26F67F7C648E87
66C9B60D99718D4B90594BAAC3870E1A556E2E593FADC669BFAFD792E9A238DB
07F01D9562ED9FEFA5BBF3B2A073792BC645DF834AA87A515EA7C94DDEC8C0B2
D406614A152DBCD88756860F268F04A18665F0B0C0A9D95FA1E33F0C00D70335
16E4596F1FBF5B6565B6AB4A4AF89DC685F1B81AB70B6AD8CAF183FC61365270
D48A86C4BAD5B41DA93E8301B54DA2484134E44BFF4E01728CD56E8DB4D8BFB1
4B458C0CC0386F45E70EFEBC3BA99F9E8492D74DDF938AD489F2EAA2F07CB6FA
A5FD097DF6FEC8ABA09392F2CA827C9D0EE86022447C8DE250E74B681AF1FCDF
F801246A77903D16F772287E7038B813CF2814BCE0CA290AB3CD0DBC8DA3EAF7
74FA4FA14254252A934334DFD7E1E29E483078525992218EA9A1D46A6EB9F9A8
583F112DF5060930F4F6F2DBE5D0D7CE9D2AA31F6690A2D9B819AC758DB47F67
ACDB784684DF94D69F09D86EAB8D402F232034B7BC4D1F3C2DDA03AAA26E028A
6F4648824586238347FC53781F6F45C776A9D9DA780DCD6F4C34C21E3F9064F4
EC9281D02F71A111556C952AFB9F517174DCA16779D99EF41DAACA1E6C63E367
7F175B9836E48C4E9A6D020D53AB52B98AE219598D7FFA5681E457E239093232
CBC9FBFC148B8009D30E237E1A0B399E5938B84E2B8C8045921074749F1D4204
3F336ADE665D24870F20BC781C609A777395A2F7A784F2447A9CDF3AED6248C8
2ECDAE95EBEE3CC9238A6F6CEFE83B74E55406C164881D06BAF442BFC6080B77
0CA8C7977B293EF846EB7DE76B47093AD1B7F1C23B63FAF027BC57CE42D9F0AA
9F98B31225BA22EB0BB511FE9018AEA6F30AB598D53B310D78DF7243F0E9DA45
C7FCD4062D6C332D20C757EF1A4AD635CFB129A7877252EAA30EF5AE532ABC9D
4F0396C41661F50072721AEFEA2FDD6E298D924295365321C592FC2A6FDB3CE2
0275C983DAA80AC117BCB61C0467083490D49802512E6972645DC1679FF53CC4
20500EB69390CDCED68D2D8D108F7C0528F048349A8EDBD2C7AF10ED3EEBC9AA
096E762ABD3031155557610C3BA0906A7AF0ADF9564C0A3528878FD665621508
1185D2A6101D90904BAB4ACFEDCE9CFF0D7EFBEE15792DD3656C619FFCEE9E7F
8DC3D8E56A60A88EFBD19677800B16184D482FCFC2A1B97BCD6BEE1AB562758E
42529847682118CBE72E7E9183172395AC2CA5BF5C55C5F687D32E9D5DA3F066
7DF097ADD8504962FB0663156D8B78FBDC213FF0D40B2BA323340206A35FCE51
92B1DAF8205341597CA0852885F47BC4B1D61903F4B2338EBE95A9B67EEEDA49
FEC7A0654618715163923E7F6219E0E710688AB2F7F2AB438B1B6048053C6F99
3EAE07319ACE4DF9DEB7776A5949B76D3E4107A1EBB478C739C59ED1F1BE5855
E6664EDE64EB2E14DF3388B1EA46081AC9050E669AE872A695DC8AE55A5671EC
FE8AC70203226B8D3A098695F2D294B4E337598CC19833A443BE18F620C3AA62
7375AA7DD7FFB3C1553B8B4B32334C93BFB714E78B59A0EC60ED34C1AC5F8E41
FCED79F75B7EA734A2D8AE378367075F8466E42D8F5C2224E5B45CA33192FBCB
93D173335678F641FD7E24709D2C39E52FB205F64949CCA5C5E9361B5CF53E69
9E03910FBB1CEBB89C53425A08E1723E4E82ABB9BFC9DFDA60C9E12408FC5CD6
29E2A4079F6815A84BC177A6921A0DB19D9D2576E72FFB58F9E5EA4EFF841DDD
09F178F5E26950A24E6A15DD2E6A8C865E6D2BF6A98F0D11D6DA20688465AE44
4EE14F778229AA5DA7D143E3410E653B08D793F12DED1D26B93D36E22E8EDACB
E187576BBFFB51B65297842AFA9F71B87CAE5F064B2F9A658742CCADDD1ABED8
6D3C493971960C43262B39AFB87C8425BF8296BED1A2323DAB4560B922E08B38
6CE4E9B8085CA5B72513FF95BE90DA275894BB1A52AF41149CC7B38E854D424A
B3D509096D127A451323100885095A2D07E11F8D48B682528C65089603A42BAD
4C0E7EFDAFE8228BA98A89900C8567075CF116217D53FB6E8EC44272B7664E6A
0D3559BE0046AAF16C8322AC93FEF0A43B4C0083B829ACD4FC3D8349211BE153
FF61F785E1F931C763511FA87452D8BCAD4FFFD1335B719A75580965E57EC282
631AC90761AFB3B6A7D6280A681A113549FA685135F7E7A2086283393C994BD8
AC291B0C4B29733D63179EEAE8522F9ECA9BEE2693D2170306E39C72CCD2FD2E
98106F2FA68C3D3B064B2C3336A873B6838DC18566EC24799AB27D898CAFBB81
B60956355CC9374DA16E8EF0FB9F9286B2217921920F1EFB2326151E8E215F3D
072FC3D7E7B32B35663C3B466EA368EAA853CEE90FDEA39590C684CAC0C655C3
6748976DEDF823F0CB12B9B88838060E074CAAE6FED34C4AA464289E609D5C74
6DF564F632340694C1BD51880D3A8A1D80DC5B3FB858532ACB81601D79591EA6
C7B0620CE8F5B39BC002182142231E219C73D00654AE8A71286A279FB06DE23C
089AC14DF42B205E90330821F34B87F0A7D34A016EA661569FA614FDACD7C945
EFE49A7ED2D61FF8A5D6E18B8326AC6E131AD790D32E10C620F100F3343DB7C6
2FE728E170D8EF75F828E383E3733BA7BB410C06E2D0CF9FDA269023169DBC3B
65E160F7AECF21133390F8FDF08A3F4504B64C5A58A2B17A084CCC64A4ADCCC3
43A5F142AE12B0AA22CF364F2C33D4CCD38E39CF42F3A155294B3B47DF040495
AA13516CC15028DA35DE3B265AE03103A436058DAEFE06775D042786E21BD97C
35A0FF1E6D7C194A64F0B469B842BC4694324FDF8C8BB5065D8025D2E3BCFB6E
99FDF3E2DCAF8BFCA8C5C8E06DAAAD98599DDD956B81325042445E6AD984FF54
2BC939392F0B950FE696C60D8C3F64CAE1E93C61D34A04C53659B5E552103D45
C48CE8039C0CCDBF2FB1DEC1EC8C1AA64698C6F831858007434F7B3AA505E969
2AF18BF32D75382716B256A0C9CE9D87DAEBE1AD0F61D01ADC91B9C9BA185508
2D7187DFC9B1D79FC621CDB8CB885FD702A1DFB81B658F8D904BDCA3C3F8569A
D049F3E1CA4CDE527596551CE14018755F36064FDE584D96A86855D5850AC626
7E3669436B7F19E632851539DFCDAB5789904B3FF3433E2A74CC170BDCD136C0
BFA0CC36DD4C2B23C6B7EA79A742EB02EA1ECC40936FDB99040EF307FA5D18F9
24988DF05735B017C1E3229BDED3508165023DB5B1CC8410C622C4DD7B068825
53993D1941F395323212849B0418D3FCDEA3B4BDD0EC8FA9CC219DB0DDD21ABE
6AF4429EAB6961A6458804386E1C19883B0873DB0EFACF8C8DD265CA2DEE3677
B693546261DAF046EE658673A6DBB5603E4EAC9116469EB321C4C7FFCAC727D8
6A01B55EE5719CDF61F81AA7DE8829D02E13DA07D0741C6CE072048A241CF888
4179310FD3161962F585DAC3B3EFD4ABFC2F7189198C6FBE050C0F14DEC5F248
77B54B264F2EC913CE0532A9C6C04BDF7B8D313251E56465109E4AADF93A3E66
C898AAF8D4752C5710C9937C438F5F37158D6916D34B540D31E802D5836DD04F
03C70F701EE0080BB240C3DFF021D247F4339158A442CBAE104FA70FE5280CC8
D8094BA1F67FC09684A498A0F9117F7F0939298187A0207E4132490BC88ADFCD
EA5591BBE96B3AC15E0855649DBC533868C8BFC7795B435C778DD1FC8054ADC0
8D5C7B332880CFB4CF3D13A7D2A7DC8ACABFC1D5F05CF442BCB1B0135DD1CA4F
6ECED08CBFF1739E0E064ACDA319BA9FC9B2F71575286A1C73BB78E7904587E9
F1E9A54B3C95E20C692FB5B337DC5D526C366939988A165573A036B451271088
6835CEE2E9A2FA398C77680313A1FB0024D713ACA5BC07ED5C983BD34F7F410E
D61CA07789CABA42640F645C2A88BF6BDF608FFC1DB8A6CCEE9DB6ACB41BA318
D498EC29910596849FE066E950BC8A93E643535454F18938A96F344C87D5AE5B
21427EE33ADFD86A71F5A4DCC89BD301E995F5CEFF173F248962C70FFABFA9C8
CB226A99E82CCD83AB83BF8BDA82EEEA890045028B1724E464D6DAB28B041164
4CB6623DE27CEAD387D1F1B3296A2E12C4CDDAA0CB19486466FC26A5012AB7EC
DE811345E45331BD3AA5831F9B06190B117E1D0DF82A992E5D1EFB66A8026C3E
4B8C93D1484DB120AFCCD0C40CD7A6CFA6EE070802BB7AB3C24AF3F6259A7413
5AFB6107F8C5EF0310563E35D9B6F147D520127CF3603AC9E71C9DEF0409646E
178CEB2E4123AEC0A654921729AE373FAF52F4FF40D271BFBC210E73F1600ACA
57CB5D455AA3EBCF4F760004A24C359326A46770EF48EBB2E5EDB4303754002A
DEBB91A553ADEEAAC37A492DF7823FA2198871ABD0E2FF87F55E475D51899E91
5EBD0A2451815154F14A6C024D214F67762BD9DD483FA26B6BC81ADF3AF21593
9019313B8547D3A8E869BEAA3B27D317A2446AB607CE40E067273E8456EA4B07
FB2BB07FDAD36B463DF9398066AC18D59835B8585622414331EBC3925F6CF442
1614D9ABD92E5FD3B9ACEEE36DFBA857EC8902D109B78BD6832EA9B3AFE43229
EECBA30AEE9A9EED9A46F4898797A8DAE70923FBEE4F9D936B4AB30515CEA434
6AE6F351F7C48897C92234FC06DD4C9F57585B7355B817006ADC0482D5FEC8DD
665192FEE0C3B7B126F08C6FD3881ADF43EC2642B202D59A9A98FF082753EBF3
91C690CCD5A0409F2710DEE1EBA0635A057011325266A9AB924E33F17538234E
2BA96D98DBF049871CEE77458D506F6A354767EEA33D2412B16F0A3412D53FBB
3AB420C1E6460AD70E6B85912FA9A4FC1A729119EC9609D038E8948E8846F118
C9A12C8A03CD69168049D5C12C9AA4AA35E48E658C8B3262F4C56849DD84CF87
44FB5734A39375533E390BE9CB7CDE8E04A212EAB8E58F9FCFE2C2D547F1B796
4016971AC30BA2B8BC89E8898809DBEEC910F912D1EF195819931647021AD7DC
D57B17D8850FAB41D79E8F1142B4D067EE0B8C0D7C90476CE63076C832DC2972
CDB3B9C22DE6AF8C59306FF6DD83A005AE5236B1BD42CD0E32FC44B156C47B07
13B94D0E8D8D04C7D1C4E6CB68EFE67526B017A81A399C4A0A87F6CA0139D0BC
414671B90B29C516018CF69066AECB360D7A1513D56E5A673559EDF06B66E172
56C0E5CD09F2386E7D937619EB018A4070F222959D217F89746478AB1568F609
00367FC0BA3EA68919956D6990CB0114119F5015FFB3E788BFA9791AC03A2A95
4F8B026128BD2250EE7E47CE5236EB13B7F144927251B207B502AB7C0B7AD253
0997F4B6CD0D10765E046CDA527F32B123BD3FF3B57FB5DD25D5FECB7D4030ED
AA610B2975E7D1D539908E0A44A3CC6C5A35F5DC94A78158B1640C2BBB2590D2
971728303E59FA956B7028C5025DD0666A66DCFA45959743504598092EAF64F3
46CAD55B0BEF469C4298340240AEF816317A05F5822FC52376CDDA0FD6A5D3EC
DDDCF04AAB524D6B8A8E48B391648D917F2E5C2EF0FDA1E69ABB528100BCF1D8
FD867927C5FF2E47BCA53A95657CD43FA403E68156EB2FE87AD398BF144B3EA5
665260F90F3089DC7CC304BDD9BB2376F13ABA7523A8BBC4A3B93B2AB041
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600
(/Users/white/Documents/GitHub/ica3pp/llncs2e/.texpadtmp/lzf.dvi)
@start /Fa 133[39 41 47 120[{}3 83.022 /CMMI10 rf /Fb
136[51 35 1[25 31 3[39 43 1[20 2[24 1[35 1[35 39 2[39
20[48 3[57 25[24 46[{}15 74.7198 /CMTI9 rf /Fc 134[40
39 55 38 45 28 34 35 1[42 42 47 68 21 2[25 42 38 25 38
42 38 38 42 12[59 47 2[56 3[52 3[62 1[54 1[63 21[25 30
25 2[34 34 27[47 12[{}35 83.022 /CMTI10 rf /Fd 137[50
53 37 38 39 1[53 48 53 80 27 2[27 53 48 1[44 53 42 53
46 12[66 53 6[57 3[75 6[72 15[48 2[27 4[37 37 40[{}27
83.022 /CMBX10 rf /Fe 138[62 44 44 46 2[56 62 4[31 2[34
51 62 50 15[62 84 8[42 2[70 20[56 49[{}16 99.6264 /CMBX12
rf /Ff 134[47 1[64 1[49 34 35 36 2[44 49 1[25 2[25 1[44
1[41 49 39 49 43 12[62 1[66 1[60 4[69 2[69 1[56 3[63
67 6[25 7[44 44 2[25 29 45[{}29 74.7198 /CMBX9 rf /Fg
152[38 38 100[21 1[{}3 74.7198 /CMSY9 rf /Fh 133[39 2[39
1[39 4[39 39 39 39 39 1[39 39 39 39 39 39 39 39 1[39
32[39 17[39 1[39 44[{}20 74.7198 /CMTT9 rf /Fi 132[38
34 41 41 55 41 43 30 30 30 1[43 38 43 64 21 41 23 21
43 38 23 34 43 34 43 38 6[47 4[58 55 43 57 1[52 60 58
1[48 60 39 28 58 1[50 52 1[55 54 58 6[21 38 38 38 38
38 38 38 38 38 38 38 21 26 21 2[30 30 26[43 43 12[{}63
74.7198 /CMR9 rf /Fj 132[42 37 44 44 60 44 46 32 33 33
44 46 42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 3[23
1[23 51 2[85 2[60 46 2[57 65 62 76 52 3[62 1[54 1[63
60 5[65 1[23 5[42 42 42 42 42 1[42 23 28 23 65 1[32 32
27[46 12[{}57 83.022 /CMR10 rf /Fk 134[71 3[75 52 53
55 2[67 2[37 2[37 3[61 1[60 14[94 5[105 128 81 76[{}14
119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 1701 448 a Fk(My)45 b(Title)1179
737 y Fj(Zifan)28 b(Liu,)g(Haip)r(eng)f(Dai,)h(and)f(W)-7
b(anc)n(h)n(un)28 b(Dou)571 911 y Fi(State)d(Key)g(Lab)r(oratory)i(for)
f(No)n(v)n(el)g(Soft)n(w)n(are)g(T)-6 b(ec)n(hnology)g(,)27
b(Nanjing)f(Univ)n(ersit)n(y)-6 b(,)24 b(Nanjing,)1864
1002 y(China)1004 1094 y Fh(nju.liuzf@gmail.com,)p Fg(f)p
Fh(haipengd)q(ai,do)q(uwh)p Fg(g)q Fh(@nju)q(.edu)q(.cn)759
1397 y Ff(Abstract.)43 b Fi(The)32 b(abstract)h(should)f(brie\015y)g
(summarize)h(the)f(con)n(ten)n(ts)g(of)h(the)759 1488
y(pap)r(er)26 b(in)g(15{250)h(w)n(ords.)759 1667 y Ff(Keyw)n(ords:)38
b Fi(Co\015o)n(w)27 b Fg(\001)e Fi(Second)h(k)n(eyw)n(ord)f
Fg(\001)h Fi(Another)f(k)n(eyw)n(ord.)523 1932 y Fe(1)112
b(First)38 b(Section)523 2118 y Fd(1.1)95 b(A)32 b(Subsection)f(Sample)
523 2271 y Fj(Please)e(note)i(that)g(the)g(\014rst)g(paragraph)d(of)i
(a)h(section)f(or)g(subsection)g(is)h(not)g(inden)n(ted.)523
2370 y(The)f(\014rst)f(paragraph)e(that)j(follo)n(ws)e(a)h(table,)h
(\014gure,)e(equation)h(etc.)h(do)r(es)f(not)h(need)f(an)523
2470 y(inden)n(t,)f(either.)648 2570 y(Subsequen)n(t)f(paragraphs,)e
(ho)n(w)n(ev)n(er,)h(are)g(inden)n(ted.)523 2805 y Fd(Sample)j(Heading)
h(\(Third)g(Lev)m(el\))41 b Fj(Only)25 b(t)n(w)n(o)g(lev)n(els)h(of)g
(headings)f(should)h(b)r(e)g(n)n(um-)523 2905 y(b)r(ered.)32
b(Lo)n(w)n(er)e(lev)n(el)h(headings)g(remain)g(unn)n(um)n(b)r(ered;)h
(they)g(are)f(formatted)g(as)g(run-in)523 3004 y(headings.)523
3190 y Fc(Sample)i(He)l(ading)f(\(F)-6 b(ourth)31 b(L)l(evel\))45
b Fj(The)30 b(con)n(tribution)f(should)h(con)n(tain)f(no)g(more)g(than)
523 3290 y(four)e(lev)n(els)g(of)h(headings.)e(T)-7 b(able)28
b(1)f(giv)n(es)f(a)i(summary)e(of)i(all)f(heading)g(lev)n(els.)962
3540 y Ff(T)-7 b(able)27 b(1.)f Fi(T)-6 b(able)26 b(captions)g(should)g
(b)r(e)g(placed)f(ab)r(o)n(v)n(e)h(the)f(tables.)p 523
3649 2668 4 v 521 3741 4 92 v 535 3713 a(Heading)g(lev)n(el)p
1129 3741 V 158 w(Example)p 2538 3741 V 1117 w(F)-6 b(on)n(t)25
b(size)h(and)g(st)n(yle)p 3189 3741 V 523 3744 2668 4
v 521 3853 4 110 v 535 3826 a(Title)g(\(cen)n(tered\))p
1129 3853 V 80 w Fk(Lecture)46 b(Notes)p 2538 3853 V
581 w Fi(14)26 b(p)r(oin)n(t,)g(b)r(old)p 3189 3853 V
521 3950 4 97 v 535 3923 a(1st-lev)n(el)g(heading)p 1129
3950 V 48 w Fe(1)38 b(In)m(tro)s(duction)p 2538 3950
V 699 w Fi(12)26 b(p)r(oin)n(t,)g(b)r(old)p 3189 3950
V 521 4041 4 92 v 535 4014 a(2nd-lev)n(el)f(heading)p
1129 4041 V 23 w Ff(2.1)30 b(Prin)n(ting)g(Area)p 2538
4041 V 730 w Fi(10)c(p)r(oin)n(t,)g(b)r(old)p 3189 4041
V 521 4133 V 535 4105 a(3rd-lev)n(el)f(heading)p 1129
4133 V 36 w Ff(Run-in)31 b(Heading)e(in)g(Bold.)c Fi(T)-6
b(ext)25 b(follo)n(ws)p 2538 4133 V 26 w(10)h(p)r(oin)n(t,)g(b)r(old)p
3189 4133 V 521 4224 V 535 4197 a(4th-lev)n(el)f(heading)p
1129 4224 V 36 w Fb(L)l(owest)k(L)l(evel)g(He)l(ading.)c
Fi(T)-6 b(ext)26 b(follo)n(ws)p 2538 4224 V 237 w(10)g(p)r(oin)n(t,)g
(italic)p 3189 4224 V 523 4227 2668 4 v 523 4493 a Fj(Displa)n(y)n(ed)h
(equations)g(are)f(cen)n(tered)h(and)h(set)f(on)h(a)f(separate)f(line.)
1791 4659 y Fa(x)19 b Fj(+)f Fa(y)26 b Fj(=)d Fa(z)1165
b Fj(\(1\))523 4825 y(Please)26 b(try)h(to)g(a)n(v)n(oid)f(rasterized)g
(images)g(for)h(line-art)f(diagrams)g(and)h(sc)n(hemas.)f(When-)523
4924 y(ev)n(er)h(p)r(ossible,)g(use)g(v)n(ector)g(graphics)f(instead)h
(\(see)h(Fig.)f(1\).)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 523 232 a Fi(2)237 b(Z.)26 b(Liu)g(et)g(al.)523
1555 y @beginspecial -1 @llx 0 @lly 343 @urx 142 @ury
3458 @rwi @setspecial
%%BeginDocument: fig1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: splnproc1702.pdf
%%Creator: Adobe Acrobat 10.1.16
%%For: Markus Richter
%%CreationDate: 04.10.2017, 11:21:13
%%BoundingBox: -1 0 343 142
%%HiResBoundingBox: 0 0 342.9366 141.8369
%%CropBox: 0 0 342.9366 141.8369
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1053 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2017-10-04T11:20+02:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2017-10-04T11:20+02:00"
   pdf:Producer="Acrobat Distiller 10.1.16 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:cbd15375-7f2c-4e63-8e61-d5e36141f7ce"
   xmpMM:InstanceID="uuid:095e3bab-d131-4abe-8a1c-a474fb450278">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft Word - splnproc1702.docm</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Markus Richter</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -141.837 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 141.837 li
342.937 141.837 li
342.937 0 li
cp
clp
16.9956 126.538 mo
335.776 126.538 li
335.776 4.67816 li
16.9956 4.67816 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
16.6356 126.538 mo
17.3556 126.538 li
17.3556 4.67816 li
16.6356 4.67816 li
cp
0 0 0 .56347 cmyk
f
14.4756 126.178 mo
16.9956 126.178 li
16.9956 126.898 li
14.4756 126.898 li
cp
14.4756 113.998 mo
16.9956 113.998 li
16.9956 114.718 li
14.4756 114.718 li
cp
14.4756 101.818 mo
16.9956 101.818 li
16.9956 102.538 li
14.4756 102.538 li
cp
14.4756 89.6381 mo
16.9956 89.6381 li
16.9956 90.3581 li
14.4756 90.3581 li
cp
14.4756 77.4581 mo
16.9956 77.4581 li
16.9956 78.1781 li
14.4756 78.1781 li
cp
14.4756 65.2781 mo
16.9956 65.2781 li
16.9956 65.9982 li
14.4756 65.9982 li
cp
14.4756 53.0981 mo
16.9956 53.0981 li
16.9956 53.8181 li
14.4756 53.8181 li
cp
14.4756 40.9181 mo
16.9956 40.9181 li
16.9956 41.6381 li
14.4756 41.6381 li
cp
14.4756 28.7381 mo
16.9956 28.7381 li
16.9956 29.4581 li
14.4756 29.4581 li
cp
14.4756 16.4981 mo
16.9956 16.4981 li
16.9956 17.2181 li
14.4756 17.2181 li
cp
14.4756 4.31812 mo
16.9956 4.31812 li
16.9956 5.03809 li
14.4756 5.03809 li
cp
f
16.9956 126.898 mo
335.776 126.898 li
335.776 126.178 li
16.9956 126.178 li
cp
f
16.6356 126.538 mo
17.3556 126.538 li
17.3556 129.118 li
16.6356 129.118 li
cp
17.3556 126.538 mo
cp
27.2556 126.538 mo
27.9756 126.538 li
27.9756 129.118 li
27.2556 129.118 li
cp
27.9756 126.538 mo
cp
37.8756 126.538 mo
38.5956 126.538 li
38.5956 129.118 li
37.8756 129.118 li
cp
38.5956 126.538 mo
cp
48.4956 126.538 mo
49.2156 126.538 li
49.2156 129.118 li
48.4956 129.118 li
cp
49.2156 126.538 mo
cp
59.1156 126.538 mo
59.8356 126.538 li
59.8356 129.118 li
59.1156 129.118 li
cp
59.8356 126.538 mo
cp
69.7356 126.538 mo
70.4556 126.538 li
70.4556 129.118 li
69.7356 129.118 li
cp
70.4556 126.538 mo
cp
80.4156 126.538 mo
81.1356 126.538 li
81.1356 129.118 li
80.4156 129.118 li
cp
81.1356 126.538 mo
cp
91.0356 126.538 mo
91.7556 126.538 li
91.7556 129.118 li
91.0356 129.118 li
cp
91.7556 126.538 mo
cp
101.656 126.538 mo
102.376 126.538 li
102.376 129.118 li
101.656 129.118 li
cp
102.376 126.538 mo
cp
112.276 126.538 mo
112.996 126.538 li
112.996 129.118 li
112.276 129.118 li
cp
112.996 126.538 mo
cp
122.896 126.538 mo
123.616 126.538 li
123.616 129.118 li
122.896 129.118 li
cp
123.616 126.538 mo
cp
133.516 126.538 mo
134.236 126.538 li
134.236 129.118 li
133.516 129.118 li
cp
134.236 126.538 mo
cp
144.136 126.538 mo
144.856 126.538 li
144.856 129.118 li
144.136 129.118 li
cp
144.856 126.538 mo
cp
154.756 126.538 mo
155.476 126.538 li
155.476 129.118 li
154.756 129.118 li
cp
155.476 126.538 mo
cp
165.436 126.538 mo
166.156 126.538 li
166.156 129.118 li
165.436 129.118 li
cp
166.156 126.538 mo
cp
176.056 126.538 mo
176.776 126.538 li
176.776 129.118 li
176.056 129.118 li
cp
176.776 126.538 mo
cp
186.676 126.538 mo
187.396 126.538 li
187.396 129.118 li
186.676 129.118 li
cp
187.396 126.538 mo
cp
197.296 126.538 mo
198.016 126.538 li
198.016 129.118 li
197.296 129.118 li
cp
198.016 126.538 mo
cp
207.916 126.538 mo
208.636 126.538 li
208.636 129.118 li
207.916 129.118 li
cp
208.636 126.538 mo
cp
218.536 126.538 mo
219.256 126.538 li
219.256 129.118 li
218.536 129.118 li
cp
219.256 126.538 mo
cp
229.156 126.538 mo
229.876 126.538 li
229.876 129.118 li
229.156 129.118 li
cp
229.876 126.538 mo
cp
239.776 126.538 mo
240.496 126.538 li
240.496 129.118 li
239.776 129.118 li
cp
240.496 126.538 mo
cp
250.396 126.538 mo
251.116 126.538 li
251.116 129.118 li
250.396 129.118 li
cp
251.116 126.538 mo
cp
261.076 126.538 mo
261.796 126.538 li
261.796 129.118 li
261.076 129.118 li
cp
261.796 126.538 mo
cp
271.696 126.538 mo
272.416 126.538 li
272.416 129.118 li
271.696 129.118 li
cp
272.416 126.538 mo
cp
282.316 126.538 mo
283.036 126.538 li
283.036 129.118 li
282.316 129.118 li
cp
283.036 126.538 mo
cp
292.936 126.538 mo
293.656 126.538 li
293.656 129.118 li
292.936 129.118 li
cp
293.656 126.538 mo
cp
303.556 126.538 mo
304.276 126.538 li
304.276 129.118 li
303.556 129.118 li
cp
304.276 126.538 mo
cp
314.176 126.538 mo
314.896 126.538 li
314.896 129.118 li
314.176 129.118 li
cp
314.896 126.538 mo
cp
324.796 126.538 mo
325.516 126.538 li
325.516 129.118 li
324.796 129.118 li
cp
325.516 126.538 mo
cp
335.416 126.538 mo
336.136 126.538 li
336.136 129.118 li
335.416 129.118 li
cp
f
gsave
16.9956 4.6781 mo
336.496 4.6781 li
336.496 127.258 li
16.9956 127.258 li
cp
eclp
16.8156 126.118 mo
18.5556 125.278 li
18.7956 125.218 19.0956 125.278 19.1556 125.518 cv
19.2756 125.758 19.1556 126.058 18.9156 126.178 cv
17.1756 126.958 li
16.9356 127.078 16.6956 126.958 16.5756 126.718 cv
16.4556 126.478 16.5756 126.238 16.8156 126.118 cv
cp
20.2956 124.498 mo
22.0356 123.718 li
22.2756 123.598 22.5756 123.718 22.6956 123.958 cv
22.7556 124.198 22.6956 124.438 22.4556 124.558 cv
20.6556 125.398 li
20.4156 125.458 20.1756 125.398 20.0556 125.158 cv
19.9356 124.918 20.0556 124.618 20.2956 124.498 cv
cp
23.7756 122.878 mo
25.5156 122.098 li
25.7556 121.978 26.0556 122.098 26.1756 122.338 cv
26.2956 122.578 26.1756 122.878 25.9356 122.998 cv
24.1956 123.778 li
23.9556 123.898 23.6556 123.778 23.5356 123.538 cv
23.4156 123.298 23.5356 122.998 23.7756 122.878 cv
cp
27.2556 121.318 mo
27.4356 121.258 li
27.4956 121.198 27.6156 121.198 27.7356 121.198 cv
29.4156 121.618 li
29.7156 121.678 29.8356 121.918 29.7756 122.158 cv
29.7156 122.458 29.4756 122.578 29.2356 122.518 cv
27.4956 122.158 li
27.7956 122.098 li
27.6756 122.158 li
27.4356 122.278 27.1356 122.158 27.0156 121.918 cv
26.8956 121.678 27.0156 121.438 27.2556 121.318 cv
cp
31.3356 122.038 mo
33.1956 122.458 li
33.4356 122.518 33.6156 122.818 33.5556 123.058 cv
33.4956 123.298 33.1956 123.478 32.9556 123.418 cv
31.0956 122.998 li
30.8556 122.938 30.6756 122.638 30.7356 122.398 cv
30.7956 122.158 31.0356 121.978 31.3356 122.038 cv
cp
35.0556 122.878 mo
36.9156 123.358 li
37.1556 123.418 37.3356 123.658 37.2756 123.898 cv
37.2156 124.198 36.9756 124.318 36.6756 124.258 cv
34.8156 123.838 li
34.5756 123.778 34.3956 123.538 34.4556 123.238 cv
34.5156 122.998 34.8156 122.818 35.0556 122.878 cv
cp
38.4756 123.478 mo
40.2156 122.698 li
40.4556 122.578 40.6956 122.698 40.8156 122.938 cv
40.9356 123.178 40.8156 123.478 40.5756 123.598 cv
38.8356 124.378 li
38.5956 124.498 38.3556 124.378 38.2356 124.138 cv
38.1156 123.898 38.2356 123.598 38.4756 123.478 cv
cp
41.9556 121.918 mo
43.6956 121.078 li
43.9356 120.958 44.1756 121.078 44.2956 121.318 cv
44.4156 121.558 44.2956 121.858 44.0556 121.978 cv
42.3156 122.758 li
42.0756 122.878 41.8356 122.758 41.7156 122.518 cv
41.5956 122.278 41.7156 121.978 41.9556 121.918 cv
cp
45.4356 120.298 mo
47.1756 119.458 li
47.4156 119.338 47.6556 119.458 47.7756 119.698 cv
47.8956 119.938 47.7756 120.238 47.5356 120.358 cv
45.7956 121.138 li
45.5556 121.258 45.3156 121.138 45.1956 120.898 cv
45.0756 120.658 45.1956 120.418 45.4356 120.298 cv
cp
49.0356 118.678 mo
50.8956 118.258 li
51.1356 118.198 51.3756 118.378 51.4356 118.618 cv
51.4956 118.858 51.3756 119.158 51.0756 119.218 cv
49.2156 119.638 li
48.9756 119.698 48.7356 119.518 48.6756 119.278 cv
48.6156 118.978 48.7356 118.738 49.0356 118.678 cv
cp
52.7556 117.838 mo
54.6156 117.418 li
54.9156 117.358 55.1556 117.538 55.2156 117.778 cv
55.2756 118.018 55.0956 118.318 54.8556 118.378 cv
52.9956 118.798 li
52.6956 118.858 52.4556 118.678 52.3956 118.438 cv
52.3356 118.138 52.5156 117.898 52.7556 117.838 cv
cp
56.5356 116.998 mo
58.3956 116.578 li
58.6356 116.518 58.8756 116.698 58.9356 116.938 cv
58.9956 117.178 58.8756 117.478 58.5756 117.478 cv
56.7156 117.958 li
56.4756 118.018 56.1756 117.838 56.1156 117.598 cv
56.1156 117.298 56.2356 117.058 56.5356 116.998 cv
cp
60.2556 116.158 mo
62.1156 115.738 li
62.3556 115.678 62.6556 115.798 62.7156 116.098 cv
62.7756 116.338 62.5956 116.578 62.3556 116.638 cv
60.4956 117.058 li
60.1956 117.118 59.9556 116.998 59.8956 116.698 cv
59.8356 116.458 60.0156 116.218 60.2556 116.158 cv
cp
63.9756 115.258 mo
65.8356 114.838 li
66.1356 114.778 66.3756 114.958 66.4356 115.198 cv
66.4956 115.438 66.3156 115.738 66.0756 115.798 cv
64.2156 116.218 li
63.9756 116.278 63.6756 116.098 63.6156 115.858 cv
63.5556 115.618 63.7356 115.318 63.9756 115.258 cv
cp
67.7556 114.418 mo
69.6156 113.998 li
69.8556 113.938 70.0956 114.058 70.1556 114.358 cv
70.2156 114.598 70.0956 114.838 69.7956 114.898 cv
67.9356 115.318 li
67.6956 115.378 67.4556 115.258 67.3956 114.958 cv
67.3356 114.718 67.4556 114.478 67.7556 114.418 cv
cp
71.2956 113.278 mo
73.0356 112.498 li
73.2756 112.378 73.5756 112.498 73.6956 112.738 cv
73.7556 112.978 73.6956 113.278 73.4556 113.338 cv
71.6556 114.178 li
71.4156 114.298 71.1756 114.178 71.0556 113.938 cv
70.9356 113.698 71.0556 113.398 71.2956 113.278 cv
cp
74.7756 111.718 mo
76.5156 110.878 li
76.7556 110.818 77.0556 110.878 77.1756 111.118 cv
77.2956 111.358 77.1756 111.658 76.9356 111.778 cv
75.1956 112.558 li
74.9556 112.678 74.6556 112.558 74.5356 112.318 cv
74.4156 112.078 74.5356 111.778 74.7756 111.718 cv
cp
78.2556 110.098 mo
79.9956 109.318 li
80.2356 109.198 80.5356 109.318 80.6556 109.558 cv
80.7756 109.798 80.6556 110.098 80.4156 110.158 cv
78.6756 110.998 li
78.4356 111.118 78.1356 110.998 78.0156 110.758 cv
77.9556 110.518 78.0156 110.218 78.2556 110.098 cv
cp
82.0956 110.038 mo
83.4756 111.298 li
83.6556 111.478 83.7156 111.778 83.5356 112.018 cv
83.3556 112.198 83.0556 112.198 82.8156 112.018 cv
81.4356 110.758 li
81.1956 110.578 81.1956 110.278 81.3756 110.038 cv
81.5556 109.858 81.8556 109.858 82.0956 110.038 cv
cp
84.9156 112.618 mo
86.2956 113.938 li
86.5356 114.118 86.5356 114.418 86.3556 114.598 cv
86.1756 114.778 85.8756 114.778 85.6956 114.598 cv
84.2556 113.338 li
84.0756 113.158 84.0156 112.858 84.1956 112.678 cv
84.3756 112.438 84.6756 112.438 84.9156 112.618 cv
cp
87.7356 115.198 mo
89.1756 116.518 li
89.3556 116.698 89.3556 116.998 89.1756 117.178 cv
88.9956 117.358 88.6956 117.418 88.5156 117.238 cv
87.0756 115.918 li
86.8956 115.738 86.8956 115.438 87.0756 115.258 cv
87.2556 115.018 87.5556 115.018 87.7356 115.198 cv
cp
90.5556 117.778 mo
91.6956 118.858 li
91.2156 118.798 li
91.5156 118.618 li
91.7556 118.498 92.0556 118.618 92.1756 118.858 cv
92.2356 119.098 92.1756 119.398 91.9356 119.518 cv
91.5756 119.638 li
91.3956 119.758 91.2156 119.698 91.0956 119.578 cv
89.8956 118.498 li
89.7156 118.318 89.7156 118.018 89.8956 117.838 cv
90.0756 117.658 90.3756 117.598 90.5556 117.778 cv
cp
93.2556 117.838 mo
94.9956 117.058 li
95.2356 116.938 95.5356 117.058 95.6556 117.298 cv
95.7756 117.538 95.6556 117.778 95.4156 117.898 cv
93.6756 118.678 li
93.4356 118.798 93.1356 118.738 93.0156 118.498 cv
92.8956 118.198 93.0156 117.958 93.2556 117.838 cv
cp
96.7356 116.218 mo
98.4756 115.438 li
98.7156 115.318 99.0156 115.438 99.1356 115.678 cv
99.2556 115.918 99.1356 116.218 98.8956 116.338 cv
97.1556 117.118 li
96.9156 117.238 96.6156 117.118 96.4956 116.878 cv
96.4356 116.638 96.4956 116.338 96.7356 116.218 cv
cp
100.276 114.658 mo
101.836 113.938 li
101.896 113.878 102.016 113.878 102.136 113.878 cv
102.316 113.938 li
102.556 113.998 102.736 114.238 102.676 114.538 cv
102.616 114.778 102.376 114.898 102.076 114.898 cv
101.896 114.838 li
102.196 114.778 li
100.636 115.498 li
100.396 115.618 100.096 115.498 100.036 115.258 cv
99.9156 115.018 100.036 114.718 100.276 114.658 cv
cp
104.176 114.358 mo
106.036 114.778 li
106.336 114.838 106.456 115.138 106.396 115.378 cv
106.336 115.618 106.096 115.798 105.856 115.738 cv
103.996 115.318 li
103.696 115.258 103.576 114.958 103.636 114.718 cv
103.696 114.478 103.936 114.298 104.176 114.358 cv
cp
107.896 115.258 mo
109.816 115.678 li
110.056 115.738 110.236 115.978 110.176 116.218 cv
110.116 116.518 109.816 116.638 109.576 116.578 cv
107.716 116.158 li
107.476 116.098 107.296 115.858 107.356 115.618 cv
107.416 115.318 107.656 115.198 107.896 115.258 cv
cp
111.676 116.098 mo
112.756 116.338 li
112.336 116.458 li
112.936 115.918 li
113.116 115.738 113.416 115.738 113.596 115.918 cv
113.776 116.158 113.776 116.458 113.536 116.638 cv
112.936 117.178 li
112.816 117.298 112.696 117.298 112.516 117.298 cv
111.436 117.058 li
111.196 116.998 111.016 116.698 111.076 116.458 cv
111.136 116.218 111.436 116.038 111.676 116.098 cv
cp
114.316 114.598 mo
115.756 113.338 li
115.936 113.158 116.236 113.158 116.416 113.338 cv
116.596 113.518 116.596 113.818 116.356 113.998 cv
114.976 115.318 li
114.796 115.498 114.496 115.498 114.316 115.318 cv
114.136 115.078 114.136 114.778 114.316 114.598 cv
cp
117.136 112.018 mo
118.576 110.698 li
118.756 110.518 119.056 110.518 119.236 110.758 cv
119.416 110.938 119.416 111.238 119.236 111.418 cv
117.796 112.738 li
117.616 112.918 117.316 112.858 117.136 112.678 cv
116.956 112.498 116.956 112.198 117.136 112.018 cv
cp
119.956 109.378 mo
121.396 108.118 li
121.576 107.938 121.876 107.938 122.056 108.118 cv
122.236 108.358 122.236 108.658 122.056 108.838 cv
120.616 110.098 li
120.436 110.278 120.136 110.278 119.956 110.098 cv
119.776 109.918 119.776 109.558 119.956 109.378 cv
cp
122.776 106.798 mo
122.956 106.678 li
122.956 106.678 123.016 106.618 123.076 106.618 cv
124.636 105.898 li
124.876 105.778 125.176 105.898 125.296 106.138 cv
125.356 106.378 125.296 106.618 125.056 106.738 cv
123.436 107.458 li
123.556 107.398 li
123.436 107.518 li
123.256 107.698 122.956 107.698 122.776 107.458 cv
122.596 107.278 122.596 106.978 122.776 106.798 cv
cp
126.376 105.058 mo
128.116 104.278 li
128.356 104.158 128.656 104.278 128.776 104.518 cv
128.896 104.758 128.776 105.058 128.536 105.178 cv
126.796 105.958 li
126.556 106.078 126.256 105.958 126.136 105.718 cv
126.016 105.478 126.136 105.178 126.376 105.058 cv
cp
129.856 103.498 mo
131.596 102.658 li
131.836 102.598 132.136 102.658 132.256 102.898 cv
132.376 103.138 132.256 103.438 132.016 103.558 cv
130.276 104.338 li
130.036 104.458 129.736 104.338 129.616 104.098 cv
129.496 103.858 129.616 103.618 129.856 103.498 cv
cp
133.336 101.878 mo
133.696 101.758 li
133.696 101.698 133.756 101.698 133.756 101.698 cv
135.316 101.338 li
135.556 101.278 135.796 101.458 135.856 101.698 cv
135.916 101.998 135.796 102.238 135.496 102.298 cv
133.996 102.658 li
134.056 102.598 li
133.756 102.778 li
133.516 102.838 133.216 102.778 133.156 102.538 cv
133.036 102.298 133.096 101.998 133.336 101.878 cv
cp
137.176 100.918 mo
139.036 100.498 li
139.276 100.438 139.576 100.558 139.636 100.858 cv
139.696 101.098 139.516 101.338 139.276 101.398 cv
137.416 101.878 li
137.116 101.938 136.876 101.758 136.816 101.518 cv
136.756 101.218 136.936 100.978 137.176 100.918 cv
cp
140.896 100.078 mo
142.756 99.5981 li
143.056 99.5381 143.296 99.7181 143.356 99.9581 cv
143.416 100.258 143.236 100.498 142.996 100.558 cv
141.136 100.978 li
140.896 101.038 140.596 100.858 140.536 100.618 cv
140.476 100.378 140.656 100.138 140.896 100.078 cv
cp
144.556 99.1782 mo
146.296 98.3381 li
146.536 98.2781 146.836 98.3381 146.956 98.5781 cv
147.016 98.8181 146.956 99.1181 146.716 99.2382 cv
144.976 100.018 li
144.676 100.138 144.436 100.018 144.316 99.7781 cv
144.196 99.5381 144.316 99.2982 144.556 99.1782 cv
cp
148.036 97.5581 mo
149.776 96.7781 li
150.016 96.6581 150.316 96.7781 150.436 97.0181 cv
150.556 97.2581 150.436 97.5581 150.196 97.6181 cv
148.456 98.4581 li
148.216 98.5781 147.916 98.4581 147.796 98.2181 cv
147.676 97.9781 147.796 97.6782 148.036 97.5581 cv
cp
151.516 95.9981 mo
153.256 95.1581 li
153.496 95.0381 153.796 95.1581 153.916 95.3981 cv
154.036 95.6381 153.916 95.9381 153.676 96.0581 cv
151.936 96.8381 li
151.696 96.9581 151.396 96.8381 151.276 96.5981 cv
151.156 96.3582 151.276 96.0581 151.516 95.9981 cv
cp
154.936 94.3781 mo
156.496 93.2982 li
156.736 93.1782 157.036 93.2382 157.216 93.4182 cv
157.336 93.6581 157.276 93.9581 157.096 94.0781 cv
155.476 95.1581 li
155.236 95.3381 154.936 95.2781 154.816 95.0381 cv
154.696 94.8582 154.696 94.5581 154.936 94.3781 cv
cp
158.116 92.2181 mo
159.676 91.1381 li
159.916 90.9581 160.216 91.0181 160.336 91.2581 cv
160.516 91.4981 160.456 91.7982 160.216 91.9182 cv
158.656 92.9981 li
158.416 93.1782 158.116 93.1181 157.996 92.8781 cv
157.816 92.6981 157.876 92.3981 158.116 92.2181 cv
cp
161.296 90.0581 mo
162.856 88.9781 li
163.096 88.7982 163.396 88.8582 163.516 89.0981 cv
163.696 89.3381 163.636 89.5781 163.396 89.7581 cv
161.836 90.8381 li
161.596 91.0181 161.296 90.9581 161.176 90.7181 cv
160.996 90.4781 161.056 90.1782 161.296 90.0581 cv
cp
164.416 87.8981 mo
165.496 87.1181 li
165.616 87.0581 165.796 87.0581 165.916 87.0581 cv
166.516 87.1782 li
166.756 87.2382 166.936 87.5381 166.876 87.7781 cv
166.816 88.0181 166.516 88.1981 166.276 88.1381 cv
165.676 88.0181 li
166.036 87.9581 li
164.956 88.6782 li
164.776 88.7982 164.476 88.7382 164.296 88.5581 cv
164.176 88.3181 164.236 88.0181 164.416 87.8981 cv
cp
168.376 87.6581 mo
170.236 88.0781 li
170.476 88.1381 170.656 88.3781 170.596 88.6782 cv
170.536 88.9182 170.296 89.0381 169.996 89.0381 cv
168.136 88.5581 li
167.896 88.4981 167.716 88.2581 167.776 88.0181 cv
167.836 87.7181 168.136 87.5981 168.376 87.6581 cv
cp
172.096 88.4981 mo
173.956 88.9182 li
174.256 88.9781 174.376 89.2781 174.316 89.5181 cv
174.256 89.7581 174.016 89.9381 173.776 89.8781 cv
171.916 89.4581 li
171.616 89.3981 171.496 89.0981 171.556 88.8582 cv
171.616 88.6181 171.856 88.4381 172.096 88.4981 cv
cp
175.876 89.3981 mo
176.536 89.5181 li
176.596 89.5181 176.656 89.5781 176.716 89.5781 cv
177.676 90.2982 li
177.916 90.4781 177.976 90.7781 177.796 90.9581 cv
177.676 91.1981 177.376 91.2581 177.136 91.0781 cv
176.116 90.4182 li
176.296 90.4781 li
175.636 90.2982 li
175.396 90.2382 175.216 89.9981 175.276 89.7581 cv
175.336 89.4581 175.576 89.3381 175.876 89.3981 cv
cp
179.296 91.3781 mo
180.856 92.4581 li
181.096 92.6381 181.156 92.9381 180.976 93.1181 cv
180.856 93.3582 180.556 93.4182 180.316 93.2982 cv
178.756 92.1581 li
178.516 92.0381 178.456 91.7382 178.636 91.4981 cv
178.756 91.3181 179.056 91.2581 179.296 91.3781 cv
cp
182.416 93.5381 mo
184.036 94.6782 li
184.216 94.7982 184.276 95.0981 184.156 95.3381 cv
183.976 95.5181 183.676 95.5781 183.496 95.4581 cv
181.876 94.3781 li
181.696 94.1981 181.636 93.8981 181.756 93.7181 cv
181.936 93.4781 182.236 93.4182 182.416 93.5381 cv
cp
185.596 95.7581 mo
187.156 96.8381 li
187.396 96.9581 187.456 97.2581 187.336 97.4981 cv
187.156 97.7382 186.856 97.7982 186.616 97.6181 cv
185.056 96.5381 li
184.816 96.3582 184.756 96.0581 184.936 95.8781 cv
185.116 95.6381 185.356 95.5781 185.596 95.7581 cv
cp
187.696 95.5781 mo
188.836 94.0181 li
188.956 93.8381 189.256 93.7781 189.496 93.9581 cv
189.676 94.0781 189.736 94.3781 189.616 94.6181 cv
188.476 96.1782 li
188.296 96.3582 187.996 96.4182 187.816 96.2982 cv
187.576 96.1181 187.516 95.8181 187.696 95.5781 cv
cp
189.916 92.5181 mo
191.056 90.9581 li
191.236 90.7181 191.536 90.6581 191.716 90.8381 cv
191.956 90.9581 192.016 91.2581 191.836 91.4981 cv
190.696 93.0581 li
190.576 93.2982 190.276 93.2982 190.036 93.1782 cv
189.856 92.9981 189.796 92.6981 189.916 92.5181 cv
cp
192.196 89.3981 mo
193.336 87.8381 li
193.456 87.5981 193.756 87.5381 193.996 87.7181 cv
194.236 87.8981 194.236 88.1981 194.116 88.3781 cv
192.976 89.9381 li
192.796 90.1782 192.496 90.2382 192.316 90.0581 cv
192.076 89.8781 192.016 89.5781 192.196 89.3981 cv
cp
194.476 86.2781 mo
195.556 84.7181 li
195.736 84.4781 196.036 84.4781 196.276 84.5981 cv
196.456 84.7781 196.516 85.0781 196.336 85.2581 cv
195.256 86.8181 li
195.076 87.0581 194.776 87.1181 194.536 86.9381 cv
194.356 86.8181 194.296 86.5181 194.476 86.2781 cv
cp
196.696 83.1581 mo
197.236 82.3781 li
197.356 82.3181 197.416 82.2581 197.536 82.1981 cv
198.496 82.0181 li
198.736 81.9581 198.976 82.0781 199.036 82.3781 cv
199.096 82.6181 198.976 82.8582 198.676 82.9182 cv
197.776 83.1581 li
198.016 82.9781 li
197.476 83.7581 li
197.356 83.9381 197.056 83.9981 196.816 83.8181 cv
196.576 83.6981 196.576 83.3981 196.696 83.1581 cv
cp
200.356 81.5981 mo
202.216 81.1782 li
202.516 81.1181 202.756 81.2382 202.816 81.5381 cv
202.876 81.7781 202.696 82.0181 202.456 82.0781 cv
200.596 82.4981 li
200.296 82.5581 200.056 82.3781 199.996 82.1381 cv
199.936 81.8981 200.116 81.6581 200.356 81.5981 cv
cp
204.136 80.6981 mo
205.996 80.2781 li
206.236 80.2181 206.476 80.3981 206.536 80.6381 cv
206.596 80.9381 206.476 81.1782 206.176 81.2382 cv
204.316 81.6581 li
204.076 81.7181 203.776 81.5381 203.716 81.2982 cv
203.716 81.0581 203.836 80.7581 204.136 80.6981 cv
cp
207.856 79.8582 mo
208.156 79.7982 li
208.096 79.8582 li
209.536 79.1981 li
209.776 79.0781 210.076 79.1381 210.136 79.3781 cv
210.256 79.6181 210.136 79.9182 209.896 80.0381 cv
208.456 80.6981 li
208.396 80.7581 li
208.036 80.8181 li
207.796 80.8781 207.556 80.6981 207.496 80.4581 cv
207.436 80.2181 207.616 79.9182 207.856 79.8582 cv
cp
211.276 78.3582 mo
213.016 77.5781 li
213.256 77.4581 213.556 77.5781 213.616 77.8181 cv
213.736 78.0581 213.676 78.2982 213.436 78.4182 cv
211.696 79.2581 li
211.456 79.3181 211.156 79.2581 211.036 79.0181 cv
210.916 78.7781 211.036 78.4781 211.276 78.3582 cv
cp
214.756 76.7382 mo
216.496 75.9581 li
216.736 75.8381 217.036 75.9581 217.156 76.1981 cv
217.216 76.4381 217.156 76.6782 216.916 76.7982 cv
215.176 77.6381 li
214.936 77.7581 214.636 77.6381 214.516 77.3981 cv
214.396 77.1581 214.516 76.8582 214.756 76.7382 cv
cp
218.236 75.1181 mo
218.716 74.9381 li
218.836 74.8781 218.956 74.8781 219.076 74.9381 cv
219.196 74.9981 219.316 75.0581 219.376 75.1782 cv
219.796 76.5581 li
219.856 76.7982 219.736 77.0381 219.496 77.1581 cv
219.256 77.2181 218.956 77.0981 218.896 76.8582 cv
218.416 75.5381 li
219.076 75.7781 li
218.656 76.0181 li
218.416 76.1381 218.116 76.0181 217.996 75.7781 cv
217.876 75.5381 217.996 75.2382 218.236 75.1181 cv
cp
220.396 78.3582 mo
220.996 80.1581 li
221.116 80.4581 220.996 80.6981 220.696 80.8181 cv
220.456 80.8781 220.216 80.7581 220.096 80.5181 cv
219.496 78.6581 li
219.436 78.4182 219.556 78.1181 219.796 78.0581 cv
220.036 77.9981 220.336 78.1181 220.396 78.3582 cv
cp
221.656 82.0181 mo
222.256 83.8181 li
222.316 84.0581 222.196 84.3582 221.956 84.4182 cv
221.656 84.5381 221.416 84.3582 221.356 84.1181 cv
220.696 82.3181 li
220.636 82.0781 220.756 81.7781 220.996 81.7181 cv
221.296 81.5981 221.536 81.7781 221.656 82.0181 cv
cp
222.856 85.6181 mo
223.456 87.4781 li
223.516 87.7181 223.396 88.0181 223.156 88.0781 cv
222.916 88.1381 222.616 88.0181 222.556 87.7781 cv
221.956 85.9781 li
221.836 85.6782 222.016 85.4381 222.256 85.3181 cv
222.496 85.2581 222.736 85.3781 222.856 85.6181 cv
cp
224.056 89.2781 mo
224.656 91.0781 li
224.776 91.3781 224.656 91.6181 224.356 91.7382 cv
224.116 91.7982 223.876 91.6782 223.756 91.4381 cv
223.156 89.5781 li
223.096 89.3381 223.216 89.0381 223.456 88.9781 cv
223.696 88.9182 223.996 89.0381 224.056 89.2781 cv
cp
225.316 92.9381 mo
225.916 94.7382 li
225.976 94.9781 225.856 95.2781 225.616 95.3381 cv
225.376 95.4581 225.076 95.2781 225.016 95.0381 cv
224.356 93.2382 li
224.296 92.9981 224.416 92.6981 224.656 92.6381 cv
224.956 92.5181 225.196 92.6981 225.316 92.9381 cv
cp
226.516 96.5981 mo
227.116 98.3981 li
227.176 98.6381 227.056 98.9381 226.816 98.9981 cv
226.576 99.0581 226.276 98.9381 226.216 98.6981 cv
225.616 96.8981 li
225.496 96.5981 225.676 96.3582 225.916 96.2382 cv
226.156 96.1782 226.456 96.2982 226.516 96.5981 cv
cp
227.716 100.198 mo
228.316 102.058 li
228.436 102.298 228.316 102.538 228.016 102.658 cv
227.776 102.718 227.536 102.598 227.416 102.358 cv
226.816 100.498 li
226.756 100.258 226.876 100.018 227.116 99.8981 cv
227.356 99.8381 227.656 99.9581 227.716 100.198 cv
cp
228.976 103.858 mo
229.576 105.658 li
229.636 105.898 229.516 106.198 229.276 106.258 cv
229.036 106.378 228.736 106.198 228.676 105.958 cv
228.016 104.158 li
227.956 103.918 228.076 103.618 228.316 103.558 cv
228.616 103.438 228.856 103.618 228.976 103.858 cv
cp
229.636 106.258 mo
231.076 104.938 li
231.256 104.758 231.556 104.758 231.736 104.998 cv
231.916 105.178 231.916 105.478 231.736 105.658 cv
230.296 106.978 li
230.116 107.158 229.816 107.098 229.636 106.918 cv
229.456 106.738 229.456 106.438 229.636 106.258 cv
cp
232.516 103.678 mo
233.896 102.358 li
234.136 102.178 234.436 102.178 234.616 102.418 cv
234.796 102.598 234.736 102.898 234.556 103.078 cv
233.116 104.338 li
232.936 104.518 232.636 104.518 232.456 104.338 cv
232.276 104.158 232.276 103.858 232.516 103.678 cv
cp
235.336 101.038 mo
236.716 99.7781 li
236.956 99.5981 237.256 99.5981 237.436 99.7781 cv
237.616 100.018 237.616 100.318 237.376 100.498 cv
235.996 101.758 li
235.756 101.938 235.456 101.938 235.276 101.758 cv
235.096 101.518 235.156 101.218 235.336 101.038 cv
cp
238.156 98.4581 mo
239.596 97.1981 li
239.776 97.0181 240.076 97.0181 240.256 97.1981 cv
240.436 97.3781 240.436 97.6782 240.196 97.8582 cv
238.816 99.1782 li
238.636 99.3582 238.336 99.3582 238.156 99.1782 cv
237.976 98.9381 237.976 98.6381 238.156 98.4581 cv
cp
241.816 97.1981 mo
243.676 97.6181 li
243.916 97.6782 244.096 97.9182 244.036 98.2181 cv
243.976 98.4581 243.736 98.6381 243.436 98.5781 cv
241.576 98.1581 li
241.336 98.0981 241.156 97.7982 241.216 97.5581 cv
241.276 97.3181 241.516 97.1381 241.816 97.1981 cv
cp
245.536 98.0381 mo
247.396 98.4581 li
247.696 98.5181 247.816 98.7581 247.756 99.0581 cv
247.756 99.2982 247.456 99.4781 247.216 99.4182 cv
245.356 98.9981 li
245.056 98.9381 244.936 98.6981 244.996 98.3981 cv
245.056 98.1581 245.296 97.9781 245.536 98.0381 cv
cp
249.316 98.8781 mo
250.876 99.2382 li
250.876 99.2382 250.936 99.2382 250.936 99.2982 cv
251.236 99.4182 li
251.476 99.5381 251.596 99.8381 251.476 100.078 cv
251.356 100.318 251.056 100.378 250.816 100.258 cv
250.576 100.138 li
250.636 100.198 li
249.076 99.8381 li
248.836 99.7781 248.656 99.5381 248.716 99.2382 cv
248.776 98.9981 249.016 98.8181 249.316 98.8781 cv
cp
252.976 100.198 mo
254.716 101.038 li
254.956 101.158 255.076 101.398 254.956 101.638 cv
254.836 101.878 254.596 101.998 254.356 101.878 cv
252.556 101.098 li
252.316 100.978 252.256 100.678 252.376 100.438 cv
252.436 100.198 252.736 100.078 252.976 100.198 cv
cp
256.456 101.818 mo
258.196 102.598 li
258.436 102.718 258.556 103.018 258.436 103.258 cv
258.316 103.498 258.076 103.618 257.836 103.498 cv
256.096 102.718 li
255.856 102.598 255.736 102.298 255.856 102.058 cv
255.976 101.818 256.216 101.698 256.456 101.818 cv
cp
259.936 103.438 mo
261.616 104.218 li
261.136 104.278 li
261.136 104.218 li
261.376 104.038 261.676 104.038 261.856 104.278 cv
262.036 104.458 262.036 104.758 261.796 104.938 cv
261.736 104.998 li
261.616 105.118 261.436 105.178 261.256 105.058 cv
259.576 104.278 li
259.336 104.218 259.216 103.918 259.336 103.678 cv
259.456 103.438 259.696 103.318 259.936 103.438 cv
cp
262.576 102.958 mo
264.016 101.638 li
264.196 101.458 264.496 101.458 264.676 101.638 cv
264.856 101.878 264.856 102.178 264.616 102.358 cv
263.236 103.618 li
263.056 103.798 262.756 103.798 262.576 103.618 cv
262.396 103.438 262.396 103.138 262.576 102.958 cv
cp
265.396 100.318 mo
266.836 99.0581 li
267.016 98.8781 267.316 98.8781 267.496 99.0581 cv
267.676 99.2382 267.676 99.5381 267.436 99.7181 cv
266.056 101.038 li
265.876 101.218 265.576 101.218 265.396 100.978 cv
265.216 100.798 265.216 100.498 265.396 100.318 cv
cp
268.216 97.7382 mo
269.656 96.4182 li
269.836 96.2382 270.136 96.2382 270.316 96.4781 cv
270.496 96.6581 270.496 96.9581 270.316 97.1381 cv
268.876 98.4581 li
268.696 98.6381 268.396 98.5781 268.216 98.3981 cv
268.036 98.2181 268.036 97.9182 268.216 97.7382 cv
cp
271.036 95.0981 mo
271.756 94.4981 li
271.696 94.5581 li
272.236 93.7781 li
272.416 93.5381 272.716 93.4781 272.896 93.6581 cv
273.136 93.8381 273.196 94.1381 273.016 94.3181 cv
272.416 95.1581 li
272.416 95.1581 272.416 95.1581 272.356 95.2181 cv
271.696 95.8181 li
271.516 95.9981 271.216 95.9981 271.036 95.8181 cv
270.856 95.6381 270.856 95.2781 271.036 95.0981 cv
cp
273.376 92.2181 mo
274.516 90.6581 li
274.696 90.4182 274.996 90.4182 275.176 90.5381 cv
275.416 90.7181 275.476 91.0181 275.296 91.1981 cv
274.156 92.7581 li
273.976 92.9981 273.676 93.0581 273.496 92.8781 cv
273.256 92.6981 273.256 92.3981 273.376 92.2181 cv
cp
275.656 89.0981 mo
276.796 87.5381 li
276.916 87.3582 277.216 87.2982 277.456 87.4781 cv
277.636 87.5981 277.696 87.8981 277.576 88.1381 cv
276.436 89.6981 li
276.256 89.8781 275.956 89.9381 275.776 89.7581 cv
275.536 89.6381 275.476 89.3381 275.656 89.0981 cv
cp
277.936 85.9781 mo
279.016 84.4781 li
279.196 84.2382 279.496 84.1782 279.736 84.3582 cv
279.916 84.4781 279.976 84.7781 279.796 85.0181 cv
278.656 86.5781 li
278.536 86.7581 278.236 86.8181 277.996 86.6981 cv
277.816 86.5181 277.756 86.2181 277.936 85.9781 cv
cp
280.156 82.9182 mo
281.296 81.3582 li
281.476 81.1181 281.776 81.1181 281.956 81.2382 cv
282.196 81.4182 282.256 81.7181 282.076 81.8981 cv
280.936 83.4581 li
280.816 83.6981 280.516 83.7581 280.276 83.5781 cv
280.036 83.3981 280.036 83.0981 280.156 82.9182 cv
cp
282.376 79.7982 mo
283.396 78.1782 li
283.576 77.9381 283.816 77.8781 284.056 78.0581 cv
284.296 78.1782 284.356 78.4781 284.236 78.7181 cv
283.216 80.3381 li
283.096 80.5781 282.796 80.6381 282.556 80.4581 cv
282.316 80.3381 282.256 80.0381 282.376 79.7982 cv
cp
284.416 76.5581 mo
285.436 74.9381 li
285.556 74.6981 285.856 74.6381 286.096 74.7581 cv
286.336 74.9381 286.396 75.1782 286.276 75.4182 cv
285.256 77.0381 li
285.076 77.2781 284.776 77.3381 284.596 77.2181 cv
284.356 77.0981 284.296 76.7982 284.416 76.5581 cv
cp
286.456 73.3181 mo
287.476 71.6381 li
287.596 71.4581 287.896 71.3381 288.136 71.5181 cv
288.316 71.6381 288.436 71.9381 288.256 72.1782 cv
287.236 73.7982 li
287.116 74.0381 286.816 74.0981 286.576 73.9781 cv
286.396 73.7982 286.336 73.4981 286.456 73.3181 cv
cp
288.496 70.0181 mo
289.456 68.3981 li
289.636 68.1581 289.936 68.0981 290.116 68.2181 cv
290.356 68.3981 290.416 68.6981 290.296 68.8781 cv
289.276 70.5581 li
289.156 70.7382 288.856 70.8582 288.616 70.6782 cv
288.376 70.5581 288.316 70.2581 288.496 70.0181 cv
cp
290.476 66.7781 mo
291.496 65.1581 li
291.676 64.9182 291.976 64.8582 292.156 64.9781 cv
292.396 65.0981 292.456 65.3981 292.336 65.6381 cv
291.316 67.2581 li
291.196 67.4981 290.896 67.5581 290.656 67.4381 cv
290.416 67.3181 290.356 67.0181 290.476 66.7781 cv
cp
292.516 63.4781 mo
292.876 62.9381 li
292.876 62.8781 292.936 62.8781 292.936 62.8781 cv
293.716 61.9182 li
293.896 61.7382 294.196 61.7382 294.436 61.8582 cv
294.616 62.0381 294.616 62.3381 294.496 62.5781 cv
293.656 63.4781 li
293.716 63.4182 li
293.356 64.0181 li
293.176 64.2581 292.876 64.3181 292.696 64.1381 cv
292.456 64.0181 292.396 63.7181 292.516 63.4781 cv
cp
294.976 60.4781 mo
296.236 59.0381 li
296.416 58.8582 296.716 58.7982 296.956 58.9781 cv
297.136 59.1581 297.136 59.4581 297.016 59.6981 cv
295.756 61.1381 li
295.576 61.3181 295.276 61.3181 295.036 61.1381 cv
294.856 60.9581 294.856 60.6581 294.976 60.4781 cv
cp
297.556 57.5981 mo
298.816 56.1581 li
298.936 55.9182 299.296 55.9182 299.476 56.0981 cv
299.656 56.2781 299.716 56.5781 299.536 56.7581 cv
298.276 58.1981 li
298.096 58.4381 297.796 58.4381 297.556 58.2581 cv
297.376 58.0781 297.376 57.7781 297.556 57.5981 cv
cp
300.076 54.7181 mo
301.336 53.2781 li
301.516 53.0381 301.816 53.0381 301.996 53.2181 cv
302.176 53.3981 302.236 53.6981 302.056 53.8781 cv
300.796 55.3181 li
300.616 55.4981 300.316 55.5581 300.076 55.3781 cv
299.896 55.1981 299.896 54.8981 300.076 54.7181 cv
cp
302.596 51.7781 mo
303.556 50.6981 li
303.616 50.5781 303.736 50.5781 303.796 50.5181 cv
304.216 50.4581 li
304.456 50.3981 304.756 50.5181 304.816 50.8181 cv
304.876 51.0581 304.696 51.2982 304.456 51.3582 cv
304.036 51.4781 li
304.276 51.2982 li
303.316 52.4381 li
303.136 52.6181 302.836 52.6781 302.596 52.4981 cv
302.416 52.3181 302.416 52.0181 302.596 51.7781 cv
cp
306.076 49.9781 mo
307.996 49.5581 li
308.236 49.4981 308.476 49.6781 308.536 49.9182 cv
308.596 50.1581 308.416 50.4581 308.176 50.5181 cv
306.316 50.9381 li
306.076 50.9981 305.776 50.8181 305.716 50.5781 cv
305.656 50.3381 305.836 50.0381 306.076 49.9781 cv
cp
309.856 49.1381 mo
311.716 48.7181 li
311.956 48.6581 312.196 48.7781 312.256 49.0781 cv
312.316 49.3181 312.196 49.5581 311.956 49.6181 cv
310.036 50.0381 li
309.796 50.0981 309.556 49.9781 309.496 49.6781 cv
309.436 49.4381 309.556 49.1981 309.856 49.1381 cv
cp
313.576 48.2382 mo
314.416 48.0581 li
314.116 48.2982 li
314.656 47.3981 li
314.836 47.1581 315.136 47.0981 315.316 47.2181 cv
315.556 47.3981 315.616 47.6981 315.496 47.8781 cv
314.956 48.7781 li
314.896 48.8981 314.776 48.9581 314.656 49.0181 cv
313.816 49.1981 li
313.516 49.2581 313.276 49.0781 313.216 48.8381 cv
313.156 48.5981 313.336 48.2982 313.576 48.2382 cv
cp
315.676 45.7781 mo
316.696 44.1581 li
316.876 43.9182 317.176 43.8582 317.356 43.9781 cv
317.596 44.0981 317.656 44.3981 317.536 44.6381 cv
316.516 46.2581 li
316.396 46.4981 316.096 46.5581 315.856 46.4381 cv
315.616 46.2581 315.556 45.9581 315.676 45.7781 cv
cp
317.716 42.4781 mo
318.736 40.8582 li
318.856 40.6181 319.156 40.5581 319.396 40.7382 cv
319.636 40.8582 319.696 41.1581 319.576 41.3981 cv
318.556 43.0181 li
318.376 43.2581 318.136 43.3181 317.896 43.1381 cv
317.656 43.0181 317.596 42.7181 317.716 42.4781 cv
cp
319.756 39.2382 mo
320.776 37.6181 li
320.896 37.3781 321.196 37.3181 321.436 37.4381 cv
321.676 37.6181 321.736 37.9182 321.616 38.0981 cv
320.596 39.7781 li
320.416 39.9581 320.116 40.0181 319.936 39.8981 cv
319.696 39.7781 319.636 39.4781 319.756 39.2382 cv
cp
321.796 35.9981 mo
322.816 34.3781 li
322.936 34.1381 323.236 34.0781 323.476 34.1981 cv
323.716 34.3181 323.776 34.6181 323.596 34.8582 cv
322.636 36.4781 li
322.456 36.7181 322.156 36.7781 321.916 36.6581 cv
321.736 36.4781 321.676 36.2382 321.796 35.9981 cv
cp
323.836 32.6981 mo
324.736 31.2581 li
324.856 31.0781 li
325.036 30.8381 325.336 30.8381 325.516 30.9581 cv
325.756 31.1381 325.816 31.4381 325.636 31.6181 cv
325.576 31.7382 li
324.616 33.2382 li
324.496 33.4781 324.196 33.5381 323.956 33.3582 cv
323.776 33.2382 323.656 32.9381 323.836 32.6981 cv
cp
325.996 29.5181 mo
327.136 27.9581 li
327.256 27.7781 327.556 27.7181 327.796 27.8381 cv
328.036 28.0181 328.036 28.3181 327.916 28.5581 cv
326.776 30.0581 li
326.596 30.2982 326.296 30.3582 326.116 30.1781 cv
325.876 30.0581 325.816 29.7581 325.996 29.5181 cv
cp
328.276 26.3981 mo
329.356 24.8381 li
329.536 24.6581 329.836 24.5981 330.076 24.7781 cv
330.256 24.8981 330.316 25.1981 330.136 25.4381 cv
329.056 26.9981 li
328.876 27.1781 328.576 27.2382 328.336 27.0581 cv
328.156 26.9381 328.096 26.6381 328.276 26.3981 cv
cp
330.496 23.2781 mo
331.636 21.7781 li
331.816 21.5381 332.116 21.4781 332.296 21.6581 cv
332.536 21.7781 332.536 22.0781 332.416 22.3181 cv
331.276 23.8781 li
331.096 24.0581 330.796 24.1181 330.616 23.9981 cv
330.376 23.8181 330.376 23.5181 330.496 23.2781 cv
cp
332.776 20.2181 mo
333.916 18.6581 li
334.036 18.4182 334.336 18.3582 334.576 18.5381 cv
334.756 18.7181 334.816 19.0181 334.636 19.1981 cv
333.556 20.7581 li
333.376 20.9981 333.076 20.9981 332.836 20.8781 cv
332.656 20.6981 332.596 20.3981 332.776 20.2181 cv
cp
334.996 17.0981 mo
335.356 16.5581 li
335.536 16.3781 335.836 16.3181 336.076 16.4381 cv
336.256 16.6181 336.316 16.9182 336.136 17.1581 cv
335.776 17.6381 li
335.656 17.8781 335.356 17.9381 335.116 17.7581 cv
334.876 17.5781 334.876 17.2781 334.996 17.0981 cv
0 0 0 1 cmyk
f
17.2956 87.1181 mo
27.9156 94.4381 li
27.4956 94.3781 li
38.1156 91.9781 li
48.7356 89.5181 li
48.6756 89.5781 li
59.2956 84.7181 li
59.3556 84.6581 59.4156 84.6581 59.5356 84.6581 cv
70.1556 85.8582 li
69.9156 85.8582 li
80.5956 82.1981 li
91.2756 79.0181 li
91.4556 78.9581 91.6956 79.0781 91.8156 79.2581 cv
102.436 96.1181 li
101.776 95.9381 li
112.396 90.5381 li
123.076 85.9182 li
123.136 85.8582 123.256 85.8582 123.376 85.8582 cv
133.996 88.7982 li
144.616 91.9781 li
144.436 91.9781 li
155.056 90.2382 li
155.116 90.2382 155.176 90.2382 155.176 90.2382 cv
165.856 92.2181 li
165.916 92.2181 165.916 92.2181 165.976 92.2781 cv
176.596 96.4182 li
176.056 96.4781 li
186.676 85.2581 li
186.796 85.1981 186.856 85.1381 186.976 85.1381 cv
197.596 84.4182 li
197.416 84.4781 li
208.036 79.3181 li
208.156 79.2581 208.276 79.2581 208.396 79.2581 cv
219.016 81.5981 li
218.596 81.7181 li
229.216 72.5981 li
229.216 72.5381 229.276 72.5381 229.336 72.5381 cv
239.956 67.6181 li
239.956 67.5581 240.016 67.5581 240.016 67.5581 cv
250.636 65.1581 li
250.756 65.1581 250.816 65.1581 250.936 65.1581 cv
261.616 68.8181 li
261.616 68.8781 261.616 68.8781 261.676 68.8781 cv
272.296 74.9381 li
272.356 74.9981 li
282.976 85.0181 li
282.616 84.8981 li
293.236 83.3981 li
303.856 81.7181 li
314.416 79.4981 li
314.596 79.4981 314.776 79.4981 314.896 79.6181 cv
325.516 90.1181 li
325.096 89.9981 li
335.716 89.0381 li
336.016 89.0381 336.256 89.2181 336.256 89.4581 cv
336.256 89.7581 336.076 89.9981 335.836 89.9981 cv
325.216 90.9581 li
325.036 90.9581 324.916 90.8981 324.796 90.8381 cv
314.176 80.3381 li
314.656 80.4581 li
303.976 82.6782 li
293.356 84.3582 li
282.736 85.8582 li
282.616 85.8582 282.436 85.7982 282.316 85.7382 cv
271.696 75.7181 li
271.816 75.7781 li
261.196 69.7181 li
261.256 69.7781 li
250.576 66.1181 li
250.876 66.1181 li
240.256 68.5181 li
240.316 68.4581 li
229.696 73.3781 li
229.816 73.3181 li
219.196 82.4381 li
219.076 82.5581 218.956 82.5581 218.776 82.5581 cv
208.156 80.2181 li
208.456 80.1581 li
197.836 85.3181 li
197.836 85.3781 197.776 85.3781 197.716 85.3781 cv
187.096 86.0981 li
187.396 85.9182 li
176.776 97.1381 li
176.656 97.3181 176.416 97.3781 176.236 97.2581 cv
165.616 93.1181 li
165.736 93.1782 li
155.056 91.1981 li
155.176 91.1981 li
144.556 92.9381 li
144.496 92.9381 144.436 92.9381 144.376 92.9381 cv
133.756 89.7581 li
123.136 86.8181 li
123.436 86.7581 li
112.876 91.3781 li
102.256 96.7781 li
102.016 96.8981 101.716 96.8381 101.596 96.5981 cv
90.9756 79.7382 li
91.5156 79.9781 li
80.9556 83.1581 li
70.2756 86.8181 li
70.1556 86.8181 70.0956 86.8181 70.0356 86.8181 cv
59.4156 85.6181 li
59.6556 85.5581 li
49.0356 90.4182 li
48.9756 90.4781 li
38.3556 92.9381 li
27.7356 95.3381 li
27.6156 95.3381 27.4356 95.3381 27.3156 95.2781 cv
16.6956 87.9581 li
16.5156 87.7781 16.4556 87.4781 16.5756 87.2382 cv
16.7556 87.0581 17.0556 86.9981 17.2956 87.1181 cv
.190097 .83154 .718898 .0656443 cmyk
f
grestore
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: RAMBAA+Calibri Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin
18 dict begin
/CIDFontName /RAMBAA+Calibri def
/PaintType 0 def
/FontType 42 def
/CIDFontType 2 def
/GDBytes 2 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-4.023 -2.5 9.922 8.211] def
/CIDCount 6442 def
/CDevProc {pop pop pop pop pop 0 -1 7 index 2 div .88}bind def
/CharStrings 1 dict dup begin /.notdef 0 def end def
/Encoding 1 array dup 0 /.notdef put readonly def
/CIDMap [
<0000000100020003000400050006000700080009000a000b000c000d000e
000f0010001100120013001400150016001700180019001a001b001c001d
001e001f0020002100220023002400250026002700280029002a002b002c
002d002e002f0030003100320033003400350036003700380039003a003b
003c003d003e003f0040004100420043004400450046004700480049004a
004b004c004d004e004f0050005100520053005400550056005700580059
005a005b005c005d005e005f006000610062006300640065006600670068
0069006a006b006c006d006e006f00700071007200730074007500760077
00780079007a007b007c007d007e007f0080008100820083008400850086
008700880089008a008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f00a000a100a200a300a4
00a500a600a700a800a900aa00ab00ac00ad00ae00af00b000b100b200b3
00b400b500b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c2
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00d000d1
00d200d300d400d500d600d700d800d900da00db00dc00dd00de00df00e0
00e100e200e300e400e500e600e700e800e900ea00eb00ec00ed00ee00ef
00f000f100f200f300f400f500f600f700f800f900fa00fb00fc00fd00fe
00ff0100010101020103010401050106010701080109010a010b010c010d
010e010f0110011101120113011401150116011701180119011a011b011c
011d011e011f0120012101220123012401250126012701280129012a012b
012c012d012e012f0130013101320133013401350136013701380139013a
013b013c013d013e013f0140014101420143014401450146014701480149
014a014b014c014d014e014f015001510152015301540155015601570158
0159015a015b015c015d015e015f01600161016201630164016501660167
01680169016a016b016c016d016e016f0170017101720173017401750176
017701780179017a017b017c017d017e017f018001810182018301840185
0186018701880189018a018b018c018d018e018f01900191019201930194
01950196019701980199019a019b019c019d019e019f01a001a101a201a3
01a401a501a601a701a801a901aa01ab01ac01ad01ae01af01b001b101b2
01b301b401b501b601b701b801b901ba01bb01bc01bd01be01bf01c001c1
01c201c301c401c501c601c701c801c901ca01cb01cc01cd01ce01cf01d0
01d101d201d301d401d501d601d701d801d901da01db01dc01dd01de01df
01e001e101e201e301e401e501e601e701e801e901ea01eb01ec01ed01ee
01ef01f001f101f201f301f401f501f601f701f801f901fa01fb01fc01fd
01fe01ff0200020102020203020402050206020702080209020a020b020c
020d020e020f0210021102120213021402150216021702180219021a021b
021c021d021e021f0220022102220223022402250226022702280229022a
022b022c022d022e022f0230023102320233023402350236023702380239
023a023b023c023d023e023f024002410242024302440245024602470248
0249024a024b024c024d024e024f02500251025202530254025502560257
02580259025a025b025c025d025e025f0260026102620263026402650266
026702680269026a026b026c026d026e026f027002710272027302740275
0276027702780279027a027b027c027d027e027f02800281028202830284
02850286028702880289028a028b028c028d028e028f0290029102920293
029402950296029702980299029a029b029c029d029e029f02a002a102a2
02a302a402a502a602a702a802a902aa02ab02ac02ad02ae02af02b002b1
02b202b302b402b502b602b702b802b902ba02bb02bc02bd02be02bf02c0
02c102c202c302c402c502c602c702c802c902ca02cb02cc02cd02ce02cf
02d002d102d202d302d402d502d602d702d802d902da02db02dc02dd02de
02df02e002e102e202e302e402e502e602e702e802e902ea02eb02ec02ed
02ee02ef02f002f102f202f302f402f502f602f702f802f902fa02fb02fc
02fd02fe02ff0300030103020303030403050306030703080309030a030b
030c030d030e030f0310031103120313031403150316031703180319031a
031b031c031d031e031f0320032103220323032403250326032703280329
032a032b032c032d032e032f033003310332033303340335033603370338
0339033a033b033c033d033e033f03400341034203430344034503460347
03480349034a034b034c034d034e034f0350035103520353035403550356
035703580359035a035b035c035d035e035f036003610362036303640365
0366036703680369036a036b036c036d036e036f03700371037203730374
03750376037703780379037a037b037c037d037e037f0380038103820383
038403850386038703880389038a038b038c038d038e038f039003910392
0393039403950396039703980399039a039b039c039d039e039f03a003a1
03a203a303a403a503a603a703a803a903aa03ab03ac03ad03ae03af03b0
03b103b203b303b403b503b603b703b803b903ba03bb03bc03bd03be03bf
03c003c103c203c303c403c503c603c703c803c903ca03cb03cc03cd03ce
03cf03d003d103d203d303d403d503d603d703d803d903da03db03dc03dd
03de03df03e003e103e203e303e403e503e603e703e803e903ea03eb03ec
03ed03ee03ef03f003f103f203f303f403f503f603f703f803f903fa03fb
03fc03fd03fe03ff0400040104020403040404050406040704080409040a
040b040c040d040e040f0410041104120413041404150416041704180419
041a041b041c041d041e041f042004210422042304240425042604270428
0429042a042b042c042d042e042f04300431043204330434043504360437
04380439043a043b043c043d043e043f0440044104420443044404450446
044704480449044a044b044c044d044e044f045004510452045304540455
0456045704580459045a045b045c045d045e045f04600461046204630464
04650466046704680469046a046b046c046d046e046f0470047104720473
047404750476047704780479047a047b047c047d047e047f048004810482
0483048404850486048704880489048a048b048c048d048e048f04900491
04920493049404950496049704980499049a049b049c049d049e049f04a0
04a104a204a304a404a504a604a704a804a904aa04ab04ac04ad04ae04af
04b004b104b204b304b404b504b604b704b804b904ba04bb04bc04bd04be
04bf04c004c104c204c304c404c504c604c704c804c904ca04cb04cc04cd
04ce04cf04d004d104d204d304d404d504d604d704d804d904da04db04dc
04dd04de04df04e004e104e204e304e404e504e604e704e804e904ea04eb
04ec04ed04ee04ef04f004f104f204f304f404f504f604f704f804f904fa
04fb04fc04fd04fe04ff0500050105020503050405050506050705080509
050a050b050c050d050e050f051005110512051305140515051605170518
0519051a051b051c051d051e051f05200521052205230524052505260527
05280529052a052b052c052d052e052f0530053105320533053405350536
053705380539053a053b053c053d053e053f054005410542054305440545
0546054705480549054a054b054c054d054e054f05500551055205530554
05550556055705580559055a055b055c055d055e055f0560056105620563
056405650566056705680569056a056b056c056d056e056f057005710572
0573057405750576057705780579057a057b057c057d057e057f05800581
05820583058405850586058705880589058a058b058c058d058e058f0590
059105920593059405950596059705980599059a059b059c059d059e059f
05a005a105a205a305a405a505a605a705a805a905aa05ab05ac05ad05ae
05af05b005b105b205b305b405b505b605b705b805b905ba05bb05bc05bd
05be05bf05c005c105c205c305c405c505c605c705c805c905ca05cb05cc
05cd05ce05cf05d005d105d205d305d405d505d605d705d805d905da05db
05dc05dd05de05df05e005e105e205e305e405e505e605e705e805e905ea
05eb05ec05ed05ee05ef05f005f105f205f305f405f505f605f705f805f9
05fa05fb05fc05fd05fe05ff060006010602060306040605060606070608
0609060a060b060c060d060e060f06100611061206130614061506160617
06180619061a061b061c061d061e061f0620062106220623062406250626
062706280629062a062b062c062d062e062f063006310632063306340635
0636063706380639063a063b063c063d063e063f06400641064206430644
06450646064706480649064a064b064c064d064e064f0650065106520653
065406550656065706580659065a065b065c065d065e065f066006610662
0663066406650666066706680669066a066b066c066d066e066f06700671
06720673067406750676067706780679067a067b067c067d067e067f0680
068106820683068406850686068706880689068a068b068c068d068e068f
0690069106920693069406950696069706980699069a069b069c069d069e
069f06a006a106a206a306a406a506a606a706a806a906aa06ab06ac06ad
06ae06af06b006b106b206b306b406b506b606b706b806b906ba06bb06bc
06bd06be06bf06c006c106c206c306c406c506c606c706c806c906ca06cb
06cc06cd06ce06cf06d006d106d206d306d406d506d606d706d806d906da
06db06dc06dd06de06df06e006e106e206e306e406e506e606e706e806e9
06ea06eb06ec06ed06ee06ef06f006f106f206f306f406f506f606f706f8
06f906fa06fb06fc06fd06fe06ff07000701070207030704070507060707
07080709070a070b070c070d070e070f0710071107120713071407150716
071707180719071a071b071c071d071e071f072007210722072307240725
0726072707280729072a072b072c072d072e072f07300731073207330734
07350736073707380739073a073b073c073d073e073f0740074107420743
074407450746074707480749074a074b074c074d074e074f075007510752
0753075407550756075707580759075a075b075c075d075e075f07600761
07620763076407650766076707680769076a076b076c076d076e076f0770
077107720773077407750776077707780779077a077b077c077d077e077f
0780078107820783078407850786078707880789078a078b078c078d078e
078f0790079107920793079407950796079707980799079a079b079c079d
079e079f07a007a107a207a307a407a507a607a707a807a907aa07ab07ac
07ad07ae07af07b007b107b207b307b407b507b607b707b807b907ba07bb
07bc07bd07be07bf07c007c107c207c307c407c507c607c707c807c907ca
07cb07cc07cd07ce07cf07d007d107d207d307d407d507d607d707d807d9
07da07db07dc07dd07de07df07e007e107e207e307e407e507e607e707e8
07e907ea07eb07ec07ed07ee07ef07f007f107f207f307f407f507f607f7
07f807f907fa07fb07fc07fd07fe07ff0800080108020803080408050806
080708080809080a080b080c080d080e080f081008110812081308140815
0816081708180819081a081b081c081d081e081f08200821082208230824
08250826082708280829082a082b082c082d082e082f0830083108320833
083408350836083708380839083a083b083c083d083e083f084008410842
0843084408450846084708480849084a084b084c084d084e084f08500851
08520853085408550856085708580859085a085b085c085d085e085f0860
086108620863086408650866086708680869086a086b086c086d086e086f
0870087108720873087408750876087708780879087a087b087c087d087e
087f0880088108820883088408850886088708880889088a088b088c088d
088e088f0890089108920893089408950896089708980899089a089b089c
089d089e089f08a008a108a208a308a408a508a608a708a808a908aa08ab
08ac08ad08ae08af08b008b108b208b308b408b508b608b708b808b908ba
08bb08bc08bd08be08bf08c008c108c208c308c408c508c608c708c808c9
08ca08cb08cc08cd08ce08cf08d008d108d208d308d408d508d608d708d8
08d908da08db08dc08dd08de08df08e008e108e208e308e408e508e608e7
08e808e908ea08eb08ec08ed08ee08ef08f008f108f208f308f408f508f6
08f708f808f908fa08fb08fc08fd08fe08ff090009010902090309040905
0906090709080909090a090b090c090d090e090f09100911091209130914
09150916091709180919091a091b091c091d091e091f0920092109220923
092409250926092709280929092a092b092c092d092e092f093009310932
0933093409350936093709380939093a093b093c093d093e093f09400941
09420943094409450946094709480949094a094b094c094d094e094f0950
095109520953095409550956095709580959095a095b095c095d095e095f
0960096109620963096409650966096709680969096a096b096c096d096e
096f0970097109720973097409750976097709780979097a097b097c097d
097e097f0980098109820983098409850986098709880989098a098b098c
098d098e098f0990099109920993099409950996099709980999099a099b
099c099d099e099f09a009a109a209a309a409a509a609a709a809a909aa
09ab09ac09ad09ae09af09b009b109b209b309b409b509b609b709b809b9
09ba09bb09bc09bd09be09bf09c009c109c209c309c409c509c609c709c8
09c909ca09cb09cc09cd09ce09cf09d009d109d209d309d409d509d609d7
09d809d909da09db09dc09dd09de09df09e009e109e209e309e409e509e6
09e709e809e909ea09eb09ec09ed09ee09ef09f009f109f209f309f409f5
09f609f709f809f909fa09fb09fc09fd09fe09ff0a000a010a020a030a04
0a050a060a070a080a090a0a0a0b0a0c0a0d0a0e0a0f0a100a110a120a13
0a140a150a160a170a180a190a1a0a1b0a1c0a1d0a1e0a1f0a200a210a22
0a230a240a250a260a270a280a290a2a0a2b0a2c0a2d0a2e0a2f0a300a31
0a320a330a340a350a360a370a380a390a3a0a3b0a3c0a3d0a3e0a3f0a40
0a410a420a430a440a450a460a470a480a490a4a0a4b0a4c0a4d0a4e0a4f
0a500a510a520a530a540a550a560a570a580a590a5a0a5b0a5c0a5d0a5e
0a5f0a600a610a620a630a640a650a660a670a680a690a6a0a6b0a6c0a6d
0a6e0a6f0a700a710a720a730a740a750a760a770a780a790a7a0a7b0a7c
0a7d0a7e0a7f0a800a810a820a830a840a850a860a870a880a890a8a0a8b
0a8c0a8d0a8e0a8f0a900a910a920a930a940a950a960a970a980a990a9a
0a9b0a9c0a9d0a9e0a9f0aa00aa10aa20aa30aa40aa50aa60aa70aa80aa9
0aaa0aab0aac0aad0aae0aaf0ab00ab10ab20ab30ab40ab50ab60ab70ab8
0ab90aba0abb0abc0abd0abe0abf0ac00ac10ac20ac30ac40ac50ac60ac7
0ac80ac90aca0acb0acc0acd0ace0acf0ad00ad10ad20ad30ad40ad50ad6
0ad70ad80ad90ada0adb0adc0add0ade0adf0ae00ae10ae20ae30ae40ae5
0ae60ae70ae80ae90aea0aeb0aec0aed0aee0aef0af00af10af20af30af4
0af50af60af70af80af90afa0afb0afc0afd0afe0aff0b000b010b020b03
0b040b050b060b070b080b090b0a0b0b0b0c0b0d0b0e0b0f0b100b110b12
0b130b140b150b160b170b180b190b1a0b1b0b1c0b1d0b1e0b1f0b200b21
0b220b230b240b250b260b270b280b290b2a0b2b0b2c0b2d0b2e0b2f0b30
0b310b320b330b340b350b360b370b380b390b3a0b3b0b3c0b3d0b3e0b3f
0b400b410b420b430b440b450b460b470b480b490b4a0b4b0b4c0b4d0b4e
0b4f0b500b510b520b530b540b550b560b570b580b590b5a0b5b0b5c0b5d
0b5e0b5f0b600b610b620b630b640b650b660b670b680b690b6a0b6b0b6c
0b6d0b6e0b6f0b700b710b720b730b740b750b760b770b780b790b7a0b7b
0b7c0b7d0b7e0b7f0b800b810b820b830b840b850b860b870b880b890b8a
0b8b0b8c0b8d0b8e0b8f0b900b910b920b930b940b950b960b970b980b99
0b9a0b9b0b9c0b9d0b9e0b9f0ba00ba10ba20ba30ba40ba50ba60ba70ba8
0ba90baa0bab0bac0bad0bae0baf0bb00bb10bb20bb30bb40bb50bb60bb7
0bb80bb90bba0bbb0bbc0bbd0bbe0bbf0bc00bc10bc20bc30bc40bc50bc6
0bc70bc80bc90bca0bcb0bcc0bcd0bce0bcf0bd00bd10bd20bd30bd40bd5
0bd60bd70bd80bd90bda0bdb0bdc0bdd0bde0bdf0be00be10be20be30be4
0be50be60be70be80be90bea0beb0bec0bed0bee0bef0bf00bf10bf20bf3
0bf40bf50bf60bf70bf80bf90bfa0bfb0bfc0bfd0bfe0bff0c000c010c02
0c030c040c050c060c070c080c090c0a0c0b0c0c0c0d0c0e0c0f0c100c11
0c120c130c140c150c160c170c180c190c1a0c1b0c1c0c1d0c1e0c1f0c20
0c210c220c230c240c250c260c270c280c290c2a0c2b0c2c0c2d0c2e0c2f
0c300c310c320c330c340c350c360c370c380c390c3a0c3b0c3c0c3d0c3e
0c3f0c400c410c420c430c440c450c460c470c480c490c4a0c4b0c4c0c4d
0c4e0c4f0c500c510c520c530c540c550c560c570c580c590c5a0c5b0c5c
0c5d0c5e0c5f0c600c610c620c630c640c650c660c670c680c690c6a0c6b
0c6c0c6d0c6e0c6f0c700c710c720c730c740c750c760c770c780c790c7a
0c7b0c7c0c7d0c7e0c7f0c800c810c820c830c840c850c860c870c880c89
0c8a0c8b0c8c0c8d0c8e0c8f0c900c910c920c930c940c950c960c970c98
0c990c9a0c9b0c9c0c9d0c9e0c9f0ca00ca10ca20ca30ca40ca50ca60ca7
0ca80ca90caa0cab0cac0cad0cae0caf0cb00cb10cb20cb30cb40cb50cb6
0cb70cb80cb90cba0cbb0cbc0cbd0cbe0cbf0cc00cc10cc20cc30cc40cc5
0cc60cc70cc80cc90cca0ccb0ccc0ccd0cce0ccf0cd00cd10cd20cd30cd4
0cd50cd60cd70cd80cd90cda0cdb0cdc0cdd0cde0cdf0ce00ce10ce20ce3
0ce40ce50ce60ce70ce80ce90cea0ceb0cec0ced0cee0cef0cf00cf10cf2
0cf30cf40cf50cf60cf70cf80cf90cfa0cfb0cfc0cfd0cfe0cff0d000d01
0d020d030d040d050d060d070d080d090d0a0d0b0d0c0d0d0d0e0d0f0d10
0d110d120d130d140d150d160d170d180d190d1a0d1b0d1c0d1d0d1e0d1f
0d200d210d220d230d240d250d260d270d280d290d2a0d2b0d2c0d2d0d2e
0d2f0d300d310d320d330d340d350d360d370d380d390d3a0d3b0d3c0d3d
0d3e0d3f0d400d410d420d430d440d450d460d470d480d490d4a0d4b0d4c
0d4d0d4e0d4f0d500d510d520d530d540d550d560d570d580d590d5a0d5b
0d5c0d5d0d5e0d5f0d600d610d620d630d640d650d660d670d680d690d6a
0d6b0d6c0d6d0d6e0d6f0d700d710d720d730d740d750d760d770d780d79
0d7a0d7b0d7c0d7d0d7e0d7f0d800d810d820d830d840d850d860d870d88
0d890d8a0d8b0d8c0d8d0d8e0d8f0d900d910d920d930d940d950d960d97
0d980d990d9a0d9b0d9c0d9d0d9e0d9f0da00da10da20da30da40da50da6
0da70da80da90daa0dab0dac0dad0dae0daf0db00db10db20db30db40db5
0db60db70db80db90dba0dbb0dbc0dbd0dbe0dbf0dc00dc10dc20dc30dc4
0dc50dc60dc70dc80dc90dca0dcb0dcc0dcd0dce0dcf0dd00dd10dd20dd3
0dd40dd50dd60dd70dd80dd90dda0ddb0ddc0ddd0dde0ddf0de00de10de2
0de30de40de50de60de70de80de90dea0deb0dec0ded0dee0def0df00df1
0df20df30df40df50df60df70df80df90dfa0dfb0dfc0dfd0dfe0dff0e00
0e010e020e030e040e050e060e070e080e090e0a0e0b0e0c0e0d0e0e0e0f
0e100e110e120e130e140e150e160e170e180e190e1a0e1b0e1c0e1d0e1e
0e1f0e200e210e220e230e240e250e260e270e280e290e2a0e2b0e2c0e2d
0e2e0e2f0e300e310e320e330e340e350e360e370e380e390e3a0e3b0e3c
0e3d0e3e0e3f0e400e410e420e430e440e450e460e470e480e490e4a0e4b
0e4c0e4d0e4e0e4f0e500e510e520e530e540e550e560e570e580e590e5a
0e5b0e5c0e5d0e5e0e5f0e600e610e620e630e640e650e660e670e680e69
0e6a0e6b0e6c0e6d0e6e0e6f0e700e710e720e730e740e750e760e770e78
0e790e7a0e7b0e7c0e7d0e7e0e7f0e800e810e820e830e840e850e860e87
0e880e890e8a0e8b0e8c0e8d0e8e0e8f0e900e910e920e930e940e950e96
0e970e980e990e9a0e9b0e9c0e9d0e9e0e9f0ea00ea10ea20ea30ea40ea5
0ea60ea70ea80ea90eaa0eab0eac0ead0eae0eaf0eb00eb10eb20eb30eb4
0eb50eb60eb70eb80eb90eba0ebb0ebc0ebd0ebe0ebf0ec00ec10ec20ec3
0ec40ec50ec60ec70ec80ec90eca0ecb0ecc0ecd0ece0ecf0ed00ed10ed2
0ed30ed40ed50ed60ed70ed80ed90eda0edb0edc0edd0ede0edf0ee00ee1
0ee20ee30ee40ee50ee60ee70ee80ee90eea0eeb0eec0eed0eee0eef0ef0
0ef10ef20ef30ef40ef50ef60ef70ef80ef90efa0efb0efc0efd0efe0eff
0f000f010f020f030f040f050f060f070f080f090f0a0f0b0f0c0f0d0f0e
0f0f0f100f110f120f130f140f150f160f170f180f190f1a0f1b0f1c0f1d
0f1e0f1f0f200f210f220f230f240f250f260f270f280f290f2a0f2b0f2c
0f2d0f2e0f2f0f300f310f320f330f340f350f360f370f380f390f3a0f3b
0f3c0f3d0f3e0f3f0f400f410f420f430f440f450f460f470f480f490f4a
0f4b0f4c0f4d0f4e0f4f0f500f510f520f530f540f550f560f570f580f59
0f5a0f5b0f5c0f5d0f5e0f5f0f600f610f620f630f640f650f660f670f68
0f690f6a0f6b0f6c0f6d0f6e0f6f0f700f710f720f730f740f750f760f77
0f780f790f7a0f7b0f7c0f7d0f7e0f7f0f800f810f820f830f840f850f86
0f870f880f890f8a0f8b0f8c0f8d0f8e0f8f0f900f910f920f930f940f95
0f960f970f980f990f9a0f9b0f9c0f9d0f9e0f9f0fa00fa10fa20fa30fa4
0fa50fa60fa70fa80fa90faa0fab0fac0fad0fae0faf0fb00fb10fb20fb3
0fb40fb50fb60fb70fb80fb90fba0fbb0fbc0fbd0fbe0fbf0fc00fc10fc2
0fc30fc40fc50fc60fc70fc80fc90fca0fcb0fcc0fcd0fce0fcf0fd00fd1
0fd20fd30fd40fd50fd60fd70fd80fd90fda0fdb0fdc0fdd0fde0fdf0fe0
0fe10fe20fe30fe40fe50fe60fe70fe80fe90fea0feb0fec0fed0fee0fef
0ff00ff10ff20ff30ff40ff50ff60ff70ff80ff90ffa0ffb0ffc0ffd0ffe
0fff1000100110021003100410051006100710081009100a100b100c100d
100e100f1010101110121013101410151016101710181019101a101b101c
101d101e101f1020102110221023102410251026102710281029102a102b
102c102d102e102f1030103110321033103410351036103710381039103a
103b103c103d103e103f1040104110421043104410451046104710481049
104a104b104c104d104e104f105010511052105310541055105610571058
1059105a105b105c105d105e105f10601061106210631064106510661067
10681069106a106b106c106d106e106f1070107110721073107410751076
107710781079107a107b107c107d107e107f108010811082108310841085
1086108710881089108a108b108c108d108e108f10901091109210931094
10951096109710981099109a109b109c109d109e109f10a010a110a210a3
10a410a510a610a710a810a910aa10ab10ac10ad10ae10af10b010b110b2
10b310b410b510b610b710b810b910ba10bb10bc10bd10be10bf10c010c1
10c210c310c410c510c610c710c810c910ca10cb10cc10cd10ce10cf10d0
10d110d210d310d410d510d610d710d810d910da10db10dc10dd10de10df
10e010e110e210e310e410e510e610e710e810e910ea10eb10ec10ed10ee
10ef10f010f110f210f310f410f510f610f710f810f910fa10fb10fc10fd
10fe10ff1100110111021103110411051106110711081109110a110b110c
110d110e110f1110111111121113111411151116111711181119111a111b
111c111d111e111f1120112111221123112411251126112711281129112a
112b112c112d112e112f1130113111321133113411351136113711381139
113a113b113c113d113e113f114011411142114311441145114611471148
1149114a114b114c114d114e114f11501151115211531154115511561157
11581159115a115b115c115d115e115f1160116111621163116411651166
116711681169116a116b116c116d116e116f117011711172117311741175
1176117711781179117a117b117c117d117e117f11801181118211831184
11851186118711881189118a118b118c118d118e118f1190119111921193
119411951196119711981199119a119b119c119d119e119f11a011a111a2
11a311a411a511a611a711a811a911aa11ab11ac11ad11ae11af11b011b1
11b211b311b411b511b611b711b811b911ba11bb11bc11bd11be11bf11c0
11c111c211c311c411c511c611c711c811c911ca11cb11cc11cd11ce11cf
11d011d111d211d311d411d511d611d711d811d911da11db11dc11dd11de
11df11e011e111e211e311e411e511e611e711e811e911ea11eb11ec11ed
11ee11ef11f011f111f211f311f411f511f611f711f811f911fa11fb11fc
11fd11fe11ff1200120112021203120412051206120712081209120a120b
120c120d120e120f1210121112121213121412151216121712181219121a
121b121c121d121e121f1220122112221223122412251226122712281229
122a122b122c122d122e122f123012311232123312341235123612371238
1239123a123b123c123d123e123f12401241124212431244124512461247
12481249124a124b124c124d124e124f1250125112521253125412551256
125712581259125a125b125c125d125e125f126012611262126312641265
1266126712681269126a126b126c126d126e126f12701271127212731274
12751276127712781279127a127b127c127d127e127f1280128112821283
128412851286128712881289128a128b128c128d128e128f129012911292
1293129412951296129712981299129a129b129c129d129e129f12a012a1
12a212a312a412a512a612a712a812a912aa12ab12ac12ad12ae12af12b0
12b112b212b312b412b512b612b712b812b912ba12bb12bc12bd12be12bf
12c012c112c212c312c412c512c612c712c812c912ca12cb12cc12cd12ce
12cf12d012d112d212d312d412d512d612d712d812d912da12db12dc12dd
12de12df12e012e112e212e312e412e512e612e712e812e912ea12eb12ec
12ed12ee12ef12f012f112f212f312f412f512f612f712f812f912fa12fb
12fc12fd12fe12ff1300130113021303130413051306130713081309130a
130b130c130d130e130f1310131113121313131413151316131713181319
131a131b131c131d131e131f132013211322132313241325132613271328
1329132a132b132c132d132e132f13301331133213331334133513361337
13381339133a133b133c133d133e133f1340134113421343134413451346
134713481349134a134b134c134d134e134f135013511352135313541355
1356135713581359135a135b135c135d135e135f13601361136213631364
13651366136713681369136a136b136c136d136e136f1370137113721373
137413751376137713781379137a137b137c137d137e137f138013811382
1383138413851386138713881389138a138b138c138d138e138f13901391
13921393139413951396139713981399139a139b139c139d139e139f13a0
13a113a213a313a413a513a613a713a813a913aa13ab13ac13ad13ae13af
13b013b113b213b313b413b513b613b713b813b913ba13bb13bc13bd13be
13bf13c013c113c213c313c413c513c613c713c813c913ca13cb13cc13cd
13ce13cf13d013d113d213d313d413d513d613d713d813d913da13db13dc
13dd13de13df13e013e113e213e313e413e513e613e713e813e913ea13eb
13ec13ed13ee13ef13f013f113f213f313f413f513f613f713f813f913fa
13fb13fc13fd13fe13ff1400140114021403140414051406140714081409
140a140b140c140d140e140f141014111412141314141415141614171418
1419141a141b141c141d141e141f14201421142214231424142514261427
14281429142a142b142c142d142e142f1430143114321433143414351436
143714381439143a143b143c143d143e143f144014411442144314441445
1446144714481449144a144b144c144d144e144f14501451145214531454
14551456145714581459145a145b145c145d145e145f1460146114621463
146414651466146714681469146a146b146c146d146e146f147014711472
1473147414751476147714781479147a147b147c147d147e147f14801481
14821483148414851486148714881489148a148b148c148d148e148f1490
149114921493149414951496149714981499149a149b149c149d149e149f
14a014a114a214a314a414a514a614a714a814a914aa14ab14ac14ad14ae
14af14b014b114b214b314b414b514b614b714b814b914ba14bb14bc14bd
14be14bf14c014c114c214c314c414c514c614c714c814c914ca14cb14cc
14cd14ce14cf14d014d114d214d314d414d514d614d714d814d914da14db
14dc14dd14de14df14e014e114e214e314e414e514e614e714e814e914ea
14eb14ec14ed14ee14ef14f014f114f214f314f414f514f614f714f814f9
14fa14fb14fc14fd14fe14ff150015011502150315041505150615071508
1509150a150b150c150d150e150f15101511151215131514151515161517
15181519151a151b151c151d151e151f1520152115221523152415251526
152715281529152a152b152c152d152e152f153015311532153315341535
1536153715381539153a153b153c153d153e153f15401541154215431544
15451546154715481549154a154b154c154d154e154f1550155115521553
155415551556155715581559155a155b155c155d155e155f156015611562
1563156415651566156715681569156a156b156c156d156e156f15701571
15721573157415751576157715781579157a157b157c157d157e157f1580
158115821583158415851586158715881589158a158b158c158d158e158f
1590159115921593159415951596159715981599159a159b159c159d159e
159f15a015a115a215a315a415a515a615a715a815a915aa15ab15ac15ad
15ae15af15b015b115b215b315b415b515b615b715b815b915ba15bb15bc
15bd15be15bf15c015c115c215c315c415c515c615c715c815c915ca15cb
15cc15cd15ce15cf15d015d115d215d315d415d515d615d715d815d915da
15db15dc15dd15de15df15e015e115e215e315e415e515e615e715e815e9
15ea15eb15ec15ed15ee15ef15f015f115f215f315f415f515f615f715f8
15f915fa15fb15fc15fd15fe15ff16001601160216031604160516061607
16081609160a160b160c160d160e160f1610161116121613161416151616
161716181619161a161b161c161d161e161f162016211622162316241625
1626162716281629162a162b162c162d162e162f16301631163216331634
16351636163716381639163a163b163c163d163e163f1640164116421643
164416451646164716481649164a164b164c164d164e164f165016511652
1653165416551656165716581659165a165b165c165d165e165f16601661
16621663166416651666166716681669166a166b166c166d166e166f1670
167116721673167416751676167716781679167a167b167c167d167e167f
1680168116821683168416851686168716881689168a168b168c168d168e
168f1690169116921693169416951696169716981699169a169b169c169d
169e169f16a016a116a216a316a416a516a616a716a816a916aa16ab16ac
16ad16ae16af16b016b116b216b316b416b516b616b716b816b916ba16bb
16bc16bd16be16bf16c016c116c216c316c416c516c616c716c816c916ca
16cb16cc16cd16ce16cf16d016d116d216d316d416d516d616d716d816d9
16da16db16dc16dd16de16df16e016e116e216e316e416e516e616e716e8
16e916ea16eb16ec16ed16ee16ef16f016f116f216f316f416f516f616f7
16f816f916fa16fb16fc16fd16fe16ff1700170117021703170417051706
170717081709170a170b170c170d170e170f171017111712171317141715
1716171717181719171a171b171c171d171e171f17201721172217231724
17251726172717281729172a172b172c172d172e172f1730173117321733
173417351736173717381739173a173b173c173d173e173f174017411742
1743174417451746174717481749174a174b174c174d174e174f17501751
17521753175417551756175717581759175a175b175c175d175e175f1760
176117621763176417651766176717681769176a176b176c176d176e176f
1770177117721773177417751776177717781779177a177b177c177d177e
177f1780178117821783178417851786178717881789178a178b178c178d
178e178f1790179117921793179417951796179717981799179a179b179c
179d179e179f17a017a117a217a317a417a517a617a717a817a917aa17ab
17ac17ad17ae17af17b017b117b217b317b417b517b617b717b817b917ba
17bb17bc17bd17be17bf17c017c117c217c317c417c517c617c717c817c9
17ca17cb17cc17cd17ce17cf17d017d117d217d317d417d517d617d717d8
17d917da17db17dc17dd17de17df17e017e117e217e317e417e517e617e7
17e817e917ea17eb17ec17ed17ee17ef17f017f117f217f317f417f517f6
17f717f817f917fa17fb17fc17fd17fe17ff180018011802180318041805
1806180718081809180a180b180c180d180e180f18101811181218131814
18151816181718181819181a181b181c181d181e181f1820182118221823
182418251826182718281829182a182b182c182d182e182f183018311832
1833183418351836183718381839183a183b183c183d183e183f18401841
18421843184418451846184718481849184a184b184c184d184e184f1850
185118521853185418551856185718581859185a185b185c185d185e185f
1860186118621863186418651866186718681869186a186b186c186d186e
186f1870187118721873187418751876187718781879187a187b187c187d
187e187f1880188118821883188418851886188718881889188a188b188c
188d188e188f1890189118921893189418951896189718981899189a189b
189c189d189e189f18a018a118a218a318a418a518a618a718a818a918aa
18ab18ac18ad18ae18af18b018b118b218b318b418b518b618b718b818b9
18ba18bb18bc18bd18be18bf18c018c118c218c318c418c518c618c718c8
18c918ca18cb18cc18cd18ce18cf18d018d118d218d318d418d518d618d7
18d818d918da18db18dc18dd18de18df18e018e118e218e318e418e518e6
18e718e818e918ea18eb18ec18ed18ee18ef18f018f118f218f318f418f5
18f618f718f818f918fa18fb18fc18fd18fe18ff19001901190219031904
19051906190719081909190a190b190c190d190e190f1910191119121913
191419151916191719181919191a191b191c191d191e191f192019211922
1923192419251926192719281929>]def
/sfnts
[<00010000000a000a000a000a4f532f3299c236e8000000ac000000606376
7420b970d8350000010c000005bc6670676d7ede0337000006c800000d2b
68656164f5be0708000013f400000036686865610dad1c6a0000142c0000
0024686d7478daeebfe000001450000064a66d6178702c1c0573000078f8
000000206e616d65479c3e9b00007918000005f970726570136722190000
7f14000024eb676469720000000000000000000000000003042b01900005
0008059905330000011e05990533000003d0008602000800020f05020202
04030204e0002affc000247b00000009000000004d53202000400000feff
0600fe0001c4079e0226200001ff0000000003b7050e0000002000140000
079e0000fe930000000000000000000000000050006a0073008000800086
008d009300bf00db006200830093009900a000a600a900b000c100c900d7
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000fe79056d000c03b7000600130000
fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e00130420
000600130000fffaffedff10ffee050e00130420000600130000fffaffee
fe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f0006
000dff36fffafff302870006000f0000fffafff1079efeaffea700000000
000000000000000000500051005a005b005c005d00600061006200640068
0069006a006b006c006d006e00680069006e00600067006e00660068005f
00610063006400660068006a006b006c006d006e006f0070006f00720074
007500760076007000720073007400750076006f00700071007200730075
0077007700780079007a007b007c007d007b007c007d00770079007a007c
0078007a007c007d0078007d007e007f008000810082007e007f00810082
007e007f0080008100820083008400850086008700880089008300840085
008600870088008900830084008500860087008800890089008600870088
0089008a008b008c008d008e008f008a008b008c008d008e008f008a008b
008c008d008e008f008d008a008b008c008d008e008f0090009000910092
009300940095009600980099009b009c0090009100920093009400950096
009700980099009a009e009f00a60090009100950098009f009000910096
009700bc00c600b500ae00af00b6006800690063006a006f00700071006f
0070007100720066006c006d00700079007c007f00830086008700880089
008a0074007500760077007a007b007c007d007e008200850086008a0088
008900830078007b00820083008600870088008900760079007a007c007d
007e0083008500880089008a0073007400750077007a007d00880089008a
008b008c008d008e00900094008b008c008d00910092009300940095008c
008d00910095008f009000910092009300940095008b008c008d008e008f
009000910092009300940095008b008c008d008e008f0090009100920093
0096009700980099009c0096009700980099009a009b009c00960099009a
009c0096009700980099009a009b009c009700980099009a009b009c0097
00980099009a009b009c0096009d00a000a1009d009e009f00a000a100a2
009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e00a0
00a1009d009e00a000a2009d00a300a400a500a600a700a300a400a600a7
00a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac00a8
00a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad00ae
00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b000b1
00b200b300b400b500b600b700b800b300ae00af00b000b200b500b600b7
00b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd
00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c400b9
00ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce00c5
00c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d005e4
000e0041000005ba009c009c005e005e0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000051a001500a0fff8ff77fff8
03480066015401cc00ac00a200b4008c0101006e00000000000000000000
011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a8685
74737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a595855545352
51504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f
2e2d2c2826252423221f181411100f0d0b0a090807060504030201002c45
23466020b02660b004262348482d2c452346236120b02661b00426234848
2d2c45234660b0206120b04660b004262348482d2c4523462361b0206020
b02661b02061b004262348482d2c45234660b0406120b06660b004262348
482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c
003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed5158
2320b04d44235920b0042651582320b00d44235921212d2c202045186844
20b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a
0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1020008
0d2d2c2045b00325456164b050515845441b2121592d2c2045b000436044
2d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb81000
62602b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0
297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2c4523456023456023456023766818b08062202d2c
b00426b00426b00425b0042545234520b003266062636820b0032661658a
2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f
4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b
515820b0032545695358441b2121591b2121592d2c45b01443b0006063b0
016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b23
5158b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a
586466b01f601b64b020606620581b21b04059b001615923586559b02923
442310b029e01b2121212121592d2cb0164358b004254564b02060662058
1b21b04059b0016123586559b0292344b00425b00725082058021b0359b0
052510b004252046b0042523423cb0072510b006252046b00425b0016023
423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0b004
25b00725082058021b0359b00425b003254348b00625b00325b001604348
1b2159212121212121212d2cb0164358b004254564b020606620581b21b0
4059b0016123581b6559b0292344b00525b00825082058021b0359b00425
10b005252046b0042523423cb00425b0072508b0072510b006252046b004
25b0016023423c2058011b0059b0042510b00525b029e0b02920456544b0
072510b00625b029e0b00525b00825082058021b0359b00525b003254348
b00425b0072508b00625b00325b0016043481b2159212121212121212d2c
02b00425202046b004252342b0052508b003254548212121212d2c02b003
2520b0042508b0022543482121212d2c452320451820b000502058236523
59236820b040505821b04059235865598a60442d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b21
212121592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b
21212121592d2cb002435458b0492b1b212121592d2c2320b000508a8a64
b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b2321
235865592d2cb108000c215460432d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b12601885158b94000020063b80400885458b2024002
43604259b94000040063b80800885458b202800243604259b12801885158
b94000080063b81000885458ba00020100000243604259595959595959b1
0002435458400a0540084009400c020d021bb10102435458b2054008ba01
0000090100b30c010d011bb18002435258b2054008b80180b109401bb901
000002435258b2054008ba0180000901401bb901800002435258b2054008
b80200b109401bb2054008ba010000090100595959b9400000808855b940
00020063b8040088555a58b30c000d011bb30c000d015959594242424242
2d2c451868234b51582320452064b04050587c59688a6059442d2cb00016
b00225b0022501b001233e00b002233eb10102060cb00a236542b00b2342
01b001233f00b002233fb10102060cb006236542b0072342b00116012d2c
20b82000628a6023622d2cb0072558001b0159b0042510b00325b0022520
b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0
042547b004254760b0062547b0806361b00225b0005558b00325b0072549
6359b0082558001b0159b00425b0062549b009255cb009255a58b0092b59
b0072546b0806361b0032520b0005558631b2159612320b0005558b08063
1b21b08059b0592bb006255c586959b00425202010b00048233ab0062658
001b0159b0052658b003252f598a12233221212d2cb00625b00a2587b006
25b009254ab0005358b00625b00a251bb00925b0072559b00225b0022507
0cb005256323b00625636020b94000040063535821b00426b00426b00a1b
b94000040063655158b0042665b0042665b00a1bb00426b00426b000b003
25b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b005250759
5920b0005558b00525b0052587b00725b007250bb0092510b00b25b00926
20b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625b0
062587b00a2510b00b25c15920b00051b800522378b00161b00225b00725
b0072507b00a25b00d254961b08062b00525b005250bb00a252338b00625
b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925b0
0c2549b0032554b8ffa723792121212121212121212121212d2c23b00054
58b9400000001bb900004000598ab0005458b9400000001bb90000400059
b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a
080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b00426
080db00426b00426080db05b2b2d2cb0022563b0206066b00225b8200062
6023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a
234564b0022564b002256164b00343525821206459b1024e2b23b0005058
65592d2c238a4a234564b0022564b002256164b00343525821206459b101
4e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003254a
b1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b00325
8ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425b004
2620b000505821b06a1bb06c592bb0032546b00325466061b08062208a20
10233a232010233a2d2cb0032547b003254760b0052547b0806361b00225
b00625496323b005254ab080632058621b2159b0042646608a468a4660b0
2063612d2cb00426b00425b00425b00426b06e2b208a2010233a23201023
3a2d2c2320b001545821b00225b1024e2bb0805020605920606020b00151
5821211b20b005515821206661b0402361b100032550b00325b00325505a
5820b00325618a535821b000591b21591bb00754582066616523211b2121
b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a238ab0
0159b004254620666120b00526b0062649b00526b00526b0702b236165b0
2060206661b02061652d2cb0022546208a20b000505821b1024e2b1b4523
21596165b00225103b2d2cb0042620b802006220b80200638a236120b05d
602bb00525118a128a20398a58ba005d10000004266356602b2321201020
4620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d100000
09256356602bb00525b00525b00526b06d2bb15d0725602bb00525b00525
b00525b00525b06f2bba005d10000008266356602b20b0005258b0502bb0
0525b00525b00725b00725b00525b0712bb0021738b00052b00225b00152
5a58b00425b0062549b00325b00525496020b0405258211bb000525820b0
025458b00425b00425b00725b0072549b00217381bb00425b00425b00425
b0062549b0021738595959595921212121212d2cb12801885158b9400004
0063b8080088545c1bb001592d2cb12801885158b94000040063b8080088
545c1bb001592d0000010000000630a41629e1985f0f3cf5001908000000
0000bbeb7ccc00000000d4ba0ee3fbfafd8009ec08360000000900020001
00000000000100000600fe0001c40aa0fbfafaa009ec0001000000000000
00000000000000001929040e0000000000000000000001cf000004a10023
04a1002304a1002304a1002304a1002304a1002304a1002304a1002304a1
002304a1002304a10023061bffcc061bffcc045a00ac0444006104440061
0444006104440061044400610444006104ec00ac04ec009704ff001b04ff
001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8005f
03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b050c
005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a02040028
0204ff390204ff310204ff500204ff4f0204ff7b0204001e020400270492
00ac028d0007028dffa9042800ac042800ac035d00ac035d0081036200ac
035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac052a
00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c0063
054c0063054c0063054c0063054c0063054f0063054f006306ef00630422
00ac042200ac05620063045800ac045800ac04580053045800ac03ad0047
03ad004703ad001503ad001803ad004703ad004703e6000f03e6000f03e6
000f03e6000f052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa048a0022071e003d071e
003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6001e
03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d03cb
006d03cb006d03cb006d03cb006d046500a10465006a0477003204770032
038000a103800030038000a103800020038000200380002c038000290380
0042038000a1038000a1035000a10482006c0482006c0482006c0482006c
0482006c047800a10478008c049d004001ec00a101ecff5801ec001901ec
ff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b00a1
023e0000023eff8c03c900a103c900a102e000a102e0008702e600a102e0
00a102f0003203d500a1060600a1049100a1049100a10491009904910078
049100a1046600a104aa006604aa006604aa006604aa006604aa006604aa
006604aa006604aa006604aa006604ba006604ba00660606006603c500a1
03c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049034f
0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359001c
0359001c048d009f048d009c048d009f048d0097048d0075048d009f048d
009f048d009f048d009f048d009f048d009f03fd0021063e0037063e0037
063e0037063e0037063e003703cc00360383001003830010038300100383
0010038300100369004403690044036900080369004403d5005c03d5005c
03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c03d5
005c03d5005c062f005c062f005c043400990362005a0362005a0362004e
036200570362005a0362005a076f005a06dd005a0601005a0601005a0434
0060048c0060046a00600434006103fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025069a
002508d5002504ab0025069b002508d50025043c0025043c0025043c0025
043c0025044f0025044f0025044f0025044f0025043c0025043c00250676
002506760025067600250676002506890025068900250689002506890025
0676002506760025043c0025043c0025067600250609002508430025043c
0025043c002504830025043c00250676002504ed002504ed002505130025
0728002503c4003503c4003503c4003503c4003503c40035043400600434
0060043400600434006004340060043400990434ffad0443fff901d60085
01d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff6701d6
001101d6009903c00085041e008801eaffd501eaffd501eaff6303a30099
03a3009903a3009901d6009901d6002a021c009901d6004b01fb001c02fd
0099066400990434009904340099043400990434004e0434009904a2ff9d
043400990438005a0438005a0438005a0438005a0438004f0438005a0438
005a0438005a0438005a043c005a043c005a06cc005a0434009904340099
0434006002ca009902ca009902cafff902ca006e03210051032100510321
fffe0321fffd032100510321005105ae005105ae00510438009901f10099
02ae002102c4002102ae002102bc002604e6002104750021047500210475
002104750021047500210475002104750021047500210475002104750021
05130021074b002106d9002106d9002106d9002106d9002106d9002106d9
002106d9002106d9002106d9002106d90021043400940434008e04340094
043400860434004d04340089043400860434009404340094043400940434
0094039d002205b8003505b8003505b8003505b8003505b8003503770029
039f0022039f0022039f0022039f0022039f002203290059032900590329
00070329005903380072036100640378005d02ac004402e5006c024e0044
02e5004802b8004701c100240297002a02e9006c01630061016dffd80297
006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6006c
0230004201e3002302e9006c0285001f03ef002c027e00280286001f0237
00420254000002750000029400000000fd080000fce80256000002750000
029400000000fd080000fce803290000035f0000039400000000fc9f0000
fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a0000
03a2000003a800000000fc650000fc600324000002f50000034600000367
00000000fca00000fc7e0327000003490000036a00000000fc9d0000fc7d
030c0000030f0000031100000000fcac0000fca9029100000298000002a0
00000000fce90000fce202cf000002c2000002b5000003c1000003e10000
040000000000fc520000fc3101ce000001d6000001ce000001ce00000000
fd4d0000fd4d027500840000fd7a027f00840000fd7601f7008402310000
04a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec703bf
003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff52042800ac
0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac0422
00ac03ab004603e6000f03e6001e03e6fe6e03e6001e0613000004270030
060000900550005e0550fef903f4001003f40010040400a102fb00a103c9
0023038000a1038000a103690044047800a1047800a104b4006601ec00a1
01ec000001ecff5403c900a103e10011060600a1049100a10387005e04aa
006604aa0066047800a103c500a1035b004b0359001c0383001003830010
038300100552000003cc00360558008704b1006604b10066048a0061048a
00610440009904320064039200180430000003a5005903a5005902c8004e
044c0099044c00990441006004780006023200940232ffec0232ff7a0232
ff0f03a3009903b4000004660099039700220302004d0303004d0438005a
0438005a046c002804120076044100590349005c03190003045500900455
00900455007d0455001605360055053b00550369001205a9009405920064
05920064028900000000fd0a03f400000000fc3602050097020500970205
00970224004801ff006e01ff006e04a10023044d00ad045a00ac037000ac
037000ac037600ac0527000303e800ac03e8004503e800610668005503ca
004b052200ac052200ac052200ac020400ac0204ff50028d0007045800ac
045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063054c
006304f900ac042200ac0444006103ad004703e6000f0438000f0438000f
04b800220594000004270030051c00ac04f500ac0472007406f200ac071e
00ac04eb000f061800ac044000ac0462005d04610062070800ac04710053
04ff000f04f2000f0504000003f4001003ee00a2040400a1031400a10314
00a1032700a10480000e038000a1038000300380002c0578004403800057
048900a1048900960489009501ec00a101ecff55023e000003ca00a103ca
00a104320001060600a1047800a104aa006604a90066046a00a103c500a1
03cb006d034f00490359001c039d001e039d001b042f0022050a000003cc
0036048e00a1046900a103fa006d062300a1064500a1045f0017058300a1
03e800a103e4006b03f00066063200a103ff005c045f001f0463001f044d
000006010001063200a103d5005c044300000430000003d5009902c40099
02c4009902d5009901d6ff58047700170434006003fb005d03fb005d03fb
005d0583003e0362004b04530099045300780453008801d6008501d6ff72
01eaffd503b6009903b6009904150016060200130569005f044700990628
00990438005a0431005a042a009904340086043400990362005a03210051
0319000a06640099039f0022039f001803d2002204fe0051037700290455
00990433009903c0004205d4009905fe0099044a000a0554009903c20099
038b004d038d005d05c6009903cb00380453fff90443fff904270018036e
0000036e0000036e00000000fca50000fca5029b010a029b00bf029b00bf
03b5008503b5005e03b5005e03de0064026000ed026000b10364007a0361
005f01ff002a02240048022400bb020500970586009601ff008c01ff002a
01ff008c01ff002a035900880359002b035900880359002b01ff002a0359
002b02b6007402b600c002b6007402b600c004190075041900ad04190075
041900ad0317000102df001f03af018a03fc01ae0317000b02df002d0273
00450273004503fcfff603fcfff6073e0095073e0095073e0095073e0095
03fcfff903fc00c10205009702050097026d0085026d007a027400bf0274
005a0284005602840075024000840240007a024a00b0024a0067026d0085
026d007a027400bf0274005a028400560284007503fc009e03fc007703fc
007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335008b
057500000556000007f7000007270000073c00000727000006ad00af06ad
00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e002a
03fc0057040e00600434005803fc00b903fc004a040e005303fc006d0419
002b040e003403f30035039f006103be005f039f0058039f002506210049
083300ac03fc002406e300a10411001d0494005f02cb002303ec006203ec
00510455002203d700510436007e03b20035043600630436005c040e0048
040e00ae040e0072040e0067040e0020040e0065040e006b040e0063040e
0052040e005204430067028d00190381005c0373005903ac002603680061
03b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065039f
0062039f003a039f0067039f0061039f005e039f0051039f00500494005f
02cb002303ec006203ec00510428002203d700510436007e03b200350436
00630436005c040e0048040e00ae040e0072040e0067040e0030040e0065
040e006b040e0063040e0052040e00520321004801f8002302b0004b02ad
004102db002502a6004502df005b0291003202e1004b02df004402ea0051
02df005102d0005701bc006001bc00580321004801f8002302b0004b02ad
004102db002502a6004502df005b0291003202e1004b02df004402ea0051
02df005102d0005701bc006001bc0058029d003801f500310252003c0249
002d024a001402460032025100300238002202570025024d0023029d0038
01f500310252003c0249002d024a00140246003202510030023800220257
0025024d002302b1ff4b03130044055f0044056900440517004405690044
052e00440553004405c9004e05c9004e0567004705b7004705a2004705cd
0027057d004505a20045052a003505b80048084e0048057d005c07c9005c
03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc005903fc
004503fc006503fc004c03fc005503fc005603fc003d05e9002c04050035
06d300690443006102ed000703fc00080484003a0550005e046600990665
00660454005b0416004a073e009a073e0096073e00c9073e00c9070e00af
070e013a070e00af070e013a0a4e009a0638009f04660028018a000001da
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046601d004a1002304a1002304a1002304a1001904a10015
04a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a1002303e8
00ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e80037
02040015020400a0054c0063054c0063054c0063054c0063054c0063054c
0063054c0063059400630594006305940063059400630594006305940063
052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa05c6
00aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5ffb1
03d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb803d5
005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fbffcb
03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea0438
ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a00049
04a0005a043400940434009404d2009404d2009404d2008c04d2009404d2
004604d20094039f0022039f0002039f0022046a00530466003803f40010
03f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc803f4
ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380ffa7
0380ffa00380ffa20380ff8e0380001101ec000901ec009404aa006604aa
006604aa002104aa002204aa002104aa002204aa006604ec006604ec0066
04ec006604ec006604ec006604ec0066048d009f048d009f0515009f0515
009f0515009a0515009f051500750515009f038300100383fff103830010
01da00000466000004660000046600000466000004660000046600000466
00000466000004c10066052400ac052400ac050600ac049300a1049300a1
047c00a103e6000f02ae00210359001c01d60011043c0025043c0025043c
002506760025067600250676002502f5001c02e7008e0306005a034b008e
02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375005a02d8008e0375005a029b005702800046
025700040314005702e3001a0445002202b5001c028b001c02b800500000
fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c10000
030cffff030c0000030cffff030c0002023100000231000001ffffff01ff
ffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa0098
02aa009801ce008402aa008202aa008202aa008202aa0082027f008e027f
008e0324000002910084046601fd02aa001402aa00130329000003290000
032900000329ffff039a00000327000003fcfff903fcfff9039a0000039a
00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000fdc2
0000fdc201ce008402aa00140291008302aa001502aa009302aa0093039a
014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000feb7
02aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000039a
0000039a0000039a0000039a000004010014040101470000000002aaffff
02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c802aa
00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b10084
02aaffff02aaffff075c003c075cffff075cffff075cffff075cffff075c
003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df0030
01e7003201e7003200f8004400f8004402070030020700300209004c0209
004c019d0030019d003002070032020700320209004c0209004c0309004c
0309004c015f004c015f004c015200180152001801c3001601c3001601bf
001c01bf001c032700510327005103270051032700510000ffab03bdffff
041a0000041a00000416000104160001041a0001041a0001041a0001041a
000104010002040100020401000204010002015f004c02aa00c801ce00c8
03f100c804ec000f044d00ad0440001e0462005d049d006104ff001b057e
000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a001c
025000ac0226001b042800ac070900aa052affd6054c0063062f006104e4
000f045800ac03ad004703ab0046043f000f03e6000f0550005e052200aa
0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac0603
00ac054700ac07b700ac071400ac04a100230204ff3a054c0063052200aa
052200aa052200aa052200aa052200aa04a1002304a10023061bffcc050c
005b050c005b04280073054c0063054c006303ca0008089500ac081500ac
050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe103e8
006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522002f
052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a1002303e8
00ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444ffe7
035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e02a1
0007050a00630469001a04a0001b04a10023045a00ac045a00ac045a0099
0444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e8008403e8
008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc00ac
04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac0428
00a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d700ac
052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063054c
0063042200ac042200ac045800ac045800ac04580077045800ac03ad0047
03ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f03e6
000f052200aa052200aa052200aa052200aa052200aa048a0022048a0022
071e003d071e003d042700300427003003e6001e03bf001503bf003b03bf
003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2003b
0444003803ad005903b500ac046a0027043400990434000403b3005a0434
00600430005d0271ffee064300990434009903a300990241002703b40014
044c0099053e0059043400990321005102e0002102ae002103fc001b0329
005903ca004b0366003a03680050075d006003c00099061e009903d50056
01d6ff570438005a0434007a0434008804340088043400880434008803fb
006203d5005803d50058062f005c044cffe203c4003503a3003a0438005a
0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf03d5
005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02caff73
02ca00100434ffff0434008703ca004b0434005104cd0060040e0052034c
005903d5005c03fb005d0438005a0438004f0438005a0438005a039f0022
0289009804eb009902ae002106930060069200600362fff0032100510329
00590394006403fb003c0240fff70240fff70434006002ff002703e20022
03720049040e00720321005101f300ad032900ad049700ac029b010a03d5
005c0434009904340099043400860362005a043400600434006004340060
043400600434006003fb005d03fb005d03fb005d03fb005003fb005d0271
002503c40035043400990434009904340067043400130434009401d6ff1e
01d6ff1e01d6ff5a03a3009903a3009903a3006b01d6008901d6ff5801d6
ff5801d6ff59066400990664009906640099043400990434009904340086
043400860438004f0438004f0438005a0438005a043400990434009902ca
009902ca008a02ca000a02caffff03210051032100510321005103210003
0321005102ae002102ae002102aeffd202aeffd204340089043400550434
007b0434004d04340086039d0001039d002205b8003505b8003503770029
03770029039f00220329000103290059032900000434008602aeffc605b8
0035039f002203d5005c01f100530241002703d5002902aeff9604630099
03db00990344005903c200360362003b02ee003c03190099053b00550471
000803ee00a203ee001403cb004803fc006d0477003204d3000803ee0053
0380007204a40066038a00680350ffe80482006c03f300130232008e01ec
fffe03c900a1063200910491ffe804aa00660592006e0433000803ed00a1
034f0053035b004b038300080359001c04b10066048d009f03b700100369
0044039000570393006b0398005507ce00a1085500ac055a00a105cd00ac
06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f048d
009f048d009f048d009f03f4001003f40010055cffe20482006c0482006c
03c9005204aa006604aa00660390000007ce00a1085500ac0482006c0655
00a1046200a0049100a103f4ffc503f400100380ffb10380004d01ecfed0
01ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f0390
00570478008c049300a103c50057038c004403f40010038000a104aa0066
04aa006604aa006604aa00660383001003f4001003cb002402e000270359
ffeb0339005004040027048d002703fd00210380ffff023e0000048b0066
03ed00270383000c039000550339005001f300ac032900ac049700ac0260
00ed03f40010040400a1040400a10404006e03cb006d046500a1046500a1
04650081046500a1046500950380002a0380002603800041038000000380
004a035000a10482006c047800a1047800a10478009a04780020047800a1
01ecff2a01ecff5503c900a103c900a103c9007e02e000a102e0000002e0
002802e00024060600a1060600a1060600a1049100a1049100a1049100a1
049100a104aa006604aa006604aa006604aa006603c500a103c500a103ed
00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f0000
034f00490359001c0359001c0359001803590019048d009f048d0079048d
009f048d0075048d009f03fd002103fd0021063e0037063e003703cc0036
03cc003603830010036900050369004403690020047800a10359000a063e
00370383001003f4001002e00027035effa703c5002703ed00a104b600a1
03ef00a10369004403cb004803500060039900a1043c0025043c00250447
002504470025043c0025043c0025044f0025043c0025043c002506760025
067600250682002506820025067600250676002506890025067600250676
002504750021047500210475002104750021047500210475002104750021
047500210475002106d9002106d9002106d9002106d9002106d9002106d9
002106d9002106d9002106d9002103d50096043400600434009904340099
0362003b039b005a043400600434006003fb006203fb0062051b00650362
005a0362004b0435004b043b005d0241fff704340060043400600451005a
039d001f03d0001e0433009404340099043400990241002701d6fff30232
00940267002102e7ffa702f9002701d60099048600990663009406630094
066400990434ffc204340099045300990438005a05b3005a059200640536
005502ca002302ca002302ca002302ca009902ca0099028e0094028e0023
03980085039800850321005101eaffd50242fff801eaffd5028affc402ae
004102ae002104a400270476004904550090039d002205b80035039f0022
0351001f0329005903d3005903bc004b03bb0056039400640394005e0394
00640362005a0507005f03d50099043b005a046b005a04470099028affc4
03a300270319009904340060039400640394005e066f006006d400600719
006004f3002103c40021057a0021060c002504ae00990469009903ef002c
03ef00700434ffd5044dffd503d60010050fffe3062f00620412002703cb
006a0444009904590030033f0099036f005501d600850227000003910098
02f000300569005f045300990474005a03cb006304a9006604a800660528
001406cc00560368003a0438005a0438005a03a8009903cf005203cf0052
033f001b046a009a0465004b05c7004b0664014c03de0020060e0035034f
0042032f00380321005103d0001e02f2009903de00200450009903a80099
052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e02a8
008e02a800500344005a035b008e01a6008e01cb000502e0008e025b008e
046d008e0375008d0375008d0375005a02b2004802d8008e029b00570257
0004031400570445002202ac004402ac006c02e50048042b004402e5006c
02e5004802b8004702b8004702770046027700460297002a016300610297
006c0456006c02e6006c02e60045024e003602e6004502e6004502e5006c
01e3002302e9006c02db00460456006c0285001f024a000d02be006c0246
00230283002803650055025f00180163006101f6006c02e9006c0285001f
02be006c0246002302e5006c03650050025f00180694009404bbffa704bd
0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d0014
030fffa70329ffc203c4003b0304006e03c4003506880021024100270269
00270468002704db002704c40027043400990451006002710025054c0060
041e009901f0006b067f0099045100990434009902ca006a037b005102fa
ffd5039d002203ed0029033c0059047c005c04d800600434006003fb005d
0362005a0362004b03fb006201d600850362003b0233001e04d800940376
004b02e5006b024e0044026e004402b200440277004201c1002401c10007
0297002a02e9006c0192000001aa006c0163006d0192000001e500000194
006c017b00530224006e0456006c0456006c031b0000031c006c0304006e
02e600450336004502300042016dffd801e4002302e9000002b8002c02e6
006e02e6006e0285001f023700420294004202a600420272003c02e60045
02e9006c02e9006c016dffd801f6006c01f6002502030025028b006c03ef
002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce0084
01ce0084029900650299006c03fc004503fc0065044b0044044b00440251
00f20256000002540000025100f203270000025400000256000002390098
0239009801ce008401ce008402aa008202aa008202aa008202aa008202aa
004b02aa009302610024015e006c02300042027e00280299006c03100096
031000960310009603100096031000960457009604570096045700960457
009603100043045700430457004304570043045700430457004304570043
0457002f0457002f0457002f0457002f0457002f0310002f045700250457
00250457002504570025045700250310001a0457001a0457001a0457001a
0457001a0457001a03100042045700420457004204570042045700420457
004204570096045700960457009604570096031000420457004204570042
045700420457004204570042045700420457002f0457002f0457002f0457
002f0457002f0310002f0457002f0457002f0457002f0457002f0457002f
031000260457002604570026045700260457002604570026031000420457
004204570042045700420457004204570042045700960457009604570096
045700960310004204570042045700420457004204570042045700420310
002604570026045700260457002604570026045700260310002304570023
045700230457002304570023045700230310002f0457002f0457002f0457
002f0457002f0457002f0310004b0457004b0457004b0457004b0457004b
0457004b0457009604570096045700960457009603100042045700420457
00420457004204570042045700420310001a0457001a0457001a0457001a
0457001a0457001a03100024045700240457002404570024045700240457
00240310002f0457002f0457002f0457002f0457002f0457002f0310004e
0457004e0457004e0457004e0457004e0457004e04570096045700960457
00960457009602aa006202aa006203290000049a00000359002b02aa0085
02aa008502aa00c802aa00c8029100840254000003c1ffff03c10000039a
0000022400bb02aa009802aa009802aa009802aa00980440fff60440fff6
0302009803270000032700000324000002aa0000071200d4071200d402ac
004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d90000
01d90000028900000289000002890000028900000000fc660000fc660329
000003290000032900000329000003240000032400000329000003290000
0329000003290000032400000324000003f4000003f4000003f4000003f4
0000032400000324000003270000030c000001ffffff01d9000003270000
0329000003290000032900000466000004660000046600000466000003f4
000003f4000003f4000003f40000023200b6023200b6054c006304440061
04440043044400610444004303e6000e0456fec803e6000e03ad00ac054c
0063045d001e059700ac04a2000f04440061042200ac043200640375005a
037500420478000604d700510684001404120076041200030362005a0362
003b0362005a0362003b053b0055037800940438005a0399001404c50099
04a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d03cb
004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1005b
03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a04a1
fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1ff58
04a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1
ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665fe62
0665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe8204bd
fe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1fe82
05d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea404fc
fe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1fe82
05d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa06c0
fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261feaa
0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e0204
ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054cfecf
054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe4703e6
fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550ff06
05f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff0605f2
fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714005e
0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c075d
feaa048a0061048a0061048a0061048a0061048a0061048a0061048a0061
048a0061048a0061048a0061048a005a048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a0061048a0061048a0061048a0061
048a0061048a0061048a005a03a5005903a5005903a5004f03a5005903a5
005203a5005203a5005903a50059044c0099044c0092044c008f044c0094
044c0099044c0092044c0092044c0094044c0099044c0099044c0059044c
0099044c0099044c0092044c008f044c0094044c0099044c0092044c0092
044c0094044c0099044c0099044c0059023200010232ff860232ff830232
ff62023200000232ff860232ff860232ff600232ff100232fecf0232ff60
0232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a0438
005a0438005a0438005a0438005a0438005a0438005a0412007604120076
045500900455008204550082045500840455009004550082045500820455
008404550012045500100455008004550090045500900455004104550071
0455007d0592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
00640592006403f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001005b9001005b9001005b9001005b9001005b9001005b9001005b9
001005b9001005b90010038000a10380004903800049038000a103800049
03800049038000a10380007b047800a1047800a1047800a1047800a10478
00a1047800a1047800a1047800a1047800a1047800a10478006f047800a1
047800a1047800a1047800a1047800a1047800a1047800a1047800a10478
00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1
063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec000901ec
ff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ecff8c
01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa006604aa
006604aa006604aa006604aa006603c500a103c500a1038300100389001a
038300100389001a038300100389001a038300100389001a038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a0383fff50389fff5038300100389001a0383
00100389001a04b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006606750066
067500660675006606750066067500660675006606750066067500660675
006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b
04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fc
fef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060dfe78
0599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc50665
fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c000ac
06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a06c0
fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6fe7b
07d5fe7c0714fe6101d9ffff01d900000289000002890000039a00000329
0000032900000324000003290000032900000324000003f4000003f40000
0324000001d9000003270000030c0000023200b601c4007901c4007901c4
0079054e00ac0440000a042200ac0366001b044100ac06b2005503ca004b
04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac052b
00630444006103e6000f03e6001e03e6001e0476003005d2000f049a0074
04720074047200ad05f6002805f60028020400ac06680055045f00ac050e
000304fc00ac04fc00ac04720074070700ac04a1002304a10023061bffcc
03e8005905250064052500640668005503ca001503ca004b052200ac0522
00ac054c0063054c0063054c00630462004c0438000f0438000f0438000f
04720071035300ac061800ac0366001b048500300427003004400035065d
0037061d003d041a003d070f0003072800ac0515005b0521000f03ca005a
05090003045f009903df00270434009902f90027039f009905c0003e0362
004b03f4009903b6009903eb00270447000a0471009904d8009905f10099
046f00590362005a0319000a039d0022039d002203b2002904c5000a03ea
004203c0004203c0009904c8001904c800190583003e03cf009904210016
044700990454009903c0004205b6005f020400ac03d5002e03d50058062f
005c03fb005603fb006203fb00620583003e0362000803bc004b04530095
045300970438005a0431005a0431005a038b0004039f0022039f0022039f
002203c0002902c400990554009902f9002703b100290377002904340060
06550060059b004b03ba004b061f001606500099044500500481000a0362
005a042b001604a800a103e8002703c500a10314002703ec00a105d00044
03800057041c00a103ca00a103ca002704530017049800a1050100a10677
00a104a2006503cb006d0359001c0383001003830010041300360545001c
041a006d03fa006d03fa00a1054f0020054f002001ec00a10578004403ff
00a1045a0001047800a104a100a103fa006d062f00a103f4001003f40010
055cffe20380004204a2006504a200650578004403800003039000570489
00a0048900a004aa006604a9006604a9006603e4001e039d001e039d001e
039d001e03fa0044031400a1058300a1031400270417003603cc003603e8
004a0588004a0559007203d8007205d20001061900a10488006c0444001c
03800068045c00010400000008000000040000000800000002af00000200
0000015500000450000001bc00000199000001000000000000000000ffdc
0000ff2a040e0024040e00240329009003fcfff901ff008c0358008801c4
00540334005404a400540476010a03fcfffb0273004404ee004f04440061
0444006103ad0027040e005306640099052a0020076000ac064800ac071e
002005f500ac0428001b03e6000f08a80032043afffe0482002104b2005b
0495002003ad0020044400610621004906210065057800e6059d00e603fc
005e070100bc03fc0062045201d7045200be0400fff6040001bd040001bd
0400fff6040001bd0400fff6070900aa045c005b047200ad0444007104d0
003a0562007403c9001006640094042f005f04180015035a0053040b0030
0441006f03260010032700030327000303270003025400c0025400c00254
00c8025400c802aaff8c02aaff8c04e0005907f4000a07e2001407980003
076c0061064100ac050b002406a700ac05c80055073f00ac03ca00210600
009004b8001c085c0063054c003b076c0061076c006104440061056a0022
053400990433001b05af00990480001b060b0099034e001605a9009403d2
ffc40745005a049c005a06420059056a00220362005a06b8006d05c300a1
0453001205c000a1050b0046066400a10380002205580087042e002207f1
0066050f006806b0006d06b8006d039c006d03c7009602aa00db040e008d
0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b0aa0
00b404d5009202d5008302d5008304d500b202d500700aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40000
fc48000000000000fd170000000000000000039a0000039a000003240000
0324000003240000039a0000032400000324000002560000032900000329
000003bdffff02aaff8c055001e5027f008403240000039a000002560000
00000027000000e1000000ed0000001b0324000003240000032400000324
000003240000032400000324000003240000032400000324000000000000
000000000000000000000000039a0000039a0000034600000000002703c1
0000030f00000346000003460000039a0000034800000348000003a20000
03a2000002560000035f00000000009e00000067000000220000009e0000
009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6000e03e6000e03f4001003f4001003f4001005b8001005b8
001005b80010047800a1047800a10478006f063c00a1063c00a1063c006f
0383ffc80383ffc80383001004b1006604b1006604b10066067500660675
0066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000fbfa
0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000
fc000000fc000000fc000000fc000000fc000000fc000000fc000000fdd0
0000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff0000
fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000fd34
0000fd340000fd340000fd340000fd600000fd600000fd730000fd730000
fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000fca1
0000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae0000
fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000fdd0
0000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc650000
fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000fc65
0000fc650000fc650000fc650000fc460000fd790000fcde0000fcde0000
fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000fce3
0000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde0000
fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000fc97
0000fc970000fc560000fc560000fc910000fd820000fd820000fd700000
fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000fd8f
0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb0000
fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000fd71
0000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc260000
fc290000fc290000fc270000fc270000fc270000fc270000fc350000fc35
0000fc350000fc350000fdb60000fda80000fda80000fce30000fd460000
fd460000fd470000fd470000fd020000fd020000fd020000fd020000fc65
0000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000
fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000fc37
0000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd330000
fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000fbff
0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd0000
fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000fc6a
0000fc6a03e6fe940389ffcb0389ffcb0389001a01d60089043400600434
00600434006004340060043c0025067600250aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d00a3
040e0023040e0054040e001b040e002e0557001e040e001e075700260271
0024027100250430000004e300ac0366000f0476006203cb005a0438ffff
039fffe106d700ac04a10023053f00ac05a2005d02ca00350438005a0380
0072016dffd802f5001c03ad004703bf003b0254007801de006402540078
01de006404fc00ac04340099058b000f056d002103ca004b038f005a03c1
00220366001e046800220411001e035000a1034f0049084900230610005c
081400220671005c07cc0022063b005c068800230545005c068800230545
005c068800230545005c04440057036200500428001203a3ffe9042800ac
03a300990428001203a3ffe9040900ac027b0099035d001201d6fff6054c
ffe20438ffec05c8006304b9005a091b0063070f005a042200120434ffea
054e0037052e003705cc0014067800250562006304340060070c006305a4
0060041e00780335005004a7005303fd0032048a0022039d0022071e003e
05b8003503bc004b03a7004b0422001c0434ffea0422001c0434ffea03a3
00ac032000990346003c0346003c03df001e03700014042b005c042b005c
0262003c05690060031b009907a300990569009902ca0099051900a1034e
002103b70064054cfff604340061035f00ac02ca009903c4003503c40035
03c40035035d001201d60099052400ac04340099035f00ac02ca0099049f
005a03b7005a04fc00ac02fe0000054f00ac046200990461ffcc038dffe1
0362005a043400990504000f053f005003adffd602710025051e00630444
005a053800630437005a051e00630444005a050cffb803c4000804280008
03a30008052afffe0434001c0458002602ca000c03ad003a03210051058d
000f03ca004b053c006103ec00000428003003e6000f052e000a035b0024
047b00450664009903ad00590422005b06d700ac020400ac08d50022048a
fff2062f005c03a4006f03fbfff204c80015027100250434006002a60014
01d6ff1d01d6fffa06640099043400990434009903c7004903c70049043c
007406cc005a06cc005a06cc005a070f005a070f005a0401006403ed00a1
028d009903dd00990393001404a6001403b2003f057b003f01eaffd50434
009404a4002706640099066400990470fffa0369001203be001203690012
041a00290377ff4a041aff4a0377fef003510022030c008402e9006c01ee
0000015effc7031d00000434006004b100660655000305580016057900ac
056c009906550052062c00380562006304340060071e003d05b800350428
00ac03a300990721000305db0016073800ac060c0099051f00ac04500099
04d100ad043c00990512ffec0447ffc2096e000508030017049b0005040d
0017050b0003043c0016052400280000ff8f0000ff7e0000ff300000ff10
0000fefc0320007c0000ff2f0000ff310000ff530000ffb70000ff4c0000
ff4d0000ffad0000fec30000fdc5000000000000ff4d0000ff4d000000d5
0000fecb0000fe4b0000ff320000ff460000ff2f0000ff550000ff5e0000
ff4d0000feb70000ff660000ff4d0000ff320000ff2f0000ff5f0000ff55
000000000000fe4d0000ff37000000000000000000000000000000000000
0000000000000000000000000000000000000000ffb70000ffb700000000
0000000000000000000000000000ffb70000ffc3027300450000ff3101de
00a10000048400000057022400960000ffa80000ffa80000ff190000fe6e
02eb009400000000044b006a046b006a03f3002b02f30019038f0018048f
008c049a008c01da009902530018049d0099046e006b0477006b01da0099
0390001803a1001803ce002e0378001c04ae009904b3009904a5005404ad
005401da009902eb002b048b0028043100150427005b0439005b0454006d
0464006d037a002003e20019044b008c0451008c03900018058c004a0591
004a04d7003604e5003603b5009903b5009903b5009901ff002a0359002b
01da00990000ff0603b50099043100150577006904bb001805bb008c04fa
002e04a4001c05da009904bc00180603003603fc0046044b006a044b006a
046b006a03f3002b03f3002b02f3001902f30019038f0018038f0018049a
008c048f008c0242001e01da009901da00990299001e0477006b0242001e
039000180390001803a1001803ce002e03ce002e0378001c03adff6a03ad
ff6a04ad005402eb002b048b00280439005b0464006d0454006d03e20019
0451008c039000180591004a058c004a058c004a0591004a0591004a04e5
003604d7003603e8001c042f001d05f400ac03bf00370329005903bf0037
0329005903ad004703210051025000ac02320094050e008204010064055e
0050037d003208790063073500640440ffd703c2ffcd06d7000f05df000a
062600ac057b00990708006305c6005a06f000ac058d009904a10022039d
002205c800550480001b06f000ac059b009904c8001403d20022051c002c
0455001d05d20005050d001705b7000304d1001607a900ac05f70060054c
00630438005a054c00630438005a091b0063070f005a0655007e0000fea2
07e2006f074b00c807e2002603d1007d0000006400000064000000640000
0064000000640000006400000064000000640000fe480000ff32036e0000
025b005e052700010477001703b700470338005107c9004b06c2004b0706
007405e6004205b5000104ed00170530000f043d000a03e6000f0319000a
051c00ac0468008503e6000f0319000a05340014048c0014047200ad0434
0099071a00ac060f0099091b0063070f005a054c00630431005a03a20064
02e5006400000064040900ac036d009903e6000f03190014052200ac0453
0099028d0007042800ac045a00ac042200ac0422005b04ec00ac03e6000f
03e6000f050c005b042800ac04280030028d0007044400610444003803bf
003b03ad00ac03ad005906d700ac052a00ac035d00ac03ad0047045800ac
0458004d04950024048a002204fc00ac050c0094028d00a9071e003d0427
003003e6001e045a005904a1002304a1002303e800ac03e8006c020400ac
054c0063052200aa052200aa035d001204ec005d02050097020500970395
00970395009702000097020000970454006403970064053d004b0500000c
083b003205c30031038200310a1500320a1a00320000fff6042d004b042d
004b06cc000005aa00c806f400c803d300620266006a033e004507640031
045900000266006a01ffffa8037e006a03ca0075005fffa8041001800410
0157041000ba04100047041000c3041000b5041000950410004c0410004c
041000aa057300c8022300490243007103400056035b00c50a6d008405ce
00a3045f00880410018004100155041000b8041000430410006f04100076
041000930410004c0410004c041000aa024400b102820085035a00850175
009c0200008c0200008c02bf008c02bf008c02bf008c02bf008c02bf008c
02bf008c02d0009602d00096020f007b0201008c0201008c02180071031e
009e031e009e0282ffa80282ffa80282ffa804be006704be00d202820068
0282ffa80282002d02a000000282005b0282006c0282ffa8028200680282
ffa80282006d0282ffa80282006a0282ffa8028200ab0282ffa80410007d
041000c701ee006f0243006f03470070040600540350006f0360005d038e
003903ea003903ea00390364003901ee006f0243006f0347007004060054
03d9007003dd005d0393003803ea003903ea0039036400390398005d0329
003c027000d2027000b6027000490270001e0270004a027000410270002c
0270001b0270001b02700039027000130270001702700023027000200270
0045027000120270003702700025027000260270001e0270002802700019
0270001b0270001402700019026600de026600c302660069026600250266
006c02660068026600580266002b0266002b026600640266003c02660042
0266005702660048026600750266003e0266005e0266004f0266004f0266
002e026600510266004402660047026600400266004404c4003100000000
0000000004c4003104c400310000ffa80000fef50000fef90000fee40000
fef50000fe1e0000ff090000fe840000ff310000ff5e0000ff4a0000ff5e
0000ff220000feeb0000ff170000ff2a0000ff490000ff250000ff290000
ff650000ff120000ff4b0000ff480000ffaa0000ff480000ff440000ff21
0000ff350000ff370000ff930000ff490000ff2a0000ff150000ffad0000
fe390000fe920000ff030000ff190000ff3b0000ff220000fe9f0000ff7b
0000ff890000ff480000ff6a0000fe9f0000ff120000febb0000ff2a0000
ff610000ff610000ff840000ff690000ff480000ff290000ff220000ff29
0000ff1e0000ff150000ff300000ffb20000ff4c0000ff3a0000ffb20000
ff4c0000ff3a0000fee50000feda0000fee50000ff620000ff1e0000ff2a
0000ff250000ff980000ff980000ff980000ff980000ff2d0000fed20000
ff470000ff170000ff6f0000fefc0000ff0b0000ff230000ff290000ff21
0000ff240000ff150000ff2a0000ff220000ff3c0000fefc0000ff480000
ff130000ff070276000001790005018500250185007f0179ffd10179ffda
0185fffa0225007f0179ffc70179ffcb01deffbc01dd000401de005d01de
007f01ddffe001ddffd901de003201de007f01ddffc001ddffc40669004c
0669004c0669004c0669004c0669004c0669004c0669004c0669004c0669
004c0669004c0669004c0669004c0669004c0669004c0669004c0669004c
0669004c0669004c0669004c0669004c0669004c01f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ff9501f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ff9d0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa806e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c
04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca
004c04ca004c04ca004c04ca004c04c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8051dffa8
051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa804ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c03470058034700580347
005803470058034700580347005803470058034700580347005803470058
034700580347005803470058034700580347005803f1005703f1005703f1
005703f1005703f1005703f1005703f1005703f1005703f1005703f10057
03f1005703f1005703f1005703f1005703f1005703580000035800000358
000003580000035800000358000003580000035800000358000003580000
035800000358000003580000035800000358000003580000036d00000358
000003a9000003a9000003a9000003a9000003a9000003a9000003a90000
03a9000003a9000003a9000003a9000003a9000003a9000003a9000003a9
000003a9000003a0000003a90000072b004c072b004c072b004c072b004c
072b004c072b004c072b004c072b004c072b004c072b004c072b004c0507
ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa8
0507ffa80507ffa80507ffa80566ffa80566ffa80566ffa80566ffa80566
ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80791004c
0791004c0791004c0791004c0791004c0791004c0791004c0791004c0791
004c0791004c0791004c0846004c0846004c0846004c0846004c0846004c
0846004c0616ffa80616ffa80616ffa80616ffa80616ffa80616ffa8063a
ffa8063affa8063affa8063affa8063affa8063affa80865004c0865004c
0865004c0865004c0865004c0865004c061c003b061c003b061c003b061c
003b04d5ffa804d5ffa804d5ffa804d5ffa804f4ffa804f4ffa804f4ffa8
04f4ffa8063b003b063b003b063b003b063b003b04b5004c04b5004c04b5
004c04b5004c04b5004c04b5004c04b5004c04b5004c03dfffa803dfffa8
03dfffa803dfffa803dfffa803dfffa803dfffa803dfffa8038effa8038e
ffa8038effa8038effa8038effa8038effa8038effa8038effa80401004c
0401004c0401004c0401004c0401004c0401004c0401004c0401004c06c8
004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c
06c8004c06c8004c02dbffa802dbffa802dbffa802dbffa802dbffa802db
ffa802dbffa802dbffa802dbffa802dbffa80351ffa80351ffa80351ffa8
0351ffa80351ffa80351ffa80351ffa80351ffa80351ffa80351ffa8072f
004c072f004c072f004c072f004c072f004c072f004c072f004c072f004c
072f004c072f004c04f9004c04f9004c04f9004c04f9004c04f9004c02db
ffa802dbffa802dbffa802dbffa802dbffa80351ffa80351ffa80351ffa8
0351ffa80351ffa80506004c0506004c0506004c0506004c0506004c0556
003b0556003b0556003b0556003b0556003b0556003b0720004c0720004c
0720004c0720004c0720004c0720004c0720004c0720004c0720004c0720
004c0720004c0720004c0720004c0720004c03bdffa803bdffa803bdffa8
03bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bd
ffa803bdffa803bdffa803bdffa803beffa803beffa803beffa803beffa8
03beffa803beffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa80635
004c0635004c0635004c0635004c0635004c0635004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c0736004c0736004c0736
004c0736004c0736004c0736004c0736004c08d9003b07a5ffa807d4ffa8
0909003b045f004c0469004c0469004c0469004c045f004c045f004c045f
004c01cdffa801d9ffa801d9ffa801d9ffa801cdffa801cdffa801cdffa8
020cffa8020cffa8020cffa8020cffa8020cffa8020cffa8020cffa804ad
004c04ad004c04ad004c04ad004c04ad004c04ad004c04ad004c036e0059
036e0059036e0059036e0059032fffa8032fffa8032fffa8032fffa80392
ffa80392ffa80392ffa80392ffa804140059041400590414005904140059
045b004c045b004c045b004c045b004c045b004c045b004c045b004c045b
004c045b004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80495004c0495004c0495004c
0495004c0495004c0495004c0495004c0495004c0495004c0524003b0524
003b039e004c0524003b040fffa80411ffa801f6ffa80411ffa8033effa8
033effa802dcffa8033effa80378004c052e003b0378004c052e003b02c6
004c02c6004c02c6004c02c6004c02c6004c0378004c0378004c039e004c
039e004c0378004c037a0000037a0000037a0000037a0000037a0000037a
0000037a0000037a0000037a0000037a0000037a0000037a0000037a0000
037a0000037a0000037a00000317004c03cb000003cb000003cb000003cb
000003cb000003cb000003cb000003cb000003cb000003cb000003cb0000
03cb000003cb000003cb000003cb000003cb000002c9004c055b004c055b
004c055b003b055b0031055b0031055b004c055b004c055b004c055b004c
055b0039055b004c055b004c055b004c055b004c055b004c055b004c055b
004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa802abffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80497004c0497004c0497004c
04970046049700460497004c0497004c0497004c0497004c0497004c0497
004c0497004c0497004c0497004c0497004c0497004c0497004c055bff3b
044bff0007dc004c07dc004c0306004c02d0001507dc004c07dc004c01f6
ffa801f6ffa80251ffa80251ffa802d0001502d000150301007f0301007f
036e005903d8007f0433007f0562004c05bc004c05a90000060b000005a9
0000060b000005a90000060b000005a90000060b000004fa000005ab0000
0441ffa804fa000005ab00000441ffa80467004c0467004c01de007f0185
007f043affd9043afffd0458003b0458003b04d4000304d4003b04f2003b
04f2003b08a4004b072c004b08a4004b072c004b09e90030083f006b0763
005f06cd0000095500000960ffe4096000000960fffe0930ffff0185ffd9
01de000402d2007c02d2007c0179007f01dd007f0469004c01d9ffa8020c
ffa804ad004c04f5003b04f5003b04f5003b04f5003b054e003b054e003b
054e003b054e003b04f5003b05ab000005ab00000400ffa80444ffa80444
ffa80556003b0556003b0373000003730000037300000373000003730000
037300000373000003730000037300000373000003730000037300000373
000003730000037300000373000003a00000037300000387000003870000
038700000387000003870000038700000387000003870000038700000387
000003870000038700000387000003870000038700000387000003470058
034700580347005803470041034700580347005803470058035800000358
000006c8004c06c8004c06c8004c06c8004c06c8004c06c8004c02dbffa8
02dbffa802dbff8d02dbff6f02dbffa802dbffa802dbffa803bdffa803bd
ffa803bdffa803bdffa803beffa803beffa801cdff2f032fffa801f6ff89
04f5003b03b4ffa802dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff28032dffa8032dffa8032dffa8032dffa8032dffa8032dffa80245ff28
0245ff280245ff280245ff280243ff280243ff2801f6ffa801f6ffa801f6
ffa801f6ff3301f6ff2301f6fed101f6ffa801f6ff5c01f6ff5c01f6ff22
01f6ff5d01f6ff5501f6ffa801f6ffa801f6ffa801f6ff3301f6ff2201f6
ff9401f6ff2201f6ff2201f6ff2201f6ff2201f6ff2201f6ff2201f6ffa8
01f6ff3301f6ff2201f6ff2201f6ff4e01f6ff2201f6ff2201f6ff2201f6
ff2201f6ffa801f6ffa801f6ffa801f6ffa401f6ff9401f6ff4101f6ffa8
01f6ffa501f6ffa501f6ff9201f6ff9c01f6ff9b01f6ffa801f6ffa801f6
ffa801f6ffa401f6ff9201f6ffa801f6ff9201f6ff9201f6ff9201f6ff93
01f6ff9201f6ff9201f6ffa801f6ffa401f6ff9201f6ff9201f6ff9201f6
ff9201f6ff9201f6ff9201f6ff920251ffa80251ffa80251ffa80251ffa4
0251ff940251ff410251ffa80251ffa50251ffa50251ff920251ff9c0251
ff9b0251ffa80251ffa80251ffa80251ffa40251ff920251ffa80251ff92
0251ff920251ff920251ff930251ff920251ff920251ffa80251ffa40251
ff920251ff920251ff920251ff920251ff920251ff920251ff9201fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbff9501fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ff9d0233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80255ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa801fbffa801fbffa801fbffa801fbff3301fbff2301fbfed101fbffa8
01fbff5c01fbff5c01fbff2201fbff5d01fbff8801fbffa801fbffa801fb
ffa801fbff3301fbff2201fbff9401fbff2201fbff2201fbff2201fbff22
01fbff2201fbff2201fbffa801fbff3301fbff2201fbff2201fbff5201fb
ff2201fbff2201fbff2201fbff2201fbffa801fbffa801fbffa801fbffa4
01fbff9401fbff4101fbffa801fbffa501fbffa501fbff9201fbff9c01fb
ff9b01fbffa801fbffa801fbffa801fbffa401fbff9201fbffa801fbff92
01fbff9201fbff9201fbff9301fbff9201fbff9201fbffa801fbffa401fb
ff9201fbff9201fbff9201fbff9201fbff9201fbff9201fbff920233ffa8
0233ffa80233ffa80233ffa40233ff940233ff410233ffa80233ffa50233
ffa50233ff920233ff9c0233ff9b0233ffa80233ffa80233ffa80233ffa4
0233ff920233ffa80233ff920233ff920233ff920233ff930233ff920233
ff920233ffa80233ffa40233ff920233ff920233ff920233ff920233ff92
0233ff920233ff9202dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff28
02dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff27032dffa8032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032d
ffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8
032dffa8032dffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa80245
ff280245ff280245ff280245ff280245ff280245ff280245ff280245ff28
0245ff280245ff280245ff280245ff280245ff280245ff280243ff280243
ff280243ff280243ff280243ff280243ff2802f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff270694004c0694004c0694004c0694004c0694004c0694
004c0694004c0694004c0694004c0694004c0694004c0694004c0694004c
0694004c0736004c0736004c0736004c0736004c0736004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0668004c0668004c0668004c0668004c03d0004c03d0004c03d0004c03d0
004c0185ffc70185ff9601de005d01de003201f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ff8201f6ffa801f6ffa801f6ff8201f6ff8201f6
ffa801f6ffa801f6ff8201f6ff8201f6ff9401f6ff8201f6ff820251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbff8201fbffa801fb
ffa801fbff8201fbff8201fbffa801fbffa801fbff8201fbff8201fbff94
01fbff8201fbff820233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa8051dffa8051dffa803470058034700580347005803f1
005703f1005703f100570507ffa80566ffa802dbffa80351ffa803b4ffa8
0458003b04f2003b0458003b04f2003b0282ffa80000feb70000fef50000
fef90000fee40000fef50000fe1e0000ff090000fe840000ff310000ff5e
0000ff500000ff5b0000ff2a0000feeb0000ff2b0000ff2a0000ff490000
ff2a0000ff2d0000ff650000ff120000ff4e0000ff4e0000ffb10000ff49
0000ff440000ff210000ff350000ff370000ff9e0000ff490000ff2a0000
ff150000ffb10000fe390000fe920000ff060000ff2c0000ff3b0000ff21
0000fe9f0000ff7b0000ff950000ff480000ff6a0000fe9f0000ff120000
fec80000ff2d0000ff680000ff680000ff8b0000ff690000ff490000ff29
0000ff220000ff290000ff1d0000ff1c0000ff2a0000ffba0000fedf0000
feda0000fed90000ff620000ff140000ff2a0000ff2a0000ff980000ff98
0000ff980000ff980000ff2d0000feda0000ff4f0000ff1f0000ff6f0000
fefc0000ff1f0000ff270000ff2d0000ff210000ff2d0000ff190000ff2a
0000ff2a0000ff3c0000fefc0000ff4e0000ff180000ff1504be006704be
00ee0a07006b0321ffa80341001e0242001e02280071024c006a024c006a
0000ff1d042d004b0000ff8e0000ff2d0000ff870000ff490000ff2d0000
ff2c0000ff560000ff240000ff990000ff420000ff970000ff3f0000ff92
0000ff620000ff3f0000ff3e0000ff650000ff2e0000ffac0000ff660000
ff840000fef40000ff480000ff480000ff1d0000ff350000ff560000ff37
0000ff560000ff090000ff090000ff1d0000fe760000fe760000ff5f0000
ff5f0000000f0000000f0000ff9f0000ffae0000ff770000ff6c0000ff59
0000ff6e0000ff000000ff8e0000ff2d0000ff870000ff2d0000ff2c0000
fec10000ff240000ff990000ff350000ff3f0000ff920000ff3f0000ff3e
0000fedc0000ff2e0000ff9f0000ff570000ffa00000ff4f0000ff4e0000
ff240000ff480000ff1d0000ff350000ff5a0000ff370000ff560000ff09
0000ff090000ff1d0000ff240000fefb0000ff720000ff770000ff770000
ff770000ff6e0000ff740458003b043a003b0461003b0443003b04f2003b
04d4003b04f2003b04d4003b05370004080700000866000009380000095d
0000055500000811ffdc0870ffdb0942ffdc0968ffdb0648004c0543004c
05f7004c0659004c07d6004c0833004c08b7004c0941004c09c9004c09cf
004c08f2004c0910004c073b004c0683004c053e004c0694004c0637004c
0585004c0647004c0647004c0557004c0557004c060c004c060b004c0617
004c075b004c077b004c079e004c07fa004c077b004c0813004c079e004c
078e004c09e4004c09d7004c068a004c048a004c071e004c06a4004c074a
004c0788004c0865004c084a004c0720004c06a8004c0720004c04ad004c
0722004c0453004c0688004c0688004c04a5004c04a5004c0688004c0688
004c0405004c0405004c0720004c051a004c0720004c0720004c05f5004c
0720004c0930004c091a004c04ba004c04cd004c064b004c070a004c0825
004c067a004c0624004c04e1004c051c004c04a5004c055a004c04ce004c
04a5004c04a5004c04ba004c04ba004c045e004c045e004c052e004c0570
004c0626004c0626004c05f5004c0668004c08f0004c07ed004c0960003b
0000ffaaff77000000010000192a043a00170108000800020010002f0087
00001236ffff0004000100>
<0000000e00ae000000030000000002100000000000030000000700760210
0001000000000000010802860001000000000003000e038e000100000000
0004000e039c0001000000000006000e03aa0001000000000007003b03b8
0003000004090001001c03f30003000004090002000e040f000300000409
0003001c041d0003000004090004001c04390003000004090006001c0455
0003000104090000006404710003000104090007007604d500a900200032
0030003100370020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e000d0048006500620072006500770020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200063006f0070007900720069006700680074002000a900200032
0030003000330020002600200032003000300037002c002000520061006c
00700068002000480061006e0063006f0063006b002000260020004a006f
0068006e00200048007500640073006f006e002e00200054006800690073
0020006c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020006900730020006f00700065006e00200073006f0075
00720063006500200073006f00660074007700610072006500200075006e
00640065007200200074006800650020004d004900540020004c00690063
0065006e00730065003b002000730065006500200065006d006200650064
0064006500640020006c006900630065006e007300650020006400650073
006300720069007000740069006f006e00200066006f0072002000640065
007400610069006c0073002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303137204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
0d486562726577204f70656e54797065204c61796f7574206c6f67696320
636f7079726967687420a92032303033202620323030372c2052616c7068
2048616e636f636b2026204a6f686e20487564736f6e2e2054686973206c
61796f7574206c6f67696320666f72204269626c6963616c204865627265
77206973206f70656e20736f7572636520736f66747761726520756e6465
7220746865204d4954204c6963656e73653b2073656520656d6265646465
64206c6963656e7365206465736372697074696f6e20666f722064657461
696c732e43484e48414f2b43616c6962726943484e48414f2b43616c6962
726943484e48414f2b43616c6962726943616c6962726920697320612074
726164656d61726b206f6620746865204d6963726f736f66742067726f75
70206f6620636f6d70616e6965732e00430048004e00480041004f002b00
430061006c00690062007200690052006500670075006c00610072004300
48004e00480041004f002b00430061006c00690062007200690043004800
4e00480041004f002b00430061006c006900620072006900430048004e00
480041004f002b00430061006c006900620072006900a900200032003000
3100370020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e00430061006c0069006200720069002000690073002000610020007400
72006100640065006d00610072006b0020006f0066002000740068006500
20004d006900630072006f0073006f00660074002000670072006f007500
700020006f006600200063006f006d00700061006e006900650073002e00
0000b10903415302c802c60038001f02c702c60038001f02dd003802da00
5502d9003802d7005502d8003802d7005502d6003802d5005502d4003802
d3005502d2003802d1005502bf003802be005502bd003802bc0055000402
db003402db005402db0003003402db005402db006402db00a402db00d402
db0005006b02d50001000b02d10001001402c2004402c2006402c2007402
c2009402c2000500a402be000100a402bc000100200284b40918014a20b8
0283b40918014a20b80282b40918014a20b80281b40918014a20b80280b4
0918014a20b8027fb40918014a20b8027eb40918014a20b8027db4091801
4a20b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b8
0279b40918014a20b80278b40918014a20b80277b40918014a20b80276b4
0918014a20b80275b40918014a20b80274b40918014a20b80273b4091801
4a20b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8
026eb40918014a20b8026db40918014a20b8026cb40918014a20b8026bb4
0918014a20b8026ab40918014a20b80269b40918014a20b80268b4091801
4a20b80267b40918014a20b80266b40918014a20b80265b40918014a20b8
0264b40918014a20b80263b40918014a20b80262b40918014a20b80261b4
0918014a20b80260b40918014a20b8025fb40918014a20b8025eb4091801
4a20b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8
025ab40918014a20b80259b40918014a20b80258b40918014a20b80257b4
0918014a20b80256b40918014a20b80255b40918014a20b80254b4091801
4a20b80253b40918014a20b80252b40918014a20b80251b40918014a20b8
0250b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db4
0918014a20b8024cb40918014a20b8024bb40918014a20b8024ab4091801
4a20b80249b40918014a20b80248b40918014a20b80247b40918014a20b8
0246b40918014a20b80245b40918014a20b80244b40918014a20b80243b4
0918014a20b80242b40918014a20b80241b40918014a20b80240b4091801
4a20b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8
023cb40918014a20b8023bb40918014a20b8023ab40918014a20b80239b4
0918014a20b80238b40918014a20b80237b40918014a20b80236b4091801
4a20b80235b40918014a20b80234b40918014a20b80233b40918014a20b8
0232b40918014a20b80231b40918014a20b80230b40918014a20b8022fb4
0918014a20b8022eb40918014a20b8022db40918014a20b8022cb4091801
4a20b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b8
0228b40918014a20b80227b40918014a20b80226b40918014a20b80225b4
0918014a20b80224b40918014a20b80223b40918014a20b80222b4091801
4a20b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8
021eb40918014a20b8021db40918014a20b8021cb40918014a20b8021bb4
0918014a20b8021ab40918014a20b80219b40918014a20b80218b4091801
4a20b80217b40918014a20b80216b40918014a20b80215b40918014a20b8
0214b40918014a20b80213b40918014a20b80212b40918014a20b80211b4
0918014a20b80210b40918014a20b8020fb40918014a20b8020eb4091801
4a20b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8
020ab40918014a20b80209b40918014a20b80208b40918014a20b80207b4
0918014a20b80206b40918014a20b80205b40918014a20b80204b4091801
4a20b80203b40918014a20b80202b40918014a20b80201b40918014a20b8
0200b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb4
0918014a20b801fcb40918014a20b801fbb40918014a20b801fab4091801
4a20b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b8
01f6b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b4
0918014a20b801f2b40918014a20b801f1b40918014a20b801f0b4091801
4a20b801efb40918014a20b801eeb40918014a20b801edb40918014a20b8
01ecb40918014a20b801ebb40918014a20b801eab40918014a20b801e9b4
0918014a20b801e8b40918014a20b801e7b40918014a20b801e6b4091801
4a20b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b8
01e2b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb4
0918014a20b801deb40918014a20b801ddb40918014a20b801dcb4091801
4a20b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b8
01d8b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b4
0918014a20b801d4b40918014a20b801d3b40918014a20b801d2b4091801
4a20b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b8
01ceb40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb4
0918014a20b801cab40918014a20b801c9b40918014a20b801c8b4091801
4a20b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b8
01c4b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b4
0918014a20b801c0b40918014a20b801bfb40918014a20b801beb4091801
4a20b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b8
01bab40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b4
0918014a20b801b6b40918014a20b801b5b40918014a20b801b4b4091801
4a20b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b8
01b0b40918014a20b801afb40918014a20b801aeb40918014a20b801adb4
0918014a20b801acb40918014a20b801abb40918014a20b801aab4091801
4a20b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b8
01a6b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b4
0918014a20b801a2b40918014a20b801a1b40918014a20b801a0b4091801
4a20b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8
019cb40918014a20b8019bb40918014a20b8019ab40918014a20b80199b4
0918014a20b80198b40918014a20b80197b40918014a20b80196b4091801
4a20b80195b40918014a20b80194b40918014a20b80193b40918014a20b8
0192b40918014a20b80191b40918014a20b80190b40918014a20b8018fb4
0918014a20b8018eb40918014a20b8018db40918014a20b8018cb4091801
4a20b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b8
0188b40918014a20b80187b40918014a20b80186b40918014a20b80185b4
0918014a20b80184b40918014a20b80183b40918014a20b80182b4091801
4a20b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8
017eb40918014a20b8017db40918014a20b8017cb40918014a20b8017bb4
0918014a20b8017ab40918014a20b80179b40918014a20b80178b4091801
4a20b80177b40918014a20b80176b40918014a20b80175b40918014a20b8
0174b40918014a20b80173b40918014a20b80172b40918014a20b80171b4
0918014a20b80170b40918014a20b8016fb40918014a20b8016eb4091801
4a20b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8
016ab40918014a20b80169b40918014a20b80168b40918014a20b80167b4
0918014a20b80166b40918014a20b80165b40918014a20b80164b4091801
4a20b80163b40918014a20b80162b40918014a20b80161b40918014a20b8
0160b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db4
0918014a20b8015cb40918014a20b8015bb40918014a20b8015ab4091801
4a20b80159b40918014a20b80158b40918014a20b80157b40918014a20b8
0156b40918014a20b80155b40918014a20b80154b40918014a20b80153b4
0918014a20b80152b40918014a20b80150b40918014a20b8014fb4091801
4a20b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8
014ab40918014a20b80149b40918014a20b80148b40918014a20b80147b4
0918014a20b80146b40918014a20b80145b40918014a20b80144b4091801
4a20b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e
1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8
027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279
b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d
411fb80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421f
b80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb802
6cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b2
1c451fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c45
1fb80263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8
025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025b
b21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c
451fb80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451f
b80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb802
4eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab2
1b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b
1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb8
0241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023d
b21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b
4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491f
b80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb802
30b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb2
1b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c
1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb8
0223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021f
b21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b
4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1f
b80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb802
12b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb2
1a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e
1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb8
0205b219511fb80204b219511fb80203b219501fb80202b219511fb80201
b219511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219
511fb801fcb219511fb801fbb219511fb801fab219501fb801f9b219511f
b801f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801
f4b218531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b2
18531fb801efb218541fb801eeb218541fb801edb218541fb801ecb21853
1fb801ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb8
01e7b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3
b218541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218
531fb801deb218541fb801ddb218541fb801dcb218541fb801dbb218541f
b801dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801
d6b217561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b2
17571fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb21757
1fb801cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb8
01c9b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5
b217571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217
571fb801c0b217571fb801bfb217561fb801beb217561fb801bdb217571f
b801bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801
b8b217561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b2
17571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b
1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb8
01abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7
b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b216
5b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1f
b8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb801
9ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2
165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f
1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8
018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189
b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215
621fb80184b215621fb80183b215661fb80182b215661fb80181b215551f
b80180b215451fb8017fb215361fb8017eb215361fb8017db215611fb801
7cb215621fb8017bb215621fb8017ab215641fb80179b215661fb80178b2
15661fb80177b215661fb80176b215661fb80175b215661fb80174b21566
1fb80173b215451fb80172b215621fb80171b215621fb80170b215631fb8
016fb215641fb8016eb215661fb8016db215661fb8016cb215661fb8016b
b215661fb8016ab215661fb80169b215621fb80168b215621fb80167b215
611fb80166b215641fb80165b215641fb80164b215661fb80163b215661f
b80162b215661fb80161b215661fb80160b215661fb8015fb215661fb801
5eb215551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab2
15611fb80159b215621fb80158b215621fb80157b215631fb80156b21564
1fb80155b215661fb80154b215661fb80153b215661fb80152b215661fb8
0151b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014d
b2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214
401fb80148b214401fb80147b214411fb80146b2147e1fb80145b214871f
b80144b2147f1fb80143b214801fb80142b212461fb80141b212461fb801
40b212461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb2
11591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b21147
1fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb8
0133b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012f
b211571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb211
5a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1f
b80126b2115b1fb80125b211561fb80124b211561fb80123b211571fb801
22b211581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2
115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b
1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb8
0115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111
b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db210
5f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1f
b80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb801
04b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040
ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f
631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631f
f10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f
641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681f
e20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e
681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261f
d30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d
6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671f
c40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311f
bd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c
711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791f
ae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b
7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f
9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b
7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f
900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301
381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab
7ddb7d4012060a7c557a557bab7a557955775578ab7755ba028600660285
403c5576ab755504751475747503f47501ab750144750130750102007510
752075030c7455725573ab7255007250728072b072043bb072e072020072
010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d
556a03251f6938675568ab67556638645565ab645563386255613860555f
385d555eab5d555c385a555bab5a55593858555703251f5638545555ab54
555338515552ab51554f384e554e03251f4d384b554cab4b554a38485549
ab4855473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b
0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f
19016f197f198f19030f18cf18024018292c460f17cf17df17ef17041340
17292e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ff
c0b316313546b8ffc0401f162326460f15010f151f150245ef1501860003
012001010001100120010308b8ffc0b401151f4603bd0100010000050001
019000542b4bb80800524bb008505bb00188b02553b00188b040515ab006
88b000555a5b58b101018e59b101024354b0144b515a58b101018e59858d
8d001d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0
ff5358b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf
10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e31
37460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f
0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120010100011001
20010308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b7374
2b7374745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e
73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e
73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2bb1000243545841ff0284006402830064028200640281006402
800064027f0064027e0064027d0064027c0064027b0064027a0064027900
640278006402770064027600640275006402740064027300640271006402
700064026f0064026e0064026d0064026c0064026b0064026a0064026900
640268006402670064026600640265006402640064026300640262006402
61006402600064025f0064025e0064025d0064025c0064025b0064025a00
640259006402580064025700640256006402550064025400640253006402
5200640251006402500064024f0064024e0064024d0064024c0064024b00
64024a006402490064024800640247006402460064024500640244006402
430064024200640241006402400064023f0064023e0064023d0064023c00
64023b0064023a0064023900640238006402370064023600640235006402
34006402330064023200640231006402300064022f0064022e0064022d00
64022c0064022b0064022a00640229006402280064022700640226006402
2500640224006402230064022200640221006402200064021f0064021e00
64021d0064021c0064021b0064021a006402190064021800640217006402
160064021500640214006402130064021200640211006402100064020f00
64020e0064020d0064020c0064020b0064020a0064020900640208006402
0700640206006402050064020441ff006402030064020200640201006402
00006401ff006401fe006401fd006401fc006401fb006401fa006401f900
6401f8006401f7006401f6006401f5006401f4006401f3006401f2006401
f1006401f0006401ef006401ee006401ed006401ec006401eb006401ea00
6401e9006401e8006401e7006401e6006401e5006401e4006401e3006401
e2006401e1006401e0006401df006401de006401dd006401dc006401db00
6401da006401d9006401d8006401d7006401d6006401d5006401d4006401
d3006401d2006401d1006401d0006401cf006401ce006401cd006401cc00
6401cb006401ca006401c9006401c8006401c7006401c6006401c5006401
c4006401c3006401c2006401c1006401c0006401bf006401be006401bd00
6401bc006401bb006401ba006401b9006401b8006401b7006401b6006401
b5006401b4006401b3006401b2006401b1006401b0006401af006401ae00
6401ad006401ac006401ab006401aa006401a9006401a8006401a7006401
a6006401a5006401a4006401a3006401a2006401a1006401a00064019f00
64019e0064019d0064019c0064019b0064019a0064019900640198006401
970064019600640195006401940064019300640192006401910064019000
64018f0064018e0064018d0064018c0064018b0064018a00640189006401
880064018700640186006401850064418001840064018300640182006401
81006401800064017f0064017e0064017d0064017c0064017b0064017a00
640179006401780064017700640176006401750064017400640173006401
7200640171006401700064016f0064016e0064016d0064016c0064016b00
64016a006401690064016800640167006401660064016500640164006401
630064016200640161006401600064015f0064015e0064015d0064015c00
64015b0064015a0064015900640158006401570064015600640155006401
540064015300640152006401500064014f0064014e0064014c0064014b00
64014a006401490064014800640147006401460064014500640144006401
4300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b
185f5e0000>]def 
/GlyphDirectory 16 dict def
CIDFontName currentdict end /CIDFont defineresource pop
ct_GlyphDirProcs begin
/RAMBAA+Calibri 6 GetGlyphDirectory
1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500> |
1009 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00> |
1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a> |
1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00> |
1007 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b> |
1008 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00> |
0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d> |
!
end
/RAMBAA+Calibri-Identity-H /Identity-H 0 [/RAMBAA+Calibri] ct_ComposeFont pop
end end
%ADOEndSubsetFont
/EYPFAS+Calibri /RAMBAA+Calibri-Identity-H findfont ct_VMDictPut
EYPFAS+Calibri [7.98 0 0 -7.98 0 0 ]msf
5.53558 128.818 mo
(\003\354)sh
5.53558 116.638 mo
(\003\361)sh
1.45541 104.458 mo
(\003\355\003\354)
[4.08096 0 ]xsh
1.45541 92.2782 mo
(\003\355\003\361)
[4.08096 0 ]xsh
1.45541 80.0983 mo
(\003\356\003\354)
[4.08096 0 ]xsh
1.45541 67.9185 mo
(\003\356\003\361)
[4.08096 0 ]xsh
1.45541 55.7386 mo
(\003\357\003\354)
[4.08096 0 ]xsh
1.45541 43.5587 mo
(\003\357\003\361)
[4.08096 0 ]xsh
1.45541 31.3788 mo
(\003\360\003\354)
[4.08096 0 ]xsh
1.45541 19.1391 mo
(\003\360\003\361)
[4.08096 0 ]xsh
1.45541 6.95923 mo
(\003\361\003\354)
[4.08096 0 ]xsh
14.9552 139.259 mo
(\003\354\003\361\003\355\003\354\003\355\003\361\003\356\003\354\003\356\003\361\003\357\003\354)
[53.1612 51.1215 4.08095 49.0212 4.08093 49.081 4.08093 49.081 4.08096 49.0212 4.08096 0 
]xsh
57.7356 27.1781 mo
59.6556 27.1781 li
59.8956 27.1781 60.1356 27.4182 60.1356 27.6581 cv
60.1356 27.8981 59.8956 28.1381 59.6556 28.1381 cv
57.7356 28.1381 li
57.4956 28.1381 57.2556 27.8981 57.2556 27.6581 cv
57.2556 27.4182 57.4956 27.1781 57.7356 27.1781 cv
cp
61.5756 27.1781 mo
63.4956 27.1781 li
63.7356 27.1781 63.9756 27.4182 63.9756 27.6581 cv
63.9756 27.8981 63.7356 28.1381 63.4956 28.1381 cv
61.5756 28.1381 li
61.3356 28.1381 61.0956 27.8981 61.0956 27.6581 cv
61.0956 27.4182 61.3356 27.1781 61.5756 27.1781 cv
cp
65.4156 27.1781 mo
67.3356 27.1781 li
67.5756 27.1781 67.8156 27.4182 67.8156 27.6581 cv
67.8156 27.8981 67.5756 28.1381 67.3356 28.1381 cv
65.4156 28.1381 li
65.1756 28.1381 64.9356 27.8981 64.9356 27.6581 cv
64.9356 27.4182 65.1756 27.1781 65.4156 27.1781 cv
cp
69.2556 27.1781 mo
71.1756 27.1781 li
71.4156 27.1781 71.6556 27.4182 71.6556 27.6581 cv
71.6556 27.8981 71.4156 28.1381 71.1756 28.1381 cv
69.2556 28.1381 li
69.0156 28.1381 68.7756 27.8981 68.7756 27.6581 cv
68.7756 27.4182 69.0156 27.1781 69.2556 27.1781 cv
cp
73.0956 27.1781 mo
75.0156 27.1781 li
75.2556 27.1781 75.4956 27.4182 75.4956 27.6581 cv
75.4956 27.8981 75.2556 28.1381 75.0156 28.1381 cv
73.0956 28.1381 li
72.8556 28.1381 72.6156 27.8981 72.6156 27.6581 cv
72.6156 27.4182 72.8556 27.1781 73.0956 27.1781 cv
cp
76.9356 27.1781 mo
78.8556 27.1781 li
79.0956 27.1781 79.3356 27.4182 79.3356 27.6581 cv
79.3356 27.8981 79.0956 28.1381 78.8556 28.1381 cv
76.9356 28.1381 li
76.6956 28.1381 76.4556 27.8981 76.4556 27.6581 cv
76.4556 27.4182 76.6956 27.1781 76.9356 27.1781 cv
cp
80.7756 27.1781 mo
82.6956 27.1781 li
82.9356 27.1781 83.1756 27.4182 83.1756 27.6581 cv
83.1756 27.8981 82.9356 28.1381 82.6956 28.1381 cv
80.7756 28.1381 li
80.5356 28.1381 80.2956 27.8981 80.2956 27.6581 cv
80.2956 27.4182 80.5356 27.1781 80.7756 27.1781 cv
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: RAMBAA+Calibri AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
ct_GlyphDirProcs begin
/RAMBAA+Calibri 11 GetGlyphDirectory
24 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1> |
258 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
> |
410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18> |

3 <>  |
4 <00020023fffa047e05140022002600dcb0852b58b90024ffe8b40c10014c
23b8ffe8b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8ff
f0401a0b10014c25100b10014c0d100b10014c0c100b10014c40280125b8
fff0402c0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02
af23bf23cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d11
173911123939113310ed3211333130012b5d2b2b2b2b2b2b002b2b1b401e
2423260c25f46c0b0c18221d230a0d0116040c230c230c121d5212550555
00183f3f3f1239392f2f1117391112393911332b32113330315925161606
0623222e02270321030e03232226263637013e0333321e02170723032104
75080110251f1f251309046ffde66a030a13231c1d250f010801b2040d19
271e202a1a0e047b01df01c23d161b0e0403070c09013bfec9090d090405
0e1b1604b20b0e080303080f0b8dfd7b> |
!
end
end end
%ADOEndSubsetFont
EYPFAS+Calibri [7.98 0 0 -7.98 0 0 ]msf
85.6956 29.9378 mo
(\000\030\001\002\001\232\001\002\000\003\000\004)
[4.92845 3.84314 2.69406 3.7802 1.85936 0 ]xsh
57.7356 39.4181 mo
82.9356 39.4181 li
83.1756 39.4181 83.4156 39.6581 83.4156 39.8981 cv
83.4156 40.1381 83.1756 40.3781 82.9356 40.3781 cv
57.7356 40.3781 li
57.4956 40.3781 57.2556 40.1381 57.2556 39.8981 cv
57.2556 39.6581 57.4956 39.4181 57.7356 39.4181 cv
.190097 .83154 .718898 .0656443 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: RAMBAA+Calibri AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
ct_GlyphDirProcs begin
/RAMBAA+Calibri 12 GetGlyphDirectory
17 <000300ac00000401050e001e002b003800f7b0852b58401a1f1810014d1f
100f014d1f100d014d1f180c014d1f200b014d1fb8022e40281a15401001
4d15400f014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c
200b014d2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0
b30f014d33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b8
0210400da00bc00b020b1a27f431310724b80109b2105134b8010bb10754
003fed3fed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b1239
2f2b2b39e12b2b2b2b2b31301b400a1a3127f46c3131071024b80109b46c
10510734b8010bb26c075400183f2b3f2b12392f2b3930315901140e0423
212226351134363321321e0215140e02071e0301342e0223231133323e02
13342e0223231133323e0204011f384f637149feae172929170126749463
32162b412a355c4528fefd1a385a4ab2c4435236194e25476b51cefa3b58
432601733d67523e2a151f270482271f2c547a4d2e544738120a35526e02
012f4c351cfe5d233b4ffddd3a583c1ffe381c375200> |
!
end
end end
%ADOEndSubsetFont
EYPFAS+Calibri [7.98 0 0 -7.98 0 0 ]msf
85.6956 42.1778 mo
(\000\030\001\002\001\232\001\002\000\003\000\021)
[4.92845 3.84314 2.69406 3.7802 1.85936 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/EYPFAS+Calibri-Identity-H uf
/EYPFAS+Calibri /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 174 x Ff(Fig.)14 b(1.)24 b Fi(A)g(\014gure)g(caption)h(is)
g(alw)n(a)n(ys)g(placed)g(b)r(elo)n(w)g(the)f(illustration.)i(Please)g
(note)f(that)f(short)523 1821 y(captions)d(are)g(cen)n(tered,)f(while)h
(long)g(ones)g(are)g(justi\014ed)f(b)n(y)g(the)g(macro)h(pac)n(k)l(age)
f(automatically)-6 b(.)523 2107 y Fd(Theorem)31 b(1.)41
b Fc(This)28 b(is)g(a)f(sample)h(the)l(or)l(em.)g(The)g(run-in)e(he)l
(ading)j(is)e(set)g(in)g(b)l(old,)h(while)523 2207 y(the)23
b(fol)t(lowing)j(text)c(app)l(e)l(ars)j(in)e(italics.)i(De\014nitions,)
e(lemmas,)h(pr)l(op)l(ositions,)i(and)d(c)l(or)l(ol-)523
2306 y(laries)31 b(ar)l(e)f(style)l(d)g(the)g(same)g(way.)523
2481 y(Pr)l(o)l(of.)43 b Fj(Pro)r(ofs,)27 b(examples,)h(and)g(remarks)e
(ha)n(v)n(e)h(the)i(initial)f(w)n(ord)g(in)g(italics,)g(while)h(the)523
2580 y(follo)n(wing)e(text)h(app)r(ears)e(in)i(normal)e(fon)n(t.)523
2755 y(F)-7 b(or)27 b(citations)g(of)g(references,)f(w)n(e)h(prefer)f
(the)i(use)f(of)g(square)f(brac)n(k)n(ets)g(and)h(consecutiv)n(e)523
2854 y(n)n(um)n(b)r(ers.)j(Citations)g(using)g(lab)r(els)g(or)g(the)h
(author/y)n(ear)c(con)n(v)n(en)n(tion)i(are)g(also)h(accept-)523
2954 y(able.)37 b(The)g(follo)n(wing)e(bibliograph)n(y)h(pro)n(vides)f
(a)i(sample)f(reference)g(list)h(with)h(en)n(tries)523
3054 y(for)e(journal)f(articles)g([1],)h(an)g(LNCS)g(c)n(hapter)f([2],)
h(a)g(b)r(o)r(ok)g([3],)g(pro)r(ceedings)f(without)523
3153 y(editors)27 b([4],)g(and)h(a)f(homepage)f([5].)i(Multiple)g
(citations)f(are)g(group)r(ed)g([1{3],)f([1,)13 b(3{5].)523
3419 y Fe(References)523 3610 y Fi(1.)42 b(Author,)25
b(F.:)i(Article)f(title.)g(Journal)h Ff(2)p Fi(\(5\),)f(99{110)i
(\(2016\))523 3701 y(2.)42 b(Author,)c(F.,)g(Author,)g(S.:)g(Title)h
(of)g(a)f(pro)r(ceedings)h(pap)r(er.)f(In:)g(Editor,)h(F.,)f(Editor,)h
(S.)624 3792 y(\(eds.\))18 b(CONFERENCE)f(2016,)i(LNCS,)e(v)n(ol.)g
(9999,)i(pp.)e(1{13.)i(Springer,)f(Heidelb)r(erg)f(\(2016\).)624
3884 y(h)n(ttps://doi.org/10.10007/12)q(34)q(567)q(89)q(0)523
3975 y(3.)42 b(Author,)23 b(F.,)g(Author,)g(S.,)g(Author,)g(T.:)h(Bo)r
(ok)f(title.)h(2nd)f(edn.)g(Publisher,)g(Lo)r(cation)i(\(1999\))523
4066 y(4.)42 b(Author,)20 b(A.-B.:)h(Con)n(tribution)g(title.)g(In:)f
(9th)h(In)n(ternational)f(Pro)r(ceedings)i(on)f(Pro)r(ceedings,)624
4158 y(pp.)26 b(1{2.)h(Publisher,)f(Lo)r(cation)h(\(2010\))523
4249 y(5.)42 b(LNCS)26 b(Homepage,)g(h)n(ttp://www.springer.com/lncs.)k
(Last)c(accessed)h(4)f(Oct)g(2017)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
